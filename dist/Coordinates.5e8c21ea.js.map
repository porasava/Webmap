{"version":3,"sources":["../src/events/Event.js","src/ObjectEventType.js","src/Disposable.js","src/array.js","src/functions.js","src/obj.js","../src/events/Target.js","../src/events/EventType.js","src/events.js","src/Observable.js","src/util.js","src/Object.js","src/MapEventType.js","src/has.js","src/dom.js","../src/control/Control.js","../src/pointer/EventType.js","../src/proj/Units.js","../src/proj/Projection.js","src/math.js","../src/proj/epsg3857.js","../src/proj/epsg4326.js","../src/proj/projections.js","../src/proj/transforms.js","../src/extent/Corner.js","../src/extent/Relationship.js","src/AssertionError.js","src/asserts.js","src/extent.js","src/string.js","src/coordinate.js","../src/geom/GeometryType.js","src/sphere.js","src/proj.js","../src/control/MousePosition.js","Scripts/Coordinates.js"],"names":["map","$","data","mousePosition","MousePosition","coordinateFormat","createStringXY","className","target","addControl"],"mappings":";;AmCAA;;AACA;;;ApBEA,AmBCA,A3BJA,ADGA,AkBHA,ACAA,AMAA,AfAA,AKGA,AKAA,AxBHA,AUAA,ADGA,AVHA,A0BGA,AdHA;AKGA,ADHA,AkBGA,A1BAA,AoBHA,IMGMA,GAAG,GAAGC,CAAC,CAAC,MAAD,CAAD,CAAUC,IAAV,CAAe,KAAf,CAAZ;ApBCA,AmBCA,AlCLA,AMIA,AcDA,ACCA,ACJA,AaIA,AxBAA,AHDA,AEHA,IyBIMC,aAAa,GAAG,IAAIC,sBAAJ,CAAkB;AjBJxC,AKGA,AdCA,AIAA,ARJA,E8BKIC,EtBDE,EAAE,GACN,OAAO,EsBAW,EAAC,IAAAC,CtBAnB,KAAqB,WAArB,IAAoC,KsBAjB,EAAe,AtBAS,CsBAxB,CADmB,OtBCc,CAAC,SAAjB,KAA+B,WAAnE,GACI,SAAS,CAAC,SAAV,CAAoB,WAApB,EADJ,GAEI,EAHN;AECA,AmBCA,A3BFA,ADCA,AkBDA,ACAA,AMAA,AfAA,AIAA,AlBAA,AUAA,ADCA,AVDA,A0BJA,AnBAA,AJIA,ASKA,AmBNA,EGGIC,SAAS,EAAE,0BAFyB;AlBAxC,AMJA,AdKA,AoBDA,EMGIC,MAAM,EAAE;ApBDZ,AmBMA,AlCRA,AMEA,AcDA,AEDA,AaAwC,AxBExC,AGNA,AVAA,A4BIA,AtBAA,CyBAsB,CAAtB;AjBCA,AiBKAR,A9BNA,G8BMG,CAACS,UAAJ,CAAeN,AvBHA,AXAA,akCGf;ApBHA,AbCA,ASDA,AgBFA,AbHA,ANGA,EIGE,AXAA,ECAF,UAAA,CKAe,AiBAA,ACAA,ATAA;AMDf,ACFA,ArBGA,AWKO,AHND,EHEJ,AiBAA,ACAA,ATAA,EMFE,ATMS,KYJJ,AHFA,AZAO,EeEL,AZIS,CYLL,AHDH,CEEC,ARAA,CMFb,ATMuB,CWJR,ARAA,CHIU,CAAC,AHNpB,GAAkB,IGMD,CAAW,GWLnB,ARAA,MHKQ,MAA0B,CAAC,CAA3C;AqBbP,AjBSA,AKAA,ApBDA,AEFA,ASSA,AmBfA,ERUE,ACAA,ATAA,ANFA,EOCI,KAAK,GAAG,AfDd,CcEa,CQAC,ACAA,CMAC,AfAA,CQAC,ACAA,CAFD,WTAA,EQAA;ArBRf,AWMA,AeIM,ELCJ,ACAA,AMAA,AfAA,ACDA,AfDA,EQDO,GeGF,AMAA,ENAE,AMAA,AFDO,CLCN,ACHK,CTGJ,AdFT,CsBEU,CRAC,GeDE,EFAT,CAAoB,E3BDxB,CsBDa,ERAA,AdCb,C2BCI,EAA4B,KAA5B,EAAmC,aAAnC,EAAgD;AFDhD,EHGJ,ACAA,AMAA,AfAA,AaDA,E3BDE,AQDC,EmBEG,CJCD,EAAE,AEHO,CFDD,CDIJ,EAAE,AOAA,AfAA,EeAE,AfAA,AWHT,CAAiB,AjBAlB,EmBEe,GAChB,IFHE,EICS,AJDmB,CXDnB,MaIE,EFHX,EAAqC,CEGrB,SAAlB,GAA8B,MAAM,CAAC,OAAP,CAAe,aAAf,CAA9B,GAA8D,KAAK,MADrE;ALHa,ADCf,ATFA,AKPA,EMaE,AMAA,AfAA,AJAA,AXAA,A0BHA,AEGA,ENJE,EICE,AEGA,AnBHA,CeGC,AEHA,EFGE,CALM,ETKH,AJAA,AFHA,CqBGC,AFAA,CbAC,AOJA,AXIA,CmBAC,C9BAC,A0BHd,AEGc,AnBHA,CaDC,CtBIC,A0BHA,CJDlB,EbCY,CAAU,IMFP,AJDA,CmBGA,CFGa,CAAC,OAAb,CAAqB,GAArB,CAAd,anBHU,CAAN;AYEA,ACDN,AtBJe,AGGT,A4BJN,EzBQE,AkBAA,AMAA,AfAA,AaAA,EFHE,AjBAC,CAFD,CeKE,ElBAE,AkBAA,CMAC,ATFO,AlBFA,AyBIP,CtBAC,AoBHA,CIGC,CFAC,CzBJN,CYIQ,AMFR,AKDQ,EXGE,AZJI,CkBEC,CfJN,CsBMI,CEJJ,IFIS,CAAC,CAAb,GAAiB,CbNd,OWGL,CAAmB,GEGY,CAAC,KFHhC,CAAN,AEGQ,GAAuC,OAAjD;AJNa,AxBQf,AEZA,A2BDA,ECYE,AfAA,ACDA,AKDA,AVEA,AeHC,AvBDD,AyBIA,AnBPA,KYKK,ELCE,AbHA,AyBIA,CPFC,CLCC,CKDT,CSEW,A3BJX,CYIY,CeAC,CfAC,AaAA,GAAG,CZNL,IYML,GELM,AFMT,GbRS,SaON,GAEH,IAAI,KAAJ,CAAU,IAAI,KAAJ,GAAY,OAAtB,EAA+B,IAA/B,CAAoC,GAApC,IAA2C,YAF/C;A7BDF,AsBAC,AKDA,AvBDA,ASOM,ARNA,AwBKN,AnBLA,EHGC,AwBAA,AfAA,EhBFF,AaKa,ARNA,MQMM,ARNA,GLCnB,AaKsB,ARLpB,EWEa,AHGS,CAAC,CGHR,EeAE,C1BFV,C0BEY,ElBGC,CAAW,ERLlB,CAAC,KQKM,CRLpB,K0BJa,AlBSgC,ARLpB,CQKqB,CAA1B,IAA+B,EAAE,CAAC,CRLtD,GACI,GQI+C,CAAW,ERJpD,CAAC,IQIwC,ERLnD,GQK0E,ARHtE,CQGuE,CAAtE,QRHS,MAAV,EAAkB,WAAlB,EAA6B;ALFnC,AgBNe,AMQf,AQZA,AtBUA,AJAA,ASOA,AMjBA,AUgBA,AnBLA,EqBEE,AdFA,AZEM,EHFJ,EGEQ,GHFH,GGES,G0BAH,EAAE,A7BFb,AGEmB,GHFH,KAAhB,CGEQ,IAAwB,C0BPrB,K1BO2B,KAAK,IAAvC,EAA6C;ALHrD,AuBAM,EQIJ,A7BFC,EGEO,KkBJM,ClBIA,ELJhB,EuBAM,AlBIc,GkBJC,IQIA,EAAE,A1BAP,CAAc,mB0BRf,yB1BQC,CAAN;AyBbV,E9BUE,A+BIA,ARJA,ArBGA,AGCO,M0BAD,EAAE,ERJE,GAAG,EAAb;AQLa,ARMd,EXIC,SAAS,EAAE,WAbE;AWWf,AOlBA,AhBeM,EPMJ,AUFA,AZEM,IAAM,CEAP,EAAE,AUFA,AHJO,EGIL,CZES,GAAG,CEbR,IUCD,CZYe,CAAC,MAAD,CAArB,CSNF,CACJ,SADI,EAEJ,UAFI,EAGJ,cAHI,EAIJ,qBAJI,EAIiB;EdDrB,AOKA,AKDA,AEDA,IPEI,EAAE,GPLN,GOVa,MPUb,CAAY,IAAZ,EAAgB;AIAZ,ASOC,ENDL,AUJA,AHEA,ATAM,ELHJ,AaMS,ECHP,CPEC,AFFM,EEEJ,AHNO,ECIC,CSAf,ATAgB,EDJZ,CCIe,CEdN,AFcF,CDJQ,CCIG,EAAE,CQGI,ERHD,CQI3B,MAAM,ERJ8B,CAAC,CQKrC,CAAC,EACC,EAAE,ARNE,CQMD,CRNwC,CAAC,GAAG,EQM/C,ARNI,CQMO,CRNwC,EAAE,CAAjD,EAAoD,QQMxD,KAA8B,CAA9B,IACA,EAAE,CAAC,KAAH,CAAS,uCAAT,CAFD,CAFI;ASJD,AnBRA,AUmBN,AHZA,EHKE,ALJA,AEFA,ECIQ,AKHN,ILGY,CiBFA,AnBRA,ACMP,GkBEH,ApBAJ,CKIW,AeJO,ApBAlB,CEFA,ACIoB,CEEP,AGLA,EYCT,AjBEmB,CKHP,CYCM,AZDxB,EPPM,CDQJ,ACR2B,CDQ3B,GGEgC,CAAC,CEfpB,AFemB,CAAxB,CHFR,ACRI,EAAiC,CDQrC,KCRI,EAAyC,KDQ7C,SCRI,EAAuD;A2BN7D,AtBeA,AJFC,AeRK,AUcA,AnBJN,EHIE,AeJA,AnBRA,AWSA,EZDE,ECRE,AWSA,CPGC,CLJC,CKIC,AeHL,ApBDK,ACRP,AgBFc,AUcA,E1BZL,GmBSF,ApBDK,ACRZ,AgBFI,CGWI,AHXY,CZJP,GeeN,CAAL,ARAgB,AKXd,EjBUF,AiBVyB,EGYzB,ApBFoB,AYCA,AeGlB,CVdA,AUc0B,EVdE,AUc5B,EPFG,AOE2B,CPF1B,AHZJ,CUcA,CVd+B,CUcC,CPFxB,CAAC,GRDuB,CAAC,GQC7B,CAAa,ERDrB,EAA6C,oCQCrC,EAAuD,SAAvD,CAAD,CADL,IAEA,IAHF;AJEF,AIGC,AI3BD,AtBsBA,A4BJA,EzBSE,AJZA,AgBFA,AUcA,E7BLE,AcEA,ATAM,EHDJ,ACRE,A0BYA,ExBHM,AwBGJ,C7BLD,AmBTA,CZcC,AOHA,CZDC,A2BIE,CtBAD,AsBAE,CfHD,AKXA,CAAC,AdWM,EFTF,CgBFT,AUcU,CVdD,CjBUZ,ACRe,AESI,AwBGZ,EAAU,CtBnBR,ALeO,AiBVA,CAAC,GjBUjB,AiBVY,AUcL,C7BLT,AcEuB,AKXA,AUcE,CfHD,ATAd,EwBGD,CAAX,CVdgB,AdWoB,CFTH,AWStB,CKXqB,CLW9B,EXTmC,AgBFrB,CAAT,AdWmC,EcXJ,GAA/B,AdWwC,CcX/C,GdWQ,EAA6C,aFTrD;AmBcF,AHfC,EZcC,AUJA,ALGA,ATXA,AWSC,AeGD,CfLA,CdCE,EiBAE,AfAA,ACRA,AESM,AwBGJ,EZJA,AYIE,CjBDD,ATXA,AWSA,EPGE,ALJA,AUGA,APFM,AwBGJ,CZnBC,AdOF,A0BYE,CtBAD,AJZX,AWSW,ETAU,EwBGJ,CxBHP,CwBGC,CjBrBE,CiBqBQ,CxBHO,EEjBf,ELgBT,A2BIO,CAAgB,CxBHjB,EAA0B,AwBGzB,CAAX,UfHO,EAA6B;AKTtC,EZaE,AJZA,EDQG,AYCD,EXTE,EESQ,EEGJ,AJZA,AWSA,EPGE,AFHM,CFTL,AWSA,IAAI,CTAO,CAAC,EFTJ,CITN,AJSO,MAApB,IWSW,CAAoB,ATAf,CAAsB,GAAtB,CAAJ,EAAgC,ESAJ,IAAI,GAAjC,EAAsC,UAAU,IAAI,GAApD,CAAT;EPIF,AULA,AfCC,AUGD,ATXA,AWSC,AeGD,C3BTA,AYIO,GPKH,AJZA,C0BYC,CtBAC,COHC,CTAO,CFTL,A0BYA,CAAC,EtBtBG,AJUD,C0BYC,CxBHO,AwBGpB,CxBHqB,CwBGL,C1BZhB,A0BYiB,CxBHG,CAAN,CwBGM,ExBHQ,EwBGJ,CAAC,GxBHS,AwBGd,CxBHe,AwBGN,EAAE,CxBHG,AwBGF,CxBHlB,KwBGM,EAAoB,EAAE,CAAC,MAAvB,CAApB,EAAoD,CAAC,EAArD,EAAyD;AR9B3D,Ab2BA,AKSO,ENLL,ALHA,EYAE,ADQS,AgBLT,GtBAG,CFHQ,AwBGL,CtBAD,COHC,ADQS,AgBLP,GfHC,ADQS,AgBLP,EhBKS,CN5BT,AM4BU,KCRJ,AeGE,CfHD,AeGE,ChBKF,CAAW,AgBLP,CAAC,CAAD,CAAF,IAAS,ChBKX,EgBLC,CfHV,CAAuB,AeGE,EhBKS,AgBLxB,ChBKyB,AgBL5C,ChBKkB,ICRT,ADQwC,CCRjD,CDQmD,CAAC,OAAH,CAAW,MAAX,KAAsB,CAAC,CAArE;AUVD,AGrBN,AIQA,AjByBA,AmBfO,EzBSL,AJZA,AWSC,EdFC,AgCJS,AHST,ExBHS,EwBGH,C7BLD,AOKA,AgBNO,ApBNP,C0BYG,CtBAD,CgBNL,ApBNM,CoBMQ,AMML,E1BZA,G6BGY,CTGrB,ApBNJ,CIZa,CgBkBa,ApBNP,A6BGS,AHSP,CAAC,EAAE,C7BLtB,A6BKuB,CAAD,CAAF,GGTjB,CHS0B,CNN3B,EAAmC,AMMlB,EAAe,EAAf,CAAnB,MNNE,EAA8C;ASDpD,EzBQE,AgBNA,EvBEE,AGRA,AESO,EkBHH,IhBME,EAAE,IgBNM,GAAG,GhBnBN,GgBmBY,CAAC,OAAP,EAAnB;Ad3BF,AL2BM,EGOJ,AULA,AMDA,ATEA,ATCO,EwBGL,EtBAE,AgBNE,ATEF,EPIE,AULA,AYKA,CzBPQ,CaEN,AYKA,GZzBI,AbkBR,AyBOO,CtB1BE,COsBb,AeIE,CzBPgB,CUGH,AVHQ,AyBOR,INNM,GAAG,WAAW,CAAC,OAAZ,EAAxB;AjB5BF,AcAA,AEkCM,AdHN,AJFA,EGME,AKDA,ETXE,AWQA,EeIE,C1BZC,CIYC,CeDQ,CfCN,AJZA,AWQA,CFGC,AEHA,CQGL,CAAc,AVAP,ATXA,A0BYA,CAAP,EfJF,CQGE,AnBXY,CIfH,Ce0BW,ARHP,EXRG,GShBP,ATgBU,GAAR,CWQb,CQGE,EAA8B,AnBXH,CAApB,CAAT;AkBjBJ,AXyBM,EHKJ,AUNA,AKKA,ACNA,ATGC,ATAK,EFRJ,A0BYC,ENPC,CDMC,AnBXA,CmBWC,ACNA,ClBGO,AKDC,CPPN,CIYC,AJZA,CmBWJ,CfCM,AeDX,EjBHM,AKDF,CYIU,AZJO,EaFL,CbEZ,EPPe,AOOK,CaFJ,ApBLA,EIhBP,Ee2Bb,InBX4B,CAAC,CoBKzB,CAAJ,CpBL4B,CoBKK,ApBLd,EAAgB,MAAhB,CAAjB;AYxBJ,AOoCC,AI1BD,AfVA,ANiCO,CApBA,CEwBL,ALLA,AUIA,AFJA,EaFE,AGpBJ,GnB2BO,EAAE,AGLA,GRAP,AQAU,CRAV,AQAW,CaFC,CAAC,GGpBf,ChBsBS,GRAP,CAAA,CQAsB,CaFV,CAAV,CbEuB,CAAC,CaFC,EAAzB,GbEoB,GAAa,CRAnC,GAAA,EQAyC,CAAC,EAAE,ORA5C,CAAoB,CAApB,EQAyC,CAAlC,CAAP;AHxBa,AmBEf,AbgCO,ARPP,AKFC,EaFE,ATED,EXPE,AUgBS,AgBLT,EfJE,CDSU,CVhBR,A0BWA,EhBKW,AgBLT,C1BXC,CUgBU,CAAC,AgBLT,C1BXC,C0BWV,CfJF,CXPE,A0BWa,CfJC,CXPC,CUgBA,CAAW,WAAX,MAA4B,CAAC,CAAzC;AqB5BP,ARJA,AjBHA,AIqCA,AHTA,ERFA,EFCI,AcAA,EXPE,A0BWA,G7BJG,AEDT,CwBvBA,AZwBU,CAAC,EdAP,A6BIS,CAAC,CAAR,C7BJU,A0BxBhB,CZwBI,CYxBJ,CxBuBA,CFCI,AcAgB,UAAhB;AR1BJ,AcDA,AlBCA,A4BaA,AXIO,CjBjBP,Ce0BE,AMFA,AGtB2B,AZyB1B,CZ3BH,AYWuB,CdiBnB,AcAF,AKXW,AUcR,E1BXC,EcME,AETS,ChBGR,CcMC,CSxBmB,APeR,CIOT,AGtBiB,AvBkBjB,CoBIC,EpBJE,GcnBD,AdmBI,CAAZ,IoBIM,AJPS,CIOnB,CAAuB,CGtBI,EAAA,MAAA,CAAA,KHsB3B,IAA0C,WAA1C;AACD,EGtBC,APeA,AUcC,E1BXE,CAHD,MAGO;AYpBX,AmBQA,AbLO,AEuBP,AZ1BA,EM0BE,ALMA,AOdA,EeVI,AbLO,ElBkBP,GSWG,CS7BU,CT6BR,ES7BW,CaKN,ChCkBD,EgClBI,GbLZ,SaKP;AAEA,AbLA,ATPe,EE8Bb,AKTA,AUcA,I1BXI,AgBHA,GUcG,C1BXC,AgBHR,AUcA,G1BXW,GAAP;AGnBN,AMgCA,AiBDC,IfNQ,EXLH,KAAK,GAAG,CAAC,GAAT;AEOA,A4BgBN,ADrBM,AtBKC,ESVL,EhBIG,AWKD,AJCS,ESVP,GdUU,A2BLA,ClBIN,CAAC,AJCS,GLAd,AKAiB,CLAD,CcVN,IAAd,AaKI,ClBIF,ATCE,A2BLsB,ClBIN,AKTA,ATUf,CLAqB,A2BLtB,EAA0B,ClBI5B,CkBJE,ClBIsB,CkBJQ,UAA9B,EAAwC,QlBI1C;AMzBG,ATAP,AFCA,AmBXA,AxBmCM,EaCJ,ASzBA,AvBoBC,AWGD,ATGA,A2BLA,EhCME,AoB5BS,ATAb,AQiBI,EaKI,C3BKD,ELCE,AIHO,CgBzBG,CMCjB,ArB0BW,C2BLC,CfID,AG1BS,EpB4BlB,AiBFW,AN1Bf,AqBsBiB,GhCMC,CIHZ,ACEJ,Ce3BK,AhByBoB,EJGvB,AIHE,CCEmB,CDFI,CsBxB3B,AMqByB,CNrBb,ETLA,CZ+BZ,A2BL6B,CNrB7B,CrB0B+B,CqB1Bf,WMqBhB;AEbF,AdPA,ATFA,AG2BC,AmBgBD,EjCdG,AGND,ACGA,A4BHA,EEdI,ARRJ,APiBE,AdUA,EDFE,A4BHE,ENtBN,APiBM,EaKI,CbLD,AdUA,CDFC,CsBzBV,AMsBa,E5BGA,AeRA,COjBb,APiBc,CdUC,A2BLF,C3BKG,EqB3BhB,AtByBA,AeRE,CeTmB,GAAG,E7BmBT,CAAb,K2BLW,EAAU,EAAE,CAAC,CAAD,CAAZ,CAAb,EEdF;AAEA,AvBXA,AG6BA,ActCA,Af+CO,EbPL,AiBJA,AbCA,AeTC,AdUA,A2BLD,CbRA,CNsBW,EmBdL,GbLC,CRnBT,AqBwBY,GAAG,GrBxBf,CqBwBe,CrBxBf,IEsC+B,GAC7B,OAAO,AmBfM,EAAU,EAAE,CAAC,CAAD,CAAZ,CAAb,QnBeA,KAA4B,WAA5B,GAA0C,gBAA1C,GAA6D,CADxD;AAGP,ARXC,A4BcD,EtB5CiC,AqByB/B,ENvBE,APkBA,EaKI,ENvBE,GfFuB,CeEnB,AfFmB,GeEhB,EMuBE,GAAG,CAAC,ErBzBU,EAAA,AqByBN,GNvBV,AMuBa,GrBzBG,CAAA,AqByBX,CNvBO,GMuBS,CAApC,INvBe,GAAuB,aAAvB,GAAiC,MAAM,aAAA,CAAQ,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAApD;AlB+BE,AoBzCN,AvBwCA,EM/BE,ARuBA,ACKA,A4BHA,ENvBE,APkBA,EfQE,A4BHE,ENvBE,APkBF,ChBGC,AKSO,EWZL,GhBGG,CuBrBG,AlB8BX,CAAiB,AJJrB,CDLe,A6BEE,CNtBb,EvBoBQ,A6BEQ,CbLD,CXYf,AWZK,ChBGY,CAAC,AKSO,AWZT,AaKA,G7BFpB,CKSI,EAA+B,QAA/B,CwBPgB,CxBOyB,CwBPf,EAAE,CAAC,CAAD,CAAF,ExBO1B,CwBPkC,CxBOiB,CwBPf,CAAC,CAAD,CAApB,IxBOhB,AwBP2C,CAA/C,CxBO+D,WkB5B3D,IADA,GAEA,eAFA,GAGA,IAHA,GAIA,eALF;ALIG,AlBkBN,A8BwBD,EzBfE,AJHA,A4BJA,EXpBW,Eb2BP,AWZA,AaKE,CAAC,GXpBU,AFeP,AaMR,CbNS,COZT,CLHkB,CAAC,Ab2BT,AwBNN,CXrBgB,AWqBf,GXrBa,AKGlB,AlBwBc,AwBNd,CNlBA,AMkBS,CXrBgB,CAAC,EAAR,AKGlB,CAAA,CLH8B,Cb2BR,Ea3BJ,AKGlB,ELHmC,AKG7B,AMkBN,CxBM2B,Ca3BT,CAAf,CWqBqB,GNlBxB,AlBwBF,CwBN8B,CxBMO,AwBNN,GNlBf,AMkBU,CAAS,WAAT,CAAxB,GACA,IAAI,CAAC,GAAL,CAAS,WAAT,IACE,IAAI,CAAC,GAAL,CAAS,WAAT,CADF,GAEE,IAAI,CAAC,GAAL,CAAS,IAAT,CAFF,GAGE,IAAI,CAAC,GAAL,CAAS,IAAT,CALJ;AXlBF,AZFA,ANoBA,EcIE,AeEA,ENrBE,AlBuBA,EWbY,EFSR,CeEC,CfFC,ETIE,CwBFC,ExBEE,IwBFN,GAAa,CxBEC,CAAC,EwBFE,CAAC,CxBEZ,CAAc,GwBFP,CAAW,IxBElB,AwBFsB,CxBEjC,AwBFkC,IAAL,CAAU,CAAV,CAAX,EAAyB,IAAI,CAAC,IAAL,CAAU,IAAI,CAAd,CAAzB,CAApB;AfrCY,AGUP,AGyBD,AUmBN,ADhBC,CftCD,CTwCG,AJJD,EgB1BW,EhB0BP,AeV+B,GISrB,CJToB,CAAO,EChBrB,ChB0BpB,AeVkC,CIS9B,AJTyC,CChBtB,AGyBF,AJTa,CAA9B,GChBuB,CAAC,CGyBxB,CHzBmB,CGyBM,EHzBI,MAA5B,GGyBD,EAAoC;ARvB1C,AG8BA,ADJA,AG1BA,AQrBA,AIiDA,ETJE,AnBEA,EcIF,EKNQ,AnBEF,AeXA,OAAO,CDeb,AdJE,AeXY,CAAC,CISG,EJTA,CISG,GJTC,CAAT,EISc,CAAC,CJTD,CAArB,KISe,EAAnB;ALMF,AeiBA,EjCnBE,AuBHA,AfIA,AJDA,EeZG,CAHD,CIYI,AfIF,GJDG,EJAP,CAAA,EQCA,EAAc,KRDd,AuBHqB,AnBGd,CJAP,EuBHwB,WAAW,CvBGnC,AuBHoC,GvBGpC,IuBHwB,EAAxB,MvBGA;AkBEF,AT3BA,AImCO,EUZL,AJTC,EnBYC,AQCA,AJDA,ASSS,EUZL,EfIE,AJDA,CJAD,GkBCT,GKJiB,CnBGC,EmBHE,CnBGC,KAAK,CJAtB,AIAuB,CICD,CKQU,CbTR,AuBHE,CAAC,AfIF,CKS3B,EbVE,EIAiB,CAAgB,EICjC,AKSK,EUbqB,CAAV,AnBGC,CmBHsB,AnBGA,IAAtB,CAA2B,QSU9C,CTVmB,CmBHD,AnBGhB,CmBHF,EVa6B,WAA7B,IACA,OAAO,eAAP,KAA2B,WAD3B,IAEA,IAAI,YAAY,iBAHX,EAG8B;AqB7BrC,ApBgBM,AmBwBN,EjCtBG,AkBCD,AKJA,AZ7BA,CX8BA,MuBDO,ATCO,EH9Bd,QY6BiB,ATCb,CSDc,ATCO,EH9BzB,CAAY,IAAZ,AG8BI,EH9Bc,AG8Bc,CSDf,CAAV,CAAuB,AZ7B9B,EAAuB,QAAvB,EAA+B,GY6BxB,CAAP;AFtBK,ASaD,AFhCN,AfyDA,EbXE,AcHA,AKXA,EEbW,AVPX,AHiCE,AJDA,EUDE,EH/BJ,APgCM,C0BZQ,A1BYP,AeZA,ELWE,CgBXL,AtBaM,CGjCV,AmBoBkB,AXAlB,CLWY,CNEC,AJDP,CO/BJ,GUMwB,AjByBT,EUDE,COxBW,AVN5B,AG8BkB,CH9BlB,AmBmBE,EAA0B,CTbI,CAAC,AVNjC,AHgCW,CGhCX,AP+BwB,CiBzBI,CSa1B,ETboC,AVNtC,AmBmBiC,ChBWnC,CH9BQ,EP+BF,EiBzBuB,AVN3B,EP+BoC,CiBzBY,AjByBX,EO/B1B,CUMR,CjByBkC,EOhCvC,WPgCuC,EAAY,QAAZ,EAAsB,QAAtB,CAArC,EAAsE;AExB1E,AWwBA,AIvBA,AFYC,AckCD,CdjDoB,CIwBlB,AOTA,AhBWA,CK1BK,CbEP,AWwBM,AN7BF,EY2BE,ATEE,ANEF,AJDA,IEzBN,AiBsBM,CTEO,CgBXD,AtBaA,AJDA,C0BZC,AtBaA,CSFG,AaXJ,AhBWI,CgBXd,A1BYa,EaDI,EaXA,A1BYb,C0BZc,EPSd,EAAQ,COTW,CAAC,CAAD,CAAvB,EhBW8B,CAAC,CNE3B,CAA2B,CeJT,CAAC,EfInB,CMF0B,CAA9B,ANEqC,MeJf,CAAlB,CAAJ,AfII,EeJiC;AjBtBvC,AcFO,ADiBP,AdWO,EaEL,ADHA,AaXA,AhBWA,EM3BW,AGyBT,AlBGS,EGCP,AJDA,CUDC,GGAG,AG3BS,CF8BjB,AKLS,ATEA,CgBXC,CVhBU,AUgBT,AzBYS,Ce5BC,AUgBX,A1BYE,CaDC,AG3BS,AUgBtB,CbWc,AZEd,CDDe,E0BZE,AhBWA,CgBXC,AhBWA,CIGlB,AKLmB,AnBGf,CcEQ,ADJK,AMDG,ClBIb,Ce7Ba,AZ6BA,CsBbG,AhBWA,ANEF,CY7BY,AUgBT,AhBWA,CM3BU,AUgBX,CAAvB,CZcA,AbDa,CGAT,AHAU,CaCK,AVDQ,CeJR,CAAjB,EfIE,CY7BgB,AN2BH,ATEjB,CGAiC,CY7BY,AN2BT,EAAnB,CAAR,ATEgB,GSFiB,ENEtC,CY7BgB,EAAoC,Ef6BxD,CSFkD,CAAC,CTG/C,Ie9BgB,AN2BoC,CM3BnD,AN2BoD,CTG/C,CAAC,MADX,GSFkD,ATI9C,ESJkE,EAApB,CAAlD,KTIc,MAAV,EAAgB;AC7BtB,AcAA,AXEA,ANkBM,A8B4BN,EhBtBE,AMFC,AOTD,AhBYA,ATGM,EaDJ,AQvBA,AlBsBC,CAHD,CJEE,ACGQ,GqBxBN,AvBcQ,A2BLP,AhBYA,CR3BT,AW0BU,ASpBD,ErBwBW,EqBxBhB,AZqBF,AVAY,CaDC,AZIQ,CC9BvB,AW0BgB,CSpBA,AtBqBC,ACGT,CC9BR,CwBeE,CbSiB,CSlBf,ItBqBE,SDPA,CAAoC,CAApC,EAAuC,CAAvC,EAAwC;A2BJ7C,AhBYA,AkBAD,E1B5BqB,AW2BnB,AdNA,AKQC,EkBrBC,EtBoBE,GDPG,A6BOA,CfDC,AdNA,CGrBW,CAAA,CHqBR,CAAJ,CcMM,CAAC,AbCA,CDPC,CGrBI,AHqBZ,CCOU,CE5BE,CHqBA,ACOA,CaJF,AdHG,ACOA,GDPG,CGrBJ,AHqBA,A6BOrB,C1B5BqB,AF4BF,A4BAQ,C5BAC,CDPC,CAAC,CAAT,CCOF,EDPe,ACOA,CDPhC,G6BOF,EAAwC,G5BArB,CAAb,E4BAN,EAA8C;A7BN7C,A2BJD,AhBYA,AmBmBA,E3BhDE,AW2BA,AMHA,AlBMM,A2BFN,E5BAG,E4BAC,C3BEO,EkBNJ,CNGC,CZGS,C2BFP,GfDG,AeCA,CfDC,AeCd,ETJA,ClBMM,IYPW,AZOY,MAAvB,EAA+B;AkBLtC,ApBFD,AyBtCA,AfuDO,EbXL,AiBDA,ATCA,EKWW,ARTH,EGFF,ISDE,AZGM,CLFd,AKEe,CLFf,GiBDa,ATCE,AHEP,CYHM,AJYS,ARTH,EGFF,CKYlB,EbZA,CAAA,AKE0B,CAAC,GQUpB,KAAP,ARV0B,CAAlB,IQUS,CbZjB,GAAA,OaYA,IAAgC,CbZhC,IaYqC,CAAC,SAAN,CAAgB,MAD3C;AIjBY,AMInB,AVgBA,CIpBA,CZSS,A2BHP,EhCCE,AkBEA,AVFA,AJDA,G4BAG,EhCCE,AkBEA,CVFC,CJDC,A4BAA,CxBCC,AwBDA,EdGR,CcHW,CAAR,CdGU,CVHG,AwBAF,EAAE,C5BAhB,E4BAmB,CdGC,CAAC,ElBFrB,EkBEA,ClBF0B,IAA1B,AgCD8B,CAAC,MAAjC,EAAyC,CAAC,GAAG,EAAE,GAAG,CAAlD,EAAqD,EAAE,CAAvD,EAA0D;AfE5D,EjBAG,AIDA,CJDD,AIRA,CcaE,AQxBA,AfXA,AHgCA,AwBDA,IxBCI,CkBrBA,AfXA,CeWC,AfXA,AHgCC,AwBDA,GrB/BN,CeWA,AlBmBgB,AwBCN,ErB/BC,CeWC,EfXZ,MqB+BqB,CAAC,ONpBtB,CAxBc,CA0Bd,EMkBiC,CAAC,CAAD,CAAZ,EAAiB,WAAW,CAAC,CAAC,GAAG,CAAL,CAA5B,EAAqC,MAArC,CAArB;AZ3BG,AhB4BN,ECEO,A2BFL,EZ5BU,ATFT,AH+BA,KHCW,GGDH,EAAE,CHCN,Ce9BiB,GAAG,CAAC,CAAC,GAAF,EAAO,CAAC,EAAR,EAAY,GAAZ,EAAiB,EAAjB,CAArB;AAEP,AhB4BA,ACCO,CATA,CLOP,AM7BE,AE0BkB,CAAlB,CkBhBE,K1BmBJ,A0BnBQ,CAAC,CpBVP,MAAA,AoBUE,C1BmBJ,AM7Bc,EoBUK,OAAf,CpBVF,EAAsB;ANjBxB,AKkDA,CLlDA,CQgDE,AwBFA,ChC9CF,CMiBE,IAAA,AE+BM,CAAC,AwBFA,I1B7BP,E0B6BA,C1B5BE,MAAA,CAAA,EE8BF,CAAwB,CF9BtB,CAAA,EE8BF,EF9BE,AE8B4B,KF9BrB,GE8BT,CF/BA;AN+BF,AqB1BA,AWyBC,ENnBE,AlBqBD,EF7BE,AeEJ,Kb2BS,SAAP,Ia3BF;AJ2BM,AI3BN,Ab4BC,AoB5CK,AfsDC,AoB1EP,AD+DA,InBWa,KIXG,AW3CA,QX2CV,CAAmB,IAAnB,CW3CA,CX2CuB,AW3CE,GfsDK,GAAI,KetDlC,EAAoC,KfsDF;AQtCxC,AZIA,ANiBM,A2BLA,AhBYA,ANEN,ESFE,ASrBF,AEtBE,AfsDA,EJnCF,EmBnBQ,AfsDF,GIXG,ASrBT,AvBcgB,A2BLA,AhBYA,CO5BhB,EOfc,CfsDD,CJnCb,CmBnBiB,CPejB,ARuCgB,CVlBV,CkBrBN,AlBqByB,CcON,CAAC,AHAd,CXPA,AWOsB,ADW1B,EahCF,AvBc8B,CcOX,AaZb,CbYJ,AaZ8B,C3BK1B,AyBpCsB,EzBoCK,AWO3B,Ac3CJ,Ed2CiC,KgBZ7B,EAAsC,MAAtC,EAA4C;AbajD,AMJK,AGnDN,AjB8BA,AUWO,COzCP,CL0BiC,AK1BJ,AvBgD3B,A2BLA,AhBYA,EKdW,EWEL,AhBYF,CYvDN,AI2CS,CJ3CT,APyCiB,CIUD,ApBHP,C2BLG,CTjBqB,AFeZ,CEfY,AEyB3B,ApBHM,AWOA,CSJQ,ApBHP,EWOE,CgBZG,CAAC,G3BKV,CAAY,CWOC,CSJhB,ATIiB,AKdF,ChBOZ,CoBGuB,CORpB,EAAV,C3BK2B,CkBtBI,AlBsB/B,EkBtB+B,GP6B/B,GO7B+B,CAAA,CEyB3B,EAAyC;ANM/C,AR3BA,ANmBC,EkBtBC,AEyBA,AORA,AhBYA,Ac5CA,AfsDA,AMxBA,EDiBE,APlCA,EY2BE,AORE,AhBYA,ADUF,CetDC,EV+CE,APlCD,CAAC,AFKT,CK0Ba,Ac5CF,CEgCG,AFhCF,Ed4CI,CIGZ,AKPF,AORe,AFhCF,CnBkBf,AmBlBO,EjBaH,AFKJ,AmBlBkB,EAAE,CjBaA,AmBmBG,CAAC,CFhCD,MjBanB,CG+B4B,CgBZf,AhBYgB,EgBZ/B,CFhCgC,CAAC,Gd4CH,CAA9B,Ec5CA,EAAyC,CAAC,GAAG,EAA7C,EAAiD,EAAE,CAAnD,EAAsD;A5B2ClD,AoB3BC,AjBuBP,ACKM,A6B9DN,ExBoCyB,AqBevB,AhBYA,AKdA,EDgBgB,AE/BL,AQfT,AfsDA,EiBtBI,EAAE,AhBYF,ADUE,CbZM,AICA,EK1BS,AqBeZ,CrBfY,AK2Bb,EM7BW,CMOR,AbgCE,EOvCS,AUiBP,CAAC,A1BWd,ASWc,CiBtBD,A1BWO,C0BXxB,AhBYkB,Ac5CA,Cd4CC,Ac5CA,CnBiBI,CWFO,CpB2B1B,ASzBmB,AIqCC,CbZM,AIC1B,ASWqB,COvCQ,AN6BT,CAAC,Ac5CP,AxB2CY,CJD1B,C4B1CuB,C5B0CM,AoB3BI,AXEd,CWFe,AXEf,GWFU,CAAS,CN6BxB,EAAkB,CM7BU,APuC5B,COvC6B,AN6B7B,Ac5CoB,AfsDE,CCV9B,Ac5C6B,CAAD,AfsDpB,COvCwB,AQfxB,CReiC,AN6BT,Ac5CxC,AfsD0C,IOvCW,CAAC,EAAL,CN6BD,CAAC,ADUjC,COvC2C,CAAnB,APuCa,COvCtB,CAA5B,CN6BmD,CAAC,YAAP,EAAqB,EAArB,CAAlD;AoBfF,AdZA,EpB0BE,AuBHA,AZ3BC,AmBoBD,AhBaA,Ac7CC,AxB2CD,AebA,EbhBE,AY+B2D,ClBH1D,CAAC,AuBHA,AOPE,AjBsBF,AMxBA,EWEI,CxBlBF,AQ+BC,ADSA,CPxCA,AagBP,CDeoE,AYbzD,A1BWF,ASWA,CKT4D,GJArE,CSNc,CLMZ,AYbe,CAAC,CAAD,CPOC,AOPlB,C9BUA,CM5BE,COwCO,CTXT,CE7BsB,EF6BA,GmBJlB,IAA4B,CjBzB9B,ciByB6C,IAAI,UAAU,CAAC,UAAD,CAA7D,EAA2E;AvBI5E,AcGA,ATDK,EI5BJ,AqBgBA,ExBjBE,AY+BA,AKPA,AnBIA,E0BXI,EAAE,A1BWF,ASWA,CRVQ,EI5Bd,AqBgBW,EPOA,AnBIT,ESWW,CUfC,AlBKV,CAAkB,CQUN,GJtChB,AqBgBqB,CAAC,AjBsBhB,CiBtBe,AzBYjB,CI5BJ,AqBgBA,CzBY4B,CkBLJ,CAAC,UAAD,CAAV,CAAuB,eAAvB,CAAZ;ARnBJ,AfwBA,AcGA,ESPG,AZ5BH,AmBqBE,AFjCA,AT8BA,AdeA,EUzBF,ANJE,EqBiBM,AjBsBD,AMzBD,AdeA,EI7BJ,AqBiBQ,CnBrBV,AiBZS,EboBT,Aeaa,ErBjBX,CJ6BA,CuB7CA,CnBiBE,AUaY,IRlBhB,AQkBE,CWGqB,CrBhBnB,AqBgBoB,AXHF,CVblB,AqBgBmB,CAArB,GrBhBE,CAAA,IAAA,KAAO,IADT;AMIF,AJhCA,AiBaC,CjBbD,CAAiC,AmB+C/B,E1BSE,ASQqD,AMrBrD,CNqBgB,CiBjBd,AjBiBF,EiBjBI,A1BSA,G0BTG,EAAE,GnB/Cb,AmB+CgB,CnB/ChB,CmB+CE;AffF,AajBA,EPaE,AEyBA,AOLA,AzBUA,EI3BE,AIuCA,AM1BA,EWII,A1BSF,CCCC,CyBVG,AXJF,CISC,AdtBD,CMCR,ANDS,AIuCC,CQ1CR,ASoBW,A1BSF,ASaA,AM1BA,CVbP,CqBiBW,C1BSD,CebC,Adcb,CU1BF,AegBkB,AXJF,EJZhB,AQqBE,AOLA,CzBUiB,CDDC,AebhB,EfaE,GCCJ,EQYE,ARZuB,CQYC,CQ1C1B,CAAY,CR0CV,EAA6B,CQ1C/B,EAAkB,CR0ChB,EAAmC,OAAnC,SQ1CF,EAAqC;AE0BtC,ERtBqB,AIanB,CAHD,CVVI,AL0BD,ASaD,ARZA,CDHA,CAEE,GebG,CN0BC,CEvCY,AMHlB,AR0CO,ARZA,CU3BW,CX0BT,GAAP,ACCF,CgB9BA,CAAA,AjB6Bc,CW1BI,EAAA,CMHlB,CAAA,INGkB,AMHlB,CNGkB,CMHZ,CR0CN,CAA2B,GAA3B,EAAgC,IAAhC,EAAsC,OAAtC;AIXG,EF3BL,AegBA,AjBuBC,ARZA,CQGD,CPhCE,AW6BS,AR3BL,AIuCJ,AM1BA,EEhBE,ASmBA,A1BUA,E0BVE,CxBlBA,AGEI,CHFH,AeDC,AZGG,CIuCF,CQ1CC,CSmBC,A1BUA,C0BVP,ETpBI,AR2CN,EiBvBc,AjBuBA,CIZU,AJaxB,CJ1CA,AqBkBgB,A1BUA,CAAC,CaCU,EAAxB,CaXkB,CxBlBrB,AW8BJ,AaZE,C1BUW,C0BVe,A1BUA,CE5BA,EF4Bf,CAAP,CE5BF;AN4BE,AoB5BN,ATLA,EEgDG,EPzCC,AcFJ,AXKI,AqBcA,A1BUC,AebD,EEhBE,ASmBA,EXHE,CnBYQ,ASvBR,AqBcC,CrBdA,AqBcL,CTnBO,AFgBA,EEhBE,CZKT,OUWiB,CChBrB,ADgBW,CnBYL,CAAyB,AmBZT,GnBYhB,AqB5BO,CAAM,CrB4Be,MqB9BxB;ADEV,ANgCM,EdHJ,A8BTC,AzBUD,EIxBI,CTuBD,CAAC,AqB5BA,AFgBA,GLeU,ATFP,CAAC,EgB7BE,CFgBC,CEhBC,GFgBG,CAAC,AdahB,ELDA,AqB/BQ,APkCJ,CAAsB,AKff,CAAS,CAAT,IAAc,CLerB,EAA+B,CKfN,CAAC,KLe1B,AKfA,ELesC;AdF3C,AiBCD,AG/BA,Af+BC,A2BAK,ElBEJ,ADWA,EKVE,AT3BI,ALuBJ,AeZC,CAFD,CEdE,AP+BE,EVHA,CcIC,AT3BG,AIqCH,AmBbO,CZ/BhB,AXOa,EK0BC,CVHD,EaCE,AHEE,CICb,ADHY,AG/BhB,AP4CE,EO5CF,AY+BM,CdGa,AcHO,EfAL,AI7BA,CJ6BC,AR1BlB,AK4BoB,CO/BD,AP+BE,EVHA,CcIC,CAAC,AcHrB,EfAS,AeAqB,CfApC,EbDI,CcIe,ADHc,AHE/B,CVHgC,IcII,EcHhC,EXjCI,AWiCqC,EfAH,GCGzB,CDH6B,ECGE,EDHE,CAAC,EAApB,CAAjC,CCGyD,CAAC,MAAvC,GAAgD,IAA/D;ADFJ,AJaC,CAfsC,CO9BN,AUqB/B,AXFC,AaaD,CnBFK,CKMH,AT1BA,EYPE,ASkBE,A1BUF,A4BCE,CFXC,ErBXD,CAAC,AqBWG,CVrBqB,CAAA,ACGrB,AZOR,CLqBS,A4BCE,CX7BD,ASkBE,CbWD,AaXE,CbWD,AeAE,EXlCR,AjBiCJ,C0BVM,CAAU,CbWD,CAAC,AaXE,GAAG,EAAL,AEWO,EfAd,CAAf,AGhCiC,AUqBD,CEWC,CZhCA,AUqBC,CbWA,AeAhC,EFXmC,EbWC,AaX1B,CVrBqB,AUqB/B,CVrB+B,EHgCS,CAAC,EAAT,GAAc,OAAf,GAA0B,GAA3D;AACA,EF5BE,AKJA,AUsBA,AhBWA,AkBDA,EvBvBY,ALsBT,EiB5BC,ASmBE,AhBWF,AkBDE,CFVC,GAAG,CflBV,CekBY,AhBWZ,AkBDY,ElBCA,CdFC,AiBCA,AaVG,AEUD,CfAD,AaVG,EflBjB,CAAY,AMDK,ASmBG,EbUD,AI7BA,ASmBJ,CbUK,AeAE,CAAC,CFVG,CAA1B,CflBA,AE4Ba,CAAf,CF5BqB,CiB4BJ,CfAa,GeAK,GfAnC,AInCU,WWmCR;AfCF,EaVE,AXJA,AacA,EjB7BA,ATCE,AGIsD,AKyBtD,EO9BE,ASmBE,AEUA,CFVC,CfnBP,CTCM,AGIsD,AUUrD,CbdA,AGIsD,AqBcnD,AhBWF,CAAC,CgBXG,CfnBZ,AIeA,EFca,AaVG,CflBd,AE4BY,AaVG,AEUD,CX7BD,EAAE,ASmBG,AEUD,CvBxBjB,CQwBiB,AaVJ,CflBb,ATAA,AW4BkB,CF5BlB,AD6BA,CgBXwB,AhBWJ,CR7BA,AwBkBtB,CEU0B,CjB5BxB,AiB4ByB,CjB5BzB,AE4BW,CX5BX,AW4BJ,EHCI,CC7BA,AE4B4B,CAAhC,AHCiC,IC7BtB,AiB4BU,GlBCjB,CC9BF,AiB6ByC,WAAzC;AEdF,AjBeA,AdJA,AyBxCA,AT8BC,CAdmB,CWmBlB,AhBUC,AkBDD,Cb5BK,CeaP,A5BZI,AeVM,AZcN,ALqBA,CiBnCA,CWqCI,GFTC,AFnCA,CPeH,ASoBI,AESE,CFTH,A1BOE,E0BPE,AESE,CFTN,CbSM,AaTb,CbSc,CiBfhB,C9BakB,CAAC,EaEE,AeAE,CfAD,AeAE,I5BFb,CwB1CX,AxB0C2B,CaEZ,AW5Ca,CX4C5B,AeAe,CJ5Cf,CI4CE,CfA8B,AW5CA,AxB0CrB,CAAP,CwB1CJ,EAAoC,GX4CG,IAAvC,GW5CA,EAA8C;AM6B9C,AvBlBA,AmByBC,AhBUA,AKdD,EEhBG,AOfD,AxB0CC,EW1BC,EahBI,EbgBE,EahBE,GAAG,EbgBE,AE6BF,EW7CI,CbgBC,AahBA,GAAL,CAAS,GbgBG,CAAC,CahBb,CAAe,IAAf,CbgBX,CahBgC,EAArB,CAAb;AM4BF,AJSA,AhBUA,Ec9CE,AI2CA,IJ3CM,AI2CF,IEhBN,AN3BY,AI2CF,GJ3CK,EI2CA,CEhBf,CN3BmB,CM2BnB,AN3BoB,GAAL,CAAS,KAAT,CAAe,IAAf,EAAqB,EAArB,AI2CA,CJ3Cb,AI2C0B,mBAA1B,EAA+C;EEhBrB,AdhB1B,ACIF,AOdE,AxByCA,EW1BE,AiB4BA,EJ3CI,EbeA,CMDR,AjB2BS,CwBzCG,CM0BgB,AdhB1B,CcgB0B,AFiBhB,CJ3CG,EbeA,AiB4BA,EJ3CI,CAAC,CbeD,CAAC,CafL,CAAS,AxByCF,C4BEC,C5BFrB,A4BEsB,CEjBI,EnBXD,AmBWC,AbZ5B,AOde,Cbea,AafE,CRU5B,AYiCa,CZjCD,EQVC,AI2CiB,CEjBJ,CnBXpB,AmBWoB,AdhB1B,AQVkC,ERUlB,AQVH,CAAb,CbeoC,CAAC,EiB4BxB,CAA2B,IjB5BI,CAAC,KAAR,AiB4BxB,CjB5BsC,CiB4BC,WAAvC,CjB5BX,AiB4BA,EjB5BgE;AMjBpE,AjB4CC,CiB5CD,Ca6BE,Ab7B+B,AOG/B,AI2CC,IjB5BG,AafE,IAAI,CRUR,ELKS,AafE,CbeD,GKLV,AQVe,CRUf,AQVgB,Cbed,CAAc,CMlBpB,AOGe,CRUX,ACbJ,AOGwB,CRUpB,IAAA,AQVW,CAAe,CRUpB,GQVK,CbeT,Caf8B,EbeA,AafrB,CAAb,KbeI;AMAN,AbgCM,EoB9CJ,EbeG,ATCD,AY+BA,AT3BA,EWVE,GdME,AY+BC,AT3BD,AD0BQ,AoB9CP,CtBgBA,AcNC,AXUD,EWVG,IADF,GXWN,AD0BE,CF9BF,AE8BuB,CUCvB,CT3BiB,CHJC,AGIlB,AmBpBmB,CVgDjB,AUhDkB,EpB8ClB,CF9BF,CE8B+B,AoB9CZ,EAAO,CVgDjB,CAAC,AVFR,EAAmC,AoB9ClB,EAAa,IAAb,EpB8CjB,AoB9CoC,CVgDpC,CVF6C,EoB9C5B,EVgDO,AUhDkB,IpB8C1C,EAAqD,GUErD,CUhDiB,CAArB,CVgDwC,OAAO,CAAC,WAA5C,GAA0D,IAD5D;AU9CH,EpB8CC,AwBJA,EjB1BE,AGiCA,EEvCE,AYgCA,GxBIG,EYpCE,CYgCC,CZhCC,EZoCE,AwBJA,CxBIC,AwBJd,MxBIa,EAAS,GYpCX,CAAM,AZoCJ,EAAe,IYtCpB,IZsCK,EAAyB,QAAzB,EAAmC,IAAnC,CAAb;AACD,AoB7CD,EtBcG,AGIA,AuBuBD,IZhCI,AYgCA,MZhCM,EAAE,GYgCZ,EAAiB,CZnCT,KYmCR,EAAyB,CAAzB,EAA4B,EAA5B,EAAgC,CAAhC,EAAmC,EAAnC;AlBGI,ANGN,EF/BE,AGIA,IWVI,GNkCU,GMlCJ,EAAE,IAJJ,CNsCJ,CAAqB,IAArB,EAAyB;EoBnB7B,ApBoBA,AkBHA,IZ/BI,GNkCG,CkBHC,CEjBR,EpBoBW,CkBHX,GZ/Be,ANkCA,EMlCE,ENkCE,CAAC,EoBpBpB,CAAY,MdnBJ,CNuCD,GAA0B,CoBpBjC,EAAuB,CpBoBc,CAAC,UAAL,CAAgB,WAAhB,CAA4B,IAA5B,CAA1B,GAA8D,IAArE;AACD,IoBrBC,AFkBE,EZ/BE,EcaJ,CFkBO,IElBP,GAAA,IAAA,IdbsB,EAAE,IY+BjB,CAAa,KZ/Bc,AY+BhC,UZ/BsB,EAAsB,KAAtB,EAA2B;AjB6B/C,AWON,IIGI,AcPA,IZ/BI,CFsCC,AfVO,A6BGP,MZ/BM,UFsCX,AEtCqB,CjB4BnB,CAA4B,CeW5B,AEvCsB,EjB4BtB,A6BGG,CAAa,CZ/BM,AjB4BW,GeW1B,CAAC,EfXR,EAAyC,EiB5BnB,AY+BxB,EZ/B6B,KAAK,AjB4BhC,CiB5BiC,CFuCjC,AEvCgC,AjB4BkB,CiB5BvB,GAAW,CFuCV,KEvCN,CAApB,GFuCF,GAAwC,OAAO,CAAC,eAAhD,GAAkE,KADpE;EfTF,EYxBE,AmBQA,AhB4BA,EExCG,AjB4BC,A6BE2B,C7BF1B,C+BhBC,CnBRF,CAAC,AZwBG,GAAG,CAAC,C+BhBC,EnBRb,CmBQgB,EnBRD,AZwBjB,OYxBwB,EmBQK,CnBRF,EmBQK,KnBRR,GAAa,GmBQR,CnBR3B,EmBQ4C,EAA5C;AbTG,INGH,AmBQA,AdtBM,ACWG,CDXT,GcsBM,AFiBJ,EZ9BA,KcaW,AbXO,GaWJ,AbXO,CACzB,IAAI,GaUsB,CAAC,aAAT,CAAuB,AbVzC,CAAuB,IaUL,CAAhB,GbVF,CADyB,EAEzB,IAAI,kBAAJ,CAAuB,WAAvB,EAAoC,KAApC,CAFyB,EAGzB,IAAI,kBAAJ,CAAuB,+BAAvB,CAHyB,EAIzB,IAAI,kBAAJ,CAAuB,0BAAvB,CAJyB,EAKzB,IAAI,kBAAJ,CAAuB,8CAAvB,CALyB,EAMzB,IAAI,kBAAJ,CAAuB,8CAAvB,EAAuE,KAAvE,CANyB,EAOzB,IAAI,kBAAJ,CAAuB,4CAAvB,EAAqE,KAArE,CAPyB,CAApB;EfGL,AcJC,AXQD,ANmBA,E+BdE,E/BcE,A6BGD,E1B1BH,CAAA,AHuBO,CAAC,C+BdC,A/BcF,C+BdG,AzBLV,ANmBI,CMnBJ,GNmBc,EGvBd,CAAA,E4BSE,CzBLF,ANmBA,CMnBA,CyBMI,A/BakB,MMnBtB,CyBMW,CAAC,CzBNZ,EHJA,GAAA,G4BUI,IzBNJ,CyBM0B,E5BVT,IAAjB,EAAuB,C4BUnB,GAAkC,I5BVtC,EAA+B,C4BUc,CAAC,SAA1C,GAAsD,mBADxD;I5BRA,AGIA,ANmBA,EMnBE,EHJE,CAAC,EGIE,ANmBA,C+BZP,A/BYA,CGvBI,IAAS,C4BWb,A5BXc,C4BWd,CzBPA,GyBOA,CAAA,E5BXA,E4BWA,A5BXwB,E4BWlB;AJUJ,AhBSA,AKhBA,EClBN,AjB4BG,CAFD,CMjBE,AuBqBA,EEdE,A5BXA,GcLN,AXSS,ANmBA,A2BHO,AhBSA,AKhBA,AaYP,IEdI,A/BYA,E+BZE,I/BYI,G+BbT,AzBNN,CAAmB,ANmBA,AWMjB,CAAyB,CgBTzB,C3BGoB,A2BHO,CVzBjC,AjB4B2B,CAAC,AWMtB,EAA6B,AkBJ1B,C7BFsB,AgBVzB,AaYgB,C7BFI,AgBVa,ChBU9B,AgBVH,EhBU6B,AgBVO,CWOpC,AXPA,EWOuC,AXPA,EAAvC,CVTiB,CAAU,AUSgB,AaY7C,EbZE,CWOA,CXP+C,CWOD,CrBhBhD,AUSE,EAAmD,EAAnD,EAAqD;AClC3D,AQOM,CRPN,CAAiC,AX0B9B,AqBgBD,AhBSA,AKhBA,CVZA,CHDG,AYmCD,AfZA,A6BEA,EEdE,AJSE,AXPA,EWOE,AXPA,CDsBD,AJNA,Ac5CO,AIwCP,E7BFE,A2BHE,AXPA,CeFD,A/BYA,CWMC,AKhBE,CeFD,ApBkBA,CXNC,AyBtCT,CVkDF,AfZA,AyBtCmB,AT4BL,EAAhB,CDsBiB,EgBxBE,AdjCrB,AU0CuB,CITD,AdjCtB,AU0CwB,AFnClB,CEmCiB,AhBSrB,CgBTA,AFnC6B,Cd4CN,CIMC,CAAC,CgB1BjB,CNxBJ,CIwCG,CJxC6B,AIwChB,EdUH,KAAmB,GUlDhC,CIwCF,CJxC4C,IVkD7B,GAA+B,OAAO,CAAC,MAAvC,GAAgD,KAA/D;AEvCJ,EXUE,ANkBC,A2BHD,AFnCA,AT4BA,ChBQO,CYrBL,AGoCA,AJPA,EoBlBE,AJSE,AFnCF,AT4BE,AaW2B,EFJzB,AhBSF,AKhBE,CJbF,AZuBC,AWMA,CC7BA,CeoBI,AXPA,CeFD,CfEG,CeFD,EN1BZ,AT4BgB,CJbd,Cafc,AT4BhB,EJbiB,AD6Bf,CoBlBiB,AJSE,AhBSF,CoBlBC,AJSE,CAAD,CfpBnB,AeoBF,ChBSuB,CAAC,SAAtB;ANGE,EsBXJ,AhBSC,EC5BC,AmBMM,A5BRN,AHwBA,AyBtCA,CMsBA,CJaI,ExBrBE,AHwBF,A6BCF,C7BDG,AKQO,C0BpBV,CJSO,C3BGJ,E2BHO,AFnCF,CAAC,CAAD,CtBcK,AHwBV,AyBtCL,CzBsCA,C6BCa,C1BzBK,AsBdF,CEmCG,CAAC,AtBWlB,CsBXiB,AtBWO,CsBX5B,CxBrByB,CEgCrB,AoB9CoB,CAAC,CpB8CM,AoB9CP,CAAN,GAAY,GtBcV,EsBdlB,GtBcsC,KAAK,UAAL,GAAkB,EAAtC,CAAlB;AQ+BH,EgBTC,AtBWA,AWnBA,EeAE,A5BbA,AsBdA,EEmCI,AtBWF,AWnBA,EbbI,AaaF,AaWY,CFHT,AtBWF,GsBXK,CtBWD,AWnBA,CS3BC,AT2BR,CS3BS,CpB8CC,AoB9CF,CpB8CG,AoB9Cb,CT2Bc,CWQG,CAAC,AFnCF,AT2BA,CWQC,CAAnB,CtBWA,CFhCwB,CEgCD,AWnBA,CS3BC,AT2BxB,Cbb2B,AsBdF,CAAD,AT2BE,CS3BR,GAAY,ItBcM,CAAC,AsBdnC,ItBckC,CAAT,KAAoB,SAAS,CAAC,IAAD,CAAT,GAAkB,EAAtC,CAAzB;AQgCJ,EgBVE,E3BEE,AKSA,AoB9CA,AT2BA,EWQI,CtBWD,CLTC,A2BFE,AtBWF,AWnBE,AaWF,CbXG,EWQE,CXRC,CAAC,CXmBX,AoB9CU,AT2BE,CXmBD,AoB9CA,AT2BE,CWQC,AFnCJ,AIqCgE,C7BA7D,A2BFE,AFnCf,AIuCI,CFJU,AXRE,CWQlB,C3BEkB,AyBrCA,AT2BL,ChBUX,EAAmB,CgBVG,ES3BA,AT2BX,CS3BY,CAAD,CAAN,AT2BW,CAAC,CAAC,AaU6C,CJrC9C,CIqC1B,CxBSF,AWnBgC,CXmBD,CWnBJ,CS3B3B,CpB8CkC,CAAC,CWnBG,EAA5B,CXmBV,EAAyC,EWnBI,CXmBD,CAAC,AWnBE,GAAG,EAAL,GXmB7C,AWnBuD,EAAE,GAAG,EAAlD,CAAV;EWSF,ExBtBE,AEiCA,AoB9CA,EzBqCE,A2BFE,ExBtBA,AwBsBE,AtBWN,AwBPE,G7BFK,A2BFE,C3BED,EyBrCE,AIuCF,C7BFG,AyBrCA,CzBqCT,A2BFY,AFnCJ,CEmCK,AFnCf,AIuCW,C7BFG,A2BFA,AtBWd,CLTe,A2BFjB,CtBWQ,AoB9CU,EzBqCE,CAAhB,AKSF,CFjCoB,CAAC,AHwBA,CyBrCC,CzBqCC,AyBrCA,CzBqCrB,AyBrCoB,CAAN,CzBqCU,EGxBtB,AsBbwB,CtBaC,C0B0BD,CAAC,EJvC7B,ItBaI,K0B0BwB,C1B1Be,CAAC,A0B0BF,C1B1B1C,EAA+C,G0B0BnB,CAA1B;EFHJ,AtBWC,EUIC,AUlDA,AT0BA,EbbE,AwBsBE,E3BEA,A2BFE,AXTF,AaaF,CdWG,ACxBA,EWSI,AFnCF,CzBqCC,AgBXA,CAAR,CWSY,C3BED,A2BFE,AXTF,ChBWC,A2BFA,C3BED,A2BFb,CZeE,AfbQ,GeaS,AfbA,AyBrCjB,CtBakB,AYqCA,CZrCC,CYqCC,GZrClB,AHwBE,CGxBoB,CYqCC,AfbA,OGxBvB,AYqCkB,IAAgB,KAAK,OAAvB,CAAlB;AVHH,EsBXC,AFnCC,CAND,CbqBE,AmBWA,A5BbC,AYsCD,EYhBI,AXTF,AaaD,EFJK,AXTF,CJXA,AmBWA,AN1BC,CbeA,AmBWA,A/BWC,C2BFG,AXTF,CeAP,CfAE,CJXF,AeoBY,CAAC,CAAD,CfpBA,AZsBC,A2BFf,C3BEgB,GYtBd,AZsBiB,CAAX;EGvBP,AwBsBD,CxB/BA,CSYE,AmBWA,AN3BA,EEmCI,AXTF,EhBWG,A2BFC,AXTF,GWSK,AFnCF,AT0BA,CSzBL,CEkCS,AXTT,GWSY,EAAhB,AFlCU,CAAC,CAAD,CAAN,GAAY,KADP,EAEL,MAAM,CAAC,CAAD,CAAN,GAAY,KAFP,EAGL,MAAM,CAAC,CAAD,CAAN,GAAY,KAHP,EAIL,MAAM,CAAC,CAAD,CAAN,GAAY,KAJP,CAAP;ARSG,EdML,AGIA,AqBiBA,AF9BC,ERGU,ADkBR,AaYD,CbfA,ChBcG,A2BFC,EAAE,CEGD,EFHI,AXTF,CVRT,CAAA,AqBiBa,EV3BS,ADkBT,CWSG,AXTF,EClBW,AU2BzB,CV1BA,ADiBiB,CAAR,EVRT,AUQoB,CCjBhB,AXSJ,OuBoBO,CAAa,GvBpBpB,GAAA,IWTA,CAAuB,MY6BrB,CvBpBF,IWTA,CADyB,EAEzB,IAAI,kBAAJ,CAAuB,aAAvB,CAFyB,EAGzB,IAAI,kBAAJ,CAAuB,aAAvB,CAHyB,EAIzB,IAAI,kBAAJ,CAAuB,aAAvB,CAJyB,EAKzB,IAAI,kBAAJ,CAAuB,4CAAvB,CALyB,EAMzB,IAAI,kBAAJ,CAAuB,8CAAvB,CANyB,CAApB;AASP,AQXC,EE8BC,ErBjBE,ANmBC,A6BCD,C7BPA,C2BII,AXTF,EAAE,CaYC,EvBpBE,ANmBA,A2BFE,CXTD,EWUR,AXVU,ChBWC,CMnBC,AqBkBV,CXVW,CAAX,GWUK,CAAP,E3BCoB,CMnBpB,CqBkBY,C3BCW,CAAhB,A2BDO,E3BCY,A6BCrB,CAAa,EFFC,CAAnB,GACI,CADJ,AEEA,GFAI,CAAC,EAAE,IAAI,EAAE,GAAG,EAAT,CAAF,GAAiB,EAAE,IAAI,EAAE,GAAG,EAAT,CAApB,KAAqC,EAAE,GAAG,EAAL,GAAU,EAAE,GAAG,EAAf,IAAqB,CAA1D,CAHN;AF5BF,EnBYG,AqBoBD,CrBtBA,GNqBI,A2BCA,AXZA,AaWyB,CFC7B,CXZM,CWYC,CAAP,C3BDS,CAAC,AgBXA,EAAE,ChBWC,CAAT,CgBXW,ChBWC,AgBXZ,ChBWa,GAAG,CAAhB,EAAmB,EAAE,CAArB,EAAwB;EMjB5B,EyBOE,AhBwBA,ACxBC,IhBWG,A6BAF,CEXE,AhBwBC,CgBxBA,E/BWG,E+BXR,C/BWW,CAAC,CAAD,CAAH,C6BAK,G7BAK,MAAd,EAAsB,Eea1B,GAA+B,OAAO,CAAC,kBAAvC;EYZF,AXXC,EJXC,AmBYA,AhBwBA,EYdE,EEDc,CjBrBZ,CAAC,AZsBC,C2BAC,IAAI,CAAb,C3BAe,CAAP,A2BAQ,IftBd,GAAoB,EAApB;AD6BE,IgBNF,CAAC,G3BAI,A2BAD,AEDA,ClBOQ,CgBNZ,MEF0E,CAEtE,OlBMF,CAA0B,IAA1B,EAAgC,AkBRwC,EAAxE,MlBQA,EAAwC;EAC5C,AKlBA,EJVE,AesBA,CAAC,C3BAE,AWMC,EC5BA,AesBA,CXZC,CWYL,KftBW,CAAC,CD4BG,GAAG,EC5BlB,EAAoB,AD4BE,AKlBF,CLkBG,AKlBF,CAAD,EAAI,CAAJ,EAAO,EAAP,ELkBtB,AKlBiC,EAAX,CAAtB;AACD,EWYE,CAHD,C3BGG,CANM,CYhBL,EiBqBA,CFCG,EftBC,AZsBC,CYtBA,CesBE,AEDF,CAAC,GAAG,CjBrBT,AesBY,AEDP,EAAO,CjBrBE,CesBE,AEDF,CFCX,EAAgB,AEDF,GjBrBI,CAAC,MAAtB,CiBqB4B,CAAC,MAA7B,EAAqC,CAAC,GAAG,EAAzC,EAA6C,EAAE,CAA/C,EAAkD;AbTxD,ELiBE,EC5BG,AmBWD,AJWA,CAAC,C3BAC,CWMC,CgBNC,CIXA,CAAC,AJWL,AEDI,C7BCG,AWMA,CoBjBP,A/BWQ,AWMA,GXNG,AWMA,CXNT,AWMJ,AkBPY,E7BCI,AWMA,CXNC,C6BDD,E7BCI,AWMpB,CXNI,CWMkB,CXNC,CWMC,CXNC,AWMzB,CXNI,CWMuB,CXNC,O6BDK,CAAC,WAAW,CAAC,CAAD,CAAZ,EAAiB,MAAjB,CAA3B;IdeJ,AYbA,AhBMA,CgBNC,G3BAG,A2BAA,AhBME,AkBPH,CdcE,CYbL,E3BAQ,GAAG,CAAC,AWME,CXNH,CAAH,CWMS,GXNC,GealB,GAAwB,AfbpB,EAAsB,AWME,CAAC,CIO7B,AJP4B,CAA5B;EgBLD,CAHM,CfnBL,AmBWA,AhByBA,AJRA,IC5BI,AD4BE,CoBjBF,AJWC,CIXA,A/BWC,KYtBK,CAAC,AD4BE,CXND,CAAP,CWMW,GC5BjB,EAAoB,GmBWpB,ApBiByB,CoBjBF,ApBiBG,CAAD,CAAzB,CAFyB,CAIzB,MoBnBA,EAAmC,KAAI,CAAC,wBAAxC;ANrBE,EnBaJ,EqBoBE,CAAC,CftBC,EZsBG,A2BAD,AEFF,C7BAE,AyB/BQ,CEiCN,CftBA,CAAC,ANET,CAAA,AqBoBW,CFjCP,CzBiCS,AyBjCO,GEiCJ,C3BAC,EYtBb,AesBe,AFjCf,CbWe,ANEnB,ANoBoB,CMpBpB,ANoBqB,A2BAnB,AFjC0B,CzBiCR,CAAH,GAAS,CYtBA,CAAC,GNE3B,AmBbI,CzBiCS,CyBjCyB,CbWlC,ANEJ,ANoBkC,UMpBvB,IAAX,EAAiB,QAAjB,EAAyB;AWHrB,AaPN,E3BME,AsBRA,EbWG,AmBWD,AzBTA,AqBoBA,AhBOA,CgBPC,CFjCC,AI+BD,EETG,A5BdN,AGKM,AqBoBA,AhBOA,CRhCN,AcCc,AN+BP,CXPC,A2BAA,GrBpBG,AqBoBA,CrBpBC,ANoBA,C+BXC,CAAC,ANtBd,CdwCM,CRhCN,AwByBgB,AFjCA,CtBQhB,EcCI,AXIE,ANoBa,A2BAA,AhBOA,CM/BQ,AXIP,AK2BA,CgBPlB,GrBpBI,CWJF,AXIF,EWJgC,AXIP,CNoBf,AWOV,EoBlBA,A5BdF,AQgC8B,EoBlBE,C5BdhC,AHyBiC,IiBxB7B,EAA0C,IdDhC,AHyBN,EAAqC,GGzB7C,EAAmB,EcCf,EAAuD;EAC3D,AUwBC,ExBzBC,AsBRA,EMsBE,AdbE,AXIF,AK2BA,ERhCI,EGKE,CyBSF,CAAC,AdbG,AjBwBF,CMpBG,CmBbD,CRSG,AQTF,CtBQG,AGKA,ANoBF,AyBjCF,CAAV,EtBQiB,CcCC,AXIA,AmBbF,CRSG,AXIA,INoBE,CGzBG,AHyBF,AyBjCA,CRSxB,AXII,AmBbqB,CAAD,CAAtB,EMsBE,A5Bde,C4BcU,A/BWN,EAAS,EGzBI,CHyBD,CAAC,C+BXA,A/BWC,C+BXA,E/BWG,CAAL,CGzBjC,AHyBqB,EAAqB,GAAG,CAAC,CAAD,CAAxB,CAAT,G+BXV,A/BWkD,CAA5C,EAA+C;EiBvBzD,EcaG,A5BdD,AQgCC,AcxCD,AI8BA,ClBGyB,CMxBrB,AXIF,AK6BF,ERlCM,C0BsBD,CvBjBG,EHLE,EGKE,ANoBF,AyBjCA,CtBQG,AcCA,AQTF,CAAD,CnBaK,AmBbf,CRSgB,EQTA,CnBaG,ANoBF,CAAC,CGzBG,EHyBA,CGzBG,AGKT,ANoBL,AyBjCY,CnBaG,AmBbF,CAAD,CAAtB,CnBae,AuBiBV,C1BtBgB,AcCQ,AXI3B,AuBiBgB,G1BtBc,AcCA,CAAhB,GAAoB,CdDC,CAAC,IAAtC,A0BsBA,OZrBgB,GAAoC,CAAtD;ELCC,AKAD,AUuBA,ExBxBE,AYsCA,AU9CA,ERSE,AYoB+B,E1BrB3B,CYsCD,AYdA,CAAC,CAAD,CVvBG,AjBwBC,CAFD,A2BCC,CAAJ,AFhCK,CRSC,AUuBb,AFhCa,CAAD,CtBQK,AsBRf,EzBiCe,CGzBG,AsBRF,GV8ChB,EZtCuB,AcCzB,CFqCwB,AU9CA,CAAC,CAAD,CAAtB,IV8C6B,CAAC,CZtCZ,IAAmB,KAAK,GYsC1C,OZtCqC,CAAgB,IAAhB,CAArC;AwByBH,EftBC,AGoCC,EgBzBC,ANrBA,EnBYE,EyBSE,AFQF,GvBjBK,GNqBG,AyBjCA,CMqBC,AzBTA,AmBZA,CMqBC,AzBTA,AmBZF,CAAV,EnBYe,AuBiBF,CvBjBX,AmBZc,CzBiCC,CMrBC,ANqBR,CMrBS,GyBSnB,AzBTsB,AmBZA,CAAC,CMqBC,ANrBF,CnBYpB,AmBZF,EnBY2B,EAAE,CAA3B,EAA8B;AqBsBpC,EZcE,AEvCA,EdDE,AQiCA,AcxCA,EMqBE,AdbA,EdDE,AGKA,AK4BA,AkBZY,C1BrBX,E4BcC,ANrBC,CMqBA,AdbC,AXIA,ANqBC,CMrBA,CAAD,CAAJ,CK4BQ,CMhCC,CdDb,AGKc,EHLE,CQiCC,AcxCjB,CnBYc,GyBSZ,CAAmB,AdbvB,EAA0B,CNgCxB,EAA2B,EoBnBC,CAAC,EzBTf,EAAO,IAAP,EyBSZ,AzBTyB,IAAI,CAAC,CAAD,CAAjB,EAAsB,QAAtB,CAAV;AEJR,AQaM,ESpBH,CAND,CM2BG,AdbD,ATDJ,ELAM,AGKC,AK4BD,EMhCE,AYoBA,CJ5BC,AToBO,ChBaL,CAND,GQpBV,EqBoB8E,CZnB7D,AjByBA,A6BJT,GZrBY,CAAhB,AjByBiB,EiBzBE,CjByBC,AgBblB,ChBamB,AgBbO,ChBaN,CgBbpB,EhBauB,AgBbO,ChBaZ,CAAH,AgBbf,AaOwE,EbPtC,AaOlC,C7BM4B,CgBb5B,EAAsC,EAAtC,ChBae,CgBbyB,EhBaH,MAAM,GAAG,GAAG,CAAC,CAAD,CAAtC,EAA2C;AQ1B5D,AsBJA,EdkBE,EeEE,A5BfC,AQiCA,AcxCD,Cd4ByB,CMpBvB,ANkCF,AKtBI,EAAE,GSpBC,AToBE,ChBaD,CgBbG,GAAG,CSpBD,CAAC,AToBhB,ChBaiB,CAAC,GAAG,AyBjCZ,CzBiCC,CyBjCR;AjBMJ,EiBLG,AToBD,ICZI,AXGA,AUSE,EAAE,AaQJ,ErBvBN,AR4BW,CAFM,AgBXJ,CCZD,CXGC,AUSE,AaQJ,CAAC,CZpBG,CTHf,AQekB,CVTZ,ANsBW,A6BLF,CrBvBf,AQeE,AaQS,EZpBS,AYoBF,CZpBG,CYoBD,GAAG,CZpBR,EAAT,QYoB4B,CAAC,MAA7B,EAAqC,CAAC,GAAG,EAAzC,EAA6C,EAAE,CAA/C,EAAkD;AJ3BvD,EbQC,AJJuB,AQgBvB,EbbE,AcCC,AXGA,CWND,AXDA,GHGM,CSCR,AIYO,CJZP,AiBoBM,C1BrBK,AcCF,ATJc,AFOd,AUSA,CRhBc,AR6Bb,EG1BI,AaaF,EAAL,AaQK,GjBpBZ,AZyBiB,AgBbA,AaQF,CjBpBf,AZyBU,CgBbS,CbbG,AKHC,EAAA,AQgBD,CbbG,CaazB,Gbb6B,CKHN,AqBwBG,CrBxBH,AqBwBI,CAAD,CAApB,EjBpBN,GAAA,KTDyB,CAAU,KAAV,CSCzB,ATDsB;AsBLxB,ATmBC,EDyBC,APzCA,EIIE,ATF0C,AQkC1C,EMhCE,AXGA,EMHF,ADgCI,CAAC,CXPE,EeYT,AErCU,CFqCV,ATlCW,EWHE,EXGF,AK6BT,EMhCe,ANgCA,GIKjB,CHrCE,AGqCF,CErCa,CLAA,AKAU,KLAL,CGqClB,AErCa,AXGF,CWHP,CXGc,CSkClB,GHrCE,ANGS,SSkCX;ACvBF,IbhBoE,AYwChE,AErCC,EXEqB,AK8BpB,EXPG,CG5BL,CQmCM,AkBbF,CdkBG,AJLA,IkBbE,CdkBG,AclBF,GAAG,CAAJ,ElBaP,AkBbc,ClBaG,CkBbD,CdkBlB,EclBqB,IlBanB,EkBbyB,CAAC,MAAxB,EAAgC,CAAC,GAAG,EAApC,EAAwC,EAAE,CAA1C,EAA6C;EdmBlD,AErCA,CFmCD,CHpCE,ENE6C,ANwB1C,AWOD,ICjCF,ANES,CMFT,CNEoD,AuBkB9C,MAAM,EjBpBZ,ANES,CMFH,ANEJ,CuBkBc,cjBpBhB,CAAqB,EiBoBY,CAAC,CjBpBlC,CAAqB,IAArB,AiBoBwC,CAAC,CAAD,CAAP,EAAY,MAAZ,CAA3B;EjBnBP,AGuCD,CH1CA,CmBgBE,A5BhBA,AGKC,ANwBA,AWOA,CAlBwB,CAoBzB,EoBtBI,A5BhBA,CAAC,C0BuBA,E1BvBG,CAAC,MAAT,EAAiB,G4BgBG,GAAG,IAAvB;EnBXF,AKDA,AXEC,CAXD,CyBuBE,E5BjBE,CcGC,CYoBA,C1BvBE,CAAC,CcGC,CAAC,GAAG,CdHT,AcGJ,EAAgB,CdHC,AcGA,GAAG,EdHE,IcGtB,EAA4B,CAAC,IAAI,CdHhB,IAAqB,IAAlC,AcGJ,EAA4C;ETJ5C,AFQA,EHNG,AcGD,AjByBA,MiBzBM,CAAC,ATLT,AR8BS,CiBzBD,AjByBE,CiBzBR,EjByBW,CiBzBE,AjByBb,KQ9BF,CAAY,GSKY,GAAG,ITL3B,CSKgC,CAAC,ATLX,CSKU,CAAlB,GAAyB,GAArC;AaCJ,E9ByBG,EiBzBC,ATNF,AGuCE,AmBjCA,IbAI,ATNN,AGuCM,AkBdF,CZnBG,ANiCA,GMjCG,CTNV,GACE,CGsCA,CMjCc,CNiCC,EMjCE,CTLjB,CAAA,ESKqB,AaAA,CbAC,CTLtB,CAAA,AsBKwB,CbAP,CAAS,ETL1B,AsBKJ,EbAkC,CAAC,ETLxB,CSKmB,CAAU,ETNtC,ESM0C,CAAC,EAAL,IAAW,CAAC,KAAK,CAAC,CAAC,GAAG,CAAL,CAAN,GAAgB,EAA3B,CAAD,GAAmC,GAA5C,CAAT,CAAjB;AjB0BH,A8BxBD,I3BLI,AKAA,EGqCE,AkBdD,E1BvBK,EQqCA,CAAC,QRrCU,GAAG,AQqClB,CAAiB,IRrCM,IQqCvB,QRrCkB,KAAsB,KAAK,YAAL,GAAoB,EAA1C,CAApB;AH+BJ,AyBlCM,IMqBF,A5BjBA,AcGA,ENkCE,EoBpBE,A5BjBE,AcGF,ANkCA,CMlCC,ANkCH,AczCU,GROJ,OccO,GAAG,AddlB,CdHqB,CcGD,EdFlB,I4BgBF,C5BhBO,EsBLL,CAAmC,MAAnC,EAA2C,CAA3C,EAA8C,CAA9C,CtBKA,CsBL+C,ItBKrB,KAAK,gBAAL,GAAwB,EAAlD,CADF;EsBHF,EI0BE,EZnBE,ANkCA,AczCA,CROC,CQPL,CI0BO,CZnBC,AQPA,EAAR,QROI,UYmBG,CAAa,mBAAlB;AbLE,EDyBJ,EgBxBE,A5BjBA,AcGC,ANkCA,CMpCD,ANWyB,CA2BzB,AkBlBuC,EEJnC,A5BjBA,CagBQ,CbhBN,CcGC,CFsCT,CAAA,CZzCY,CcGC,CAAC,EdHE,CcGC,CAAC,EFsClB,CAAA,GCzBI,CeCqB,AfDO,EbhB1B,CAAJ,AYyCF,AEtCS,ADaL,EbhB0B,AcGA,ADaK,CDyBnC,CgBxBE,EAAgC,ShBwBlC;AepCI,ElBDJ,AaRA,ATqBA,EDyBE,EgBxBE,A5BjBA,AcGA,AQRA,ATqBE,CCbD,AQRA,ATqBE,CaKH,CjBlBJ,AkBCc,ClBDd,AKAQ,AQRA,ATqBE,CDyBD,AEtCA,CYkBC,CbLG,CAAC,EDyBA,AU9CA,CtBKC,AsBLA,CtBKC,AsBLF,CbQd,AaRA,CbQA,AIaA,CDyBE,AEtCE,AQRe,CtBKJ,A0BqBK,C1BrBhB,GSGJ,ATHwB,CAApB,ESGJ,IkBCI,CAAmC,OlBDvC,IkBCI,EAA8C;EfsCjD,AerCD,CfmCA,CHpCE,AKAC,ATLD,AiBHA,EMsBE,A5BjBA,AsBLA,AKSE,EDiBA,CrBvBA,AiBHC,CMsBC,AvBnBD,AsBMG,ClBDD,CJLP,CsBMW,ELTA,CbQC,AaRA,CMsBC,ANtBF,CMsBG,ANtBT,EbQL,CTHiB,AsBLA,CtBKC,AsBLlB,EKSsB,E3BJL,CAAf,E2BIyB,C3BJD,C4BiBpB,A5BjBJ,K4BiB8B,EDbrB,GAA4B,ICarC,ADbS,ECagC,CDbG,WAAhD;ElBAC,AGuCD,ATrCA,AmBVC,ATqBD,AcZA,ClBHA,AaRA,CtBOG,AKDD,AGsCA,GKrBG,CeCC,ApBoBA,AkBhBE,ClBgBD,Ac1CA,ETqBE,CVXT,AUWU,CVXV,AmBVW,ETqBE,CAAb,AaIoE,CAE5D,CbNQ,CeCC,ANtBA,ATqBA,CSrBC,Cd0ChB,Ac1Ce,CMsBG,AzBZpB,AKgCoB,Ac1CT,ATqBS,CVXpB,AUWA,AcZqB,ELTE,ATqBA,CSrBhB,ATqBiB,AcZA,CAAC,CLTC,ATqB1B,CeC2B,CAAC,ApBoB1B,AKrB0B,AaIwC,CChBpE,CnBiC8B,AkBlB1B,GvBdJ,GAAA,EKgCE,GoBpBI,KzBZO,IAAb,EAAmB,QAAnB,EAA2B;AwBA5B,ElBAC,ADiCC,EMnCC,AXGA,AmBVA,ATqBA,EeCG,ANtBD,EnBUE,CmBVC,CROC,AQPA,CROC,AXGP,CWHQ,CQPC,EROE,CAAL,CAAN,EQPe,CROC,AQPA,CROhB,AQPe,CAAf;AzBkCE,AWSL,AmBhCD,EbHG,AQPA,CAFM,CtBML,AaiBA,EbjBE,EaiBE,AaKF,C7BOU,AyBjCP,II0BE,CbLG,AaKF,G1BtBK,AaiBA,AaKF,C1BtBG,AaiBd,AaKO,EAAO,E1BtBD,A0BsBG,C1BtBhB,CH6BE,CAA0B,A6BPT,G7BOjB,EAA+B,KAA/B,A6BP2B,CAAC,C7BOU,GAAtC,EAAyC,A6BPzC,EAAoC,CAAC,GAAG,EAAxC,EAA4C,EAAE,CAA9C,EAAiD;E7BQrD,EG7BE,AGKA,AmBTA,ATqBA,EeAE,ANrBA,EtBIE,AGKA,AUYA,ChBYC,AyBjCA,CAAL,AI0BI,GvBjBK,AUYA,CVZC,ANwBA,EgBZE,AaKF,C1BtBV,AH6Ba,GAAf,AgBZkB,AaKF,CvBjBV,AUYa,CeAC,AzBZA,ANwBA,EgBZN,CeAS,AfAA,CeAC,AzBZlB,CyBYmB,AzBZvB,CUYwB,CVZC,AUYA,AaKF,CbLC,AaKA,CbLH,CAAO,CAAP,CAAT,CAAZ,GeAE,EFKgC,CAAC,CAAD,CAAX,EAAgB,WAAhB,CAAnB;EZnBN,AQNC,EMqBE,AvBlBD,AR8BA,C+BlBA,CzBNE,ENwBI,A6BPH,CZpBE,ATHD,CAAC,AFMG,CyBYD,A/BYE,EMxBE,CENX,AR8BY,C+BZD,Adfb,CXGgB,CNwBC,CAAC,EMxBE,CAAC,ENwBJ,CAAf,GMxBE,KyBY0B,OAArB,EAA8B;AddxC,IdHG,AKCA,AR6BA,AgBbA,EeCE,AzBZA,CNwBC,CAAC,CG9BC,AGMA,AUWA,CeCC,EzBZE,CHNC,AH8BN,AgBbM,CbjBC,AH8BV,AgBbU,EVXE,CyBYC,A5BlBA,AH8BA,AgBbA,CeCC,A5BlBT,AaiBS,EbjBE,AH8BA,CMxBR,ANwBS,AgBbA,CbjBC,AGMA,AUWlB,EhBagB,AgBbI,CbjBC,AGMb,ANwBR,AgBbqB,CVXnB,EUWsB,CeClB,AfDN,EAA2B,CAAC,EeCE,A5BlBA,AaiB9B,CbjB+B,CaiBC,GeC9B,EAAmC,A5BlBrC,EAAuC,CAAC,GAAG,EAA3C,EAA+C,EAAE,CAAjD,EAAoD;AcKxD,EQRE,EzBkCE,EG9BE,AsBJA,ATqBA,ChBaC,AyBlCA,CMsBC,A/BYA,A6BRF,E1BtBI,AsBJA,ATqBE,ChBaL,CAAH,GAAW,CyBlCC,CAAC,CzBkCb,AyBlCY,ATqBI,CSrBlB,EAAmB,ATqBE,GeCC,CfDG,CAAC,CeCD,A5BlBA,EaiBJ,CAAS,EeCxB,CfD2B,CAAC,CAAD,CbjBC,AaiBJ,CbjBK,AaiBE,CbjBH,AaiBJ,CbjB1B,AaiBiB,CAAjB,CbjBmC;EY2CvC,EfZE,AyBlCA,EMsBG,AzBbD,ANyBA,AyBlCA,AI0BD,CENC,C5BhBE,CsBJC,EnBSE,ANyBP,CeYF,CgBxBW,AhBwBX,ETrCa,AmBTA,CnBSC,AmBTA,CtBIC,AsBJF,CAAN,CnBSU,CAAb,CmBTe,CV8CnB,ATrCoB,AmBTlB,CV8CF,ATrCqB,GAAG,GAApB,EAAyB,CSqC7B,CTrC+B,CAA3B,CSqCJ,CTrCkC,WSqClC;EU7CC,CAFD,CVgDE,AfZA,EAAE,AgBdA,EeEE,A5BnBY,AGMZ,CNyBJ,AyBlCK,CToBC,CD0BC,ATrCA,CAAC,CAAD,AmBTE,CnBSL,ESqCQ,CTrCC,CUWC,CeEC,ANtBA,CAAC,CnBSH,AmBTE,AToBE,CeEC,ANtBT,CV8CT,EU9CqB,CAAhB,AToBH,EeEsB,ANtBA,AToBA,CeEC,OAAO,CAAC,EzBbpB,EAAW,IAAX,EAAiB,CyBaN,CAApB,EzBb8B,CAAC,CAAD,CAArB,EAA0B,QAA1B,CAAT;ESsCL,AfZA,CeUD,CPxCE,AiBJA,AIyBA,EEHG,AzBbA,AmBTD,EtBGI,AaiBF,CRhBA,AiBJC,CjBIA,AiBJC,EjBIN,CAhBoB,AiBYX,AToBA,CRdT,EQcY,CbjBG,CAAC,CAAD,AsBHA,CtBEsD,AsBFrD,CtBIV,AsBJS,CAAf,EToBI,QblBiE,CAEnD,GAFmD,CAAjE;AHiCP,EeaC,AU/CC,CAFM,CMwBJ,AvBhBD,AFGC,CAND,CHCG,A0BoBM,C1BxBP,CaoBE,CSpBC,EnBSE,EHLE,CagBC,GAAG,CAAT;AhBgBR,A8B1BM,ElBDJ,EmBeE,AvBjBA,AiBNA,EnBSE,AmBTA,AToBC,EbhBC,A0BoBF,CjBhBJ,ANCO,AmBTA,AKSO,ClBDd,AaRE,EnBSQ,EuBeA,EvBfA,CHLK,C0BoBD,CjBhBd,CAAA,GkBCI,ADeM,CCfmB,ADeT,EjBhBpB,GAAA,AkBCI,EAAgC,GxBA1B,EAAW,GMDd,CNCG,CwBAN,ClBDJ,CkBCgD,ClBDtC,YkBCN,ADegD,ECfS,EDenD,CAAN;AFWA,EFlCH,AKSD,ElBDE,AJFA,AQcC,EVZwB,AwBCvB,ADeD,EjBhBG,ATLY,CwB+BJ,GGzBd,ClBDW,IAAT,EAAe,Ie0Bb,CAAyB,kBAAzB,EAA2C;EAC/C,AE1DA,IjBgCI,AND8C,EHJ1C,ESKJ,ANDM,EAA+C,KHJxC,CAAC,CAAD,CADwD,AGK/D,CHHF,AGGJ,IMCA,ATNqE,CAE5D,CSIE,GTN0D,ESMrD,ATJD,GAFsD,CAAnE,GSMF;EaRJ,AKSA,ElBAG,AJHD,AFEC,AqB2BD,AXdA,EbhBG,A2BID,EtBHF,AQeI,CSrBC,EAAE,ETqBE,CSrBC,EAAL,AKSO,EdYE,CSrBC,ATqBf,CRfA,CiBNiB,ATqBA,AcZA,CtBHV,EiBNa,EAAtB,CjBME,GsBGF,EAA8B;ALR/B,EIwBC,ErBjBE,AFCA,AwBCA,EdYE,GcZG,ADeA,IbHI,AcZA,CAAC,CDeZ,EbHI,AcZW,CdWI,AcXZ,CdYU,CcZC,EAAE,GAAG,KAAK,CAAC,MAA3B,EAAmC,CAAC,GAAG,EAAvC,EAA2C,EAAE,CAA7C,EAAgD;AbD9C,AQNN,AIuBC,IjBhBG,AIaC,CAdyB,CbHxB,AamBF,AcdE,GlBDG,AKDO,CdHN,GSIG,CAAC,EkBCE,ClBDC,AkBCA,ClBDR,AkBCO,C3BLG,AcGb,AaEA,ClBDc,AKDO,ELCL,AkBCA,E3BLE,CSIC,AKDnB,EAA4B,AaEP,CAAC,C3BLlB,A2BKiB,ClBDG,AkBCxB,G3BL2B,GAAG,CAAC,AcG/B,EAAwC,GLCrB,CAAkB,MAAvC,EAA+C,CAAC,AKD9C,EAAqD,CLCJ,ATJjD,ESIF,ATJqD,ESIE,EAAE,CAAzD,EAA4D;AiBkBhE,EdqBE,AEvCA,EceE,ADbC,ElBDC,AKDE,EdHA,C4BkBA,CnBdF,AmBcG,EhBwBP,AEvCY,CFuCZ,EEvCe,EdHA,GAAG,AcGE,CAAC,CcenB,AhBwBF,CAAA,EgBxBsB,A5BlBhB,EcGN,ILCI,AGsCJ,EHtCkB,CGsClB,EgBxBE,EnBdqB,QGsCvB,IHtCkB,CAAkB,CAAlB,CAAd;AZ2BA,EiB3BJ,ELCG,AmBeD,AhBuBA,ATzCuB,AqB8BvB,EV5BI,EdHA,CH8BQ,EeYL,CTzCe,CAAW,CqB8BvB,CV5BG,AjB2BX,CeYU,AfZO,EiB3BH,CXFM,AN6BpB,EAAsB,CeYxB,ATzC0C,EqB8B1C,CrB9BsB,AN6BpB,C2BCkB,C3BDQ,IiB3BC,GAAG,CAAhB,GAAoB,aAApB,GAAoC,CAAtD;EFwCC,AEvCD,AjB2BA,CeUA,CTvCE,AUgBA,AcbA,E3BJG,AcGD,AjB2BE,A2BCF,EXdI,EcbA,CxBHC,AUgBE,CCdD,CU4BC,AG3BA,CxBHT,AUgBY,CCdD,AjB2BE,EgBbE,ChBaC,AgBbA,KhBaK,A2BCF,AG3BnB,C9B0BsB,A2BCF,AXdL,CCdjB,ADcE,MhBagB,CAAc,E2BCX,E3BDH,A2BCgB,I3BDM,IAAtB,GAA6B,CAAC,IAAD,CAA/C,C2BCqB,CAAjB;EZaJ,AT1CC,AN6BD,A8B1BC,CxBhBD,AwBWA,ClBIE,ATHC,AKED,AmB6BC,AXdD,EhBaI,CgBbD,CAAC,CJdC,AJDD,AsBEC,CtBFA,ER4BK,EgBbP,ChBaU,AgBbb,ERfA,CQec,ERfC,CICf,AIciB,CJdC,AIcA,CAAD,CRfjB,AR4BsB,AgBbtB,ChBauB,GY3BvB,GAA2B,AZ2B7B,CY3BE;EKAF,AXAA,AqBqBA,EfpBE,AIcA,AcbA,EbFE,CDeC,CAAC,CJdC,AIcF,CAAH,AcbM,EbFE,CLCR,AIcS,AcbA,GlBDG,AIcZ,CCfa,ADJa,CAqB1B,Acfc,ClBDd,AkBCe,KAAN,EbFX,AaEE,EbFwB;AU8B3B,E3BFC,A8BzBC,E3BLC,AcGA,ATAA,GR2BG,CG9BC,AcGA,ATAA,ELHE,CH8BC,CAAC,GAAG,CAAb,CiB3Be,CTAC,AR2BA,CAAC,CiB3BC,CdHC,AcGjB,CdHkB,AH8BA,CiB3BC,ATAA,GLHF,CAAb,CH8BN,EAA4B,CAAC,CG9BC,AKG5B,CLHA,AH8BF,CQ3BgC,CLHC,AH8BA;A2BInC,If9BI,AmBgBA,A/BWA,AgBXA,EbnBE,AcGA,ATAA,CR2BC,CY3BC,AZ2BA,C+BXA,AfAC,CeAA,A5BnBC,CSGN,AJAM,AR2BC,CG9BC,AKGD,AR2BC,CY3BC,AIgBA,CAAC,CbnBC,EamBE,ChBWV,AgBXW,ChBWd,EgBXiB,ChBWC,AgBXlB,EAAoB,CRhBlB,AQgBmB,CRhBA,CuBgBrB,CfAwB,CAAxB,CeAyB,A5BnBC,CAAC,AH8BA,AgBXA,ChBWC,AgBXA,ChBWD,CAA3B,AgBXA,CbnB0B,CAAxB,AKGA,AQgB8B,UeAhC;E/BYD,A8B1BD,ECgBE,AvBjBC,EIAC,ATHA,AcGA,ADgBA,GcfG,ClBDG,AIgBA,EChBA,CdHC,CamBG,CChBD,AaCb,ClBDgB,CIgBC,CAAC,CJhBC,CKAD,CAAC,ADgBE,CAAC,CAAD,CJhBG,AIgBN,CAAO,CChBZ,ADgBK,CAAD,CbnBS,AcGtB,CdHuB,CamBG,CJhBX,ETHO,AamBO,CJfzB,ATJJ,AamB8B,CAAD,CAAH,CAAO,CAAP,CJfjB,AIeT,OJhBe,GAEX,GAAG,CAAC,4BAAJ,EAFJ;AZ4BL,A8B1BA,IbDI,CAHD,CLKE,KKFK,CLEC,CAAC,WAAP,CAAmB,KAAK,OAAxB;AZ2BN,AyBnCM,AKSN,M3BNM,AcIA,ADeA,GStBU,ETsBL,CCfC,CdJC,EAAE,AcIA,ADeA,CAAC,CbnBV,EAAa,AcIA,ADeA,CAAb,EAAgB,CAAC,CCfR,CAAU,CDeC,CStBpB,ATsBqB,CStBQ,ETsBL,CCff,ADeT,CCfA,CDe2B,CStB3B,ATsB4B,EStBS,ATsBrC,EAAgC,QStBhC,EAA+C;EjBMlD,AiBLD,EROG,ELCC,ETLE,AamBA,CStBC,CbQC,EIcE,CbnBC,AamBA,EJdE,EIcE,CAAT,CStBW,CAAC,ATsBA,CJdV,KAAgB,AaRP,EAAS,ItBGpB,CAAyB,IAAzB,CsBH8B,CtBGC,AsBHA,CAAD,CbQhC,AaRa,EbQa,AaRW,UAAU,CtBG7C,AsBH8C,CAAD,CAAlC,CAAjB;AACD,EROE,ATDD,ILHK,ESKC,EIcE,GJdG,AIcA,CAAC,CAAD,CAAH,CAAO,CAAP,IAAY,CAAZ,EJdF,CAAkB,IAAlB,CACE,IAAA,cAAA,EAAO,GAAP,EAAY,qBAAA,CAAa,UAAzB,EAAqC,KAAK,MAA1C,EAAkD,IAAlD,CADF;AaNR,EV6CE,ATzCA,EyBkBE,EnBbG,EIYE,CeCD,AfHA,CeGC,EhBuBP,ATzCA,CSyCA,ATzCA,EUiBa,ODwBb,ATzCA,CyBkBE,AhBuBF,ATzCA,GyBkBuB,OAAO,AzBlB9B,CyBkB+B,EzBlB/B,GSyCA,GAAA,CgBvBE,GzBlBS,IAAX,EAAiB,ESyCjB,MTzCA,EAAyB;EWEzB,EckBE,AhBsBA,ATzCA,EHHE,CcIC,CXDG,EUiBA,CDwBC,AExCA,AXDE,CWCD,CdJC,AaoBA,CAAC,CChBC,ADgBF,CDwBG,AExCd,ADgBQ,CAAO,CChBC,ADgBR,CChBS,GAAG,CDgBC,CbpBC,CAAC,EaoBE,CChBzB,CdJsB,CAAlB,AY4CK,AExCmB,ADgBA,CChBC,EDgBE,CDwBC,ACxBA,CChBC,ADgBF,CAAH,CAAO,CAAP,CAApB,KChBR,EAA4C,UFwCZ,CAAgB,KAAK,MAArB,CAA9B;EACD,CAFD,CZ1CG,AcID,AXFY,EMKV,EIaG,CJbA,CAAC,AKHA,CAAC,CAAD,CAAN,GLGE,AKHW,MAAM,KAAK,CAAC,CAAD,CAAZ,GAAmB,SAA/B;AU8BE,EZYJ,EHtCG,AKHD,AXHmC,EUmBhC,GWaS,CV7BN,CAAC,CAAC,AXH0B,CAAW,EWGlC,CAAL,CAAN,EXHA,CWIG,MAAM,EU4BP,CAA8B,CV5BnB,CAAC,IAAL,CAAU,IAAI,AU4BrB,CV5BsB,CU4BqB,EV5B1B,CAAS,IU4B1B,CV5B+B,CAAC,AU4BoB,CV5BnB,GAAG,CAAL,CAAL,GAAe,MAAxB,CAAV,CAAP,CU4BA,EV5BqD,AU4BiB,IV5Bb,CAAC,EAA1D,GAA+D,EADjE;AYmBJ,EjBfG,AKFA,AU4BD,Cf/CA,CTaE,AaqBC,EWaG,GEXC,E1BvBE,SAAP,GwBkCqB,CEXzB,CAAyB,CFWG,IAAA,MEX5B,EAAsC,IFWV,EAAO,AEXnC,EAA4C,KFWF,GAAG,GAAjB,EAAsB,GAAtB,IAA6B,GAAvD;A3BDI,A8B1BA,ElBGJ,ATTC,AwBkCD,AXbC,AaED,C1BpEA,Aa+BmC,CVejC,AUsBF,EWWM,AEXF,CFWG,CrBjCD,CN+BQ,A8B1BA,CH4BJ,AEXF,CvBtBN,EAAS,AuBsBA,CFWG,AEXd,C7BSI,A2BEW,C3BFM,E2BEX,C3BFN,A2BEe,E3BFO,GAAtB,EAAyB,A2BEH,AG5BtB,CAA4B,KAA5B,EAAmC,SH4B7B,CAAV,AG5BI,EAA+C,aAA/C,EAA4D;E3BJhE,AcIA,AjB2BA,A2BEA,AG5BA,ADiBA,EEDE,EzBrBE,AN+BE,A2BEA,AG5BF,ADiBE,C7BSC,E+BVD,AdjBC,AYkBE,CEDF,A/BUG,E6BTE,CvBtBD,AN+BE,CM/BD,AN+BE,CiB3Bd,CaCc,CxBLH,CAAP,AqBiCc,G3BFR,A2BEW,AG5BF,C9B0BG,C6BTC,CEDrB,AFCsB,C7BSd,CAAV,C+BVwB,GDhBpB,ADiBJ,CEDE,GDhB8B,KH4BO,AG5BF,IH4BM,CAA3C,AG5B0C,UAA1C,EAAsD;AbAvD,ETFC,AR6BA,A2BEA,AEXA,EEAE,AzBtBC,AwBKD,CxBPA,CNiCI,A2BEA,AEXF,EAAE,CCjBC,ExBLE,AN+BE,A6BTF,CrBpBT,CAAA,AsBGW,C9B0BG,A8B1BF,CxBLC,AN+BE,A2BEA,EG5BA,C9B0BG,A2BEA,AG5BX,C9B0BY,CM/BD,AN+BlB,A8B1BkB,CxBLC,CEEnB,AmB+BsB,AG5BF,ADiBA,CrBpBpB,AmB+BuB,AEXF,ECjBE,CtBHvB,AmB+BkB,AEXM,CFWG,CrBjCd,CEEb,AFF2B,AqBiCT,AEXS,CCjBC,ADiBR,CFWW,AG5BF,ADiBpB,CAAqB,CvBtBjB,AuBsBJ,CvBtBA,AuBsBT,EvBtBkC,CwBKhC,EtBHE,AsBGiC,CAAC,EtBHtC,CmB+BkB,AG5BuB,CtBHlC,AmB+BP,CG5BE,EAA2C,EAAE,CAA7C,EAAgD;EH8BlD,AXdA,AaEA,ErBpBE,EFFE,AqBkCA,AXdE,AcfF,ADiBA,CbFG,CRlBD,AqBoBA,CFYC,CXdG,CVpBD,AuBsBA,CFYC,CnBhCR,CQkBY,CVpBD,CAAC,AqBkCA,AG7BA,CH6BC,AG7BA,CAAD,CxBLG,AUoBP,AcfN,CxBLK,AUoBW,CAAV,CVpBU,AqBkCV,AXdV,AcfoB,ADiBA,CFYC,AEZA,CvBtBC,AqBkCA,EEZE,CvBtBC,AqBkCA,AG7BA,CAAC,CAAD,ADiBE,CCjBvB,ADiBgB,CvBtBS,AqBkCnB,AEZD,CvBtBqB,AqBkC9B,AEZ8B,CAArB,CAAT,IvBtBI,EAAkC,CAAC,GAAG,EAAtC,EAA0C,EAAE,CAA5C,EAA+C;EN+BnD,A2BIA,EG7BG,E9ByBC,A2BIA,ErBlCE,CqBkCC,E3BJP,C2BIU,CrBlCC,AN8BA,G2BIG,CAAC,KAAL,CAAW,CAAC,CAAC,GAAG,GAAG,CrBlCvB,CAAyB,CqBkCC,GrBlCG,CAAC,AqBkCf,CrBlCc,CAA7B,EAAkC,AqBkCA,EAA9B,CAAV,KrBlCM;ES4CN,AYTA,AXfA,AaEA,ErBpBE,AR6BA,EM9BG,AqBkCD,C3BJC,AgBXA,AaEA,CrBpBC,AR6BA,C2BIC,EXfE,AaEA,CdsBT,AYTU,AXfA,AaEA,CdsBV,AP1CW,AmBiCA,C3BJT,CAAW,AgBXA,AaEA,C7BSX,A2BIY,AXfA,AaEd,E7BSgB,A6BTA,C7BSd,A2BIe,AXfA,AaEA,CrBpBX,AQkBN,EDwBA,AYToB,AXfA,AaEA,CdsBpB,ACxBqB,CRlBC,CqBoBtB,CFaU,CXfe,AaEA,CbFzB,AaE0B,CrBpBC,AmBiCA,CXfC,AaE5B,CbF6B,CWeC,AEbA,CbF9B,EWeiC,AXfA,CRlBX,CO0CtB,AP1CmC,AmBiCnC,GZSA,WP1CsB,CO0CtB,AP1CkD,GAA5B,CAApB,EAAsD;ELFxD,AHgCC,A2BID,EZSE,AT3CC,AUmBD,AcfA,ADiBA,CvBzBO,AqBsCN,AXfA,CRlBC,AQkBA,CAAD,CbrBH,AwBoCM,AXfJ,AaEM,C1BvBR,A2BMO,CDiBG,CdsBD,AP1CA,AFDA,AUmBA,CWeC,AG9BA,CH8BC,AEbE,CrBpBD,AQkBA,CAAC,CDwBC,ACxBF,CWeN,AXfG,CbrBT,AwBoCgB,AXfA,CbrBhB,AKGiB,AQkBR,EWeU,CG9BjB,CdemB,CWeC,AEbE,CAAC,CrBpBb,AQkBY,AaEA,CrBpBC,AQkBA,AaEZ,CdsBX,ACxBsB,AaEI,CbFP,AaER,CrBpBD,AQkBgB,AaE1B,CrBpBE,AQkBiB,CAAnB,CWeI,CxBpCN,GAAA,AwBoCmC,SAAnC,GxBpCA;ESSA,AGqCC,AevCA,CfqCD,CgBpBE,A5BvBA,AKGC,AqBoBD,EvBrBE,EuBqBI,CjBfR,AmBeM,A5BvBC,CSQP,AmBeO,AFAG,CvBrBD,EuBqBI,MjBfb,ATRE,CSQF,AmBeE,GAAkB,A5BvBC,C0BuBG,CAAC,CjBfzB,AiBewB,CEAtB,A5BvBmB,A0BuBR,CAAe,CjBf5B,AiBea,CvBrBT,AuBqBF,CvBrB2B,IAAzB,EHFiB,AGEc,EMM5B,ATRoB,KAAK,CGE5B,EMMJ,EAAe,CAAI,CAAnB,GTRqB,CAAnB;ESUF,ATTC,AY8CD,AffA,A2BKA,CxBtCA,CGIG,AUkBD,AaGA,EFaE,EEbE,C7BQC,A2BKA,AXhBA,GaIH,CFYO,AXhBA,ChBWX,AgBXY,CWgBZ,CEZI,CFYW,AXhBA,CAAC,GAAG,CAAjB,EAAoB,CAAC,IAAI,CAAzB,CaIE,CbJ0B,CAAC,AaIjB,EbJZ,AaIc,EbJmB,CaIhB,EAAf,KACC,IAAI,IAAI,CAAC,GAAL,CAAS,IAAA,eAAA,EAAU,EAAV,CAAT,CAAJ,GAA8B,IAAI,CAAC,GAAL,CAAS,IAAA,eAAA,EAAU,EAAV,CAAT,CAD/B,CADF;A7BSH,AyBhCK,EMuBH,A5BrBD,AGCC,AwBGD,CxBdA,CEWE,AmBkCA,AEXA,EbLE,AaKA,CFWC,EFrCS,ATqBP,AcfA,ADoBA,CFWC,AXhBA,CRlBC,AmBkCP,AXhBK,AaKL,CbLE,CAAO,CAAP,AcfJ,EtBHE,GQkBe,GAAG,CSrBhB,ATqBiB,CSrBQ,ATqBT,CAAH,CAAO,CAAP,ISrBb,ATqByB,CAAC,CSrBQ,ATqBP,CAAD,CAA1B,KSrBA,EAAyC;AzBkC/C,A8B3BC,ECkBC,AvBrBC,AiBHD,CjBHA,CmBwCE,AXhBC,AaKD,EAAE,CFWC,EFpCH,AIyBK,EFWE,AEXP,CFWA,IFpCO,CAAC,CAAD,CAAP,IAAc,OAAO,CAAC,CAAD,CAArB,IACA,OAAO,CAAC,CAAD,CAAP,IAAc,OAAO,CAAC,CAAD,CADrB,IAEA,OAAO,CAAC,CAAD,CAAP,IAAc,OAAO,CAAC,CAAD,CAFrB,IAGA,OAAO,CAAC,CAAD,CAAP,IAAc,OAAO,CAAC,CAAD,CAJvB;AAMD,AKED,EtBHE,AFFF,AqBmCG,AXhBA,AaKA,OvBxBH,UAAA;AApGA,AmByGA,CnBzGA,CAAyB,eAAzB,CAAA;AAsGA,EqBmCE,AXjBA,AaKA,IFYI,GAAG,AXjBA,AaKC,CbLR,GWiBW,AEZC,EFYZ,CEZe,CFYA,KEZP,GAAgB,MAAjB,GAA2B,GAAlC;AbJD,AaKA,IFYG,GAAG,GAAG,CAAN;AXfJ,AaKA,EEJE,EJeE,GAAG,IAAI,CAAP,GIfF,CAAA,SAAA,CAAA,wBAAA,GAAA,YAAA;EJgBC,EIfC,KAAK,UAAL,GAAkB,IAAlB;EACD,CAFD;A/BYI,E+BRJ,A5BvBA,AKEA,AmBmCA,MxBrCA,CAAA,AH+Bc,A2BOZ,GnBpCF,AmBoCK,CnBpCL,AR6BI,CAAe,C2BQjB,E3BRE,CG/BJ,CAAA,AH+BwB,GQ7BxB,CAAA,AR6BI,C2BOF,C3BP0B,E2BS1B,GnBtCF,CLFA,AwBwCE,EnBtCF,CLFA,UAAa,CKEb,GLFA,AwBwCE,ExBxCe,AwBwCL,GAAV,EAAe,CAAf,CAFA,GAGA,SAHA,GAIA,IAAA,iBAAA,EAAU,GAAV,EAAe,CAAf,EAAkB,YAAlB,CAJA,GAKA,QALA,IAMC,iBAAiB,IAAI,CAArB,GACG,EADH,GAEG,MAAM,WAAW,CAAC,MAAZ,CAAmB,iBAAiB,GAAG,CAApB,GAAwB,CAAxB,GAA4B,CAA/C,CARV,CADF;AAWD,EfvCC,AZuBA,EG/BE,AKEA,ER6BI,GYvBN,CAAA,CTRU,AKEA,CR6BE,GAAG,CG/BA,AKEA,ER6BG,CYvBlB,AZuBmB,CYvBnB,GJNU,ER6BK,CG/BL,CKEgB,EIM1B,CTR6B,AH+BC,CAA9B,CYvBA,CJNgC,CAAC,CLFC,GKER,CAAY,GIM5B,EJNiC,CLFd,CAAgB,ESQ7C,EAAgB,ATRa,CAApB,AKEiB,CAAjB,GLF8C,CKEC,EAAtD,MLFA;AwBiDJ,AG3CM,E3BLH,AKEA,AR6BD,CGjCA,AKEA,CIQE,EZuBE,GYvBG,AkBHO,E9B0Bd,KYvBE,GACE,GkBJA,CAAwB,GlBIjB,MAAP,CkBJA,EAAkC,ElBIhB,QAAlB,GAA6B,QAAQ,CAAC,cAAT,CAAwB,MAAxB,CAA7B,GAA+D,MADjE;EAED,ATRD,AY4CA,AP1CA,AsBEA,ClBCA,GkBDA,MfwCA,CAAA,SAAA,AexCA,CfwCA,CexCQ,UAAU,CAAC,MfwCnB,CexCQ,EfwCR,AexCA,EAA8B,UfwC9B,AexCA;E9B2BA,A8B1BA,EfwCE,EexCF,C9B0BK,IecI,AfdA,CAAC,GAAG,CecC,Afdd,EAAgB,CAAC,E8B1BjB,C9B0BoB,C8B1BH,K9B0BjB,EAA4B,CAAC,Cec3B,CfdF,A8B1BA,E9B0BiC,A8B1BJ,UAA7B,EAAyC,cAAzC;ALAI,ATeA,AcdL,ElBGD,AGqCG,CAFD,CfZE,KYvBJ,AZuBS,AyB3BO,ATeA,GhBYJ,GAAG,CYvBf,AZuBgB,CAAD,CAAX,AgBZE,CSfA,ATeoB,CSfC,MAArB,EAA6B,CAA7B,EAAgC,CAAhC,CTeA,CSfiC,CTeC;AJ5HxC,AkBgHA,ClBhHA,CAAsB,AGwJpB,AU1CA,ATeA,OSfO,ATeC,MSfK,CAAC,Cb9GhB,Aa8Ge,Cb9Gf,Aa8GS,IAAa,CAAb,ATee,GAAG,CSfA,CAAC,CTenB,GSfuB,ATeE,IAAI,CAAC,CSfD,CAAC,ATerC,CSfoC,CAA7B,IAAoC,MAAM,CAAC,CAAD,CAAN,IAAa,CAAjD,IAAsD,CAAC,IAAI,MAAM,CAAC,CAAD,CAAxE;AnBHF,AmBIC,ATeA,IhBWG,IAAI,EM9BE,CAAC,CN8BC,CAAC,KAAD,EM9BZ,AN8BoB,CM9BC,AN8BT,EM9BZ,AN8BuB,GAAX,CAAR,EAAyB;AM5B7B,AmBIA,ATeA,MhBUM,OAAO,EYvBE,GZuBT;A6BLA,I7BMD,K6BNW,OAAV,CAAkB,QAAlB,EAA4B,WAA5B,EAAuC;EEF3C,A5BtBA,AKEA,AR6BC,A6BND,IAAM,E1BzBN,CAAA,GKEA,CAAA,AqBuBa,EEHb,CAAA,AFGgB,E1BzBhB,CAAA,GKEA,CAAA,EuBoBA,CAAA,CFG2B,G1BzB3B,C0ByB+B,E1BzB/B,A0ByBA,GrBvBA,GAAA,ILFY,E4BsBZ,GAAA,G5BtBA,AKEA,ELFoB,O4BsBpB;ADhBI,EDoBJ,EEHE,A5BtBA,AKEA,EqBuBI,E1BzBA,CAAC,A2BKO,EtBHJ,CqBuBE,E1BzBA,C0ByBG,CrBvBA,MqBuBO,CrBvBZ,AsBGN,ADoBmB,C1BzBrB,A2BK2B,E3BLL,CKEE,EqBuBX,ErBvBW,EqBuBO,ECpB7B,EAAoC,KtBHd,EAAO,EAAP,CqBuB1B,CrBvBqC,KAAK,OAAhB,CAAjB,IAA8C,EAArD;EACD,AR4BD,A8BzBA,ADoBA,CrBzBA,GuBqBS,A5BrBL,A0ByBE,G7BKC,IG9BI,AH8BX,A8BzBW,CAAC,EDoBI,E1BzBZ,C0ByBe,ECpBnB,CAAoB,IDoBM,CAAC,QCpB3B,EDoBmB,IAAsB,WAAzC;A7BMD,A8BzBA,EfwCC,AP1CA,AqBsBA,E1BzBG,E4BqBC,AFIE,IAAI,CEJD,ChBwBT,CAAA,AcpBa,CEJT,CAAS,MFIQ,CdoBrB,AcpBsB,CdoBtB,McpBa,EdoBb,AcpBA,CEJI,EhBwBJ,YAAA;AfbF,A8BzBA,ICaI,AhB0BA,OAAO,KAAK,OAAZ;EgBvBD,AhBwBA,AcrBD,CEPA,AhB0BA,CZ5CE,E0ByBE,IAAI,C1BzBC,I0ByBI,I1BzBI,GACX,QAAQ,IAAI,E0BwBL,CAAa,E1BxBH,UADN,GAEX,I0BuBN,E1BvBY,A0BuBmC,C1BvBlC,IAAP,CAAY,KAAK,UAAjB,EAA6B,MAA7B,GAAsC,CAF1C;AaqBE,EeGJ,A5BrBC,AY6CD,CZpDA,C0B8BE,KbLY,GaKJ,GAAG,GbLT,CAAoB,IaKH,CAAC,KAAT,GAAiB,CbL1B,EAAkC,MaKzB,CAA2B,UAA3B,EAAuC,WAAvC,CAAX;AJnBE,EtBFJ,AaiBA,AaKC,OJpBa,ATeN,cAAc,GAAG,IAAI,CSfzB,ATe0B,CSfO,CTe9B,GAA6B,ESfhC,CTeJ,CSf6C,UAAzC,EAAmD;ATgBxD,ERlBC,AiBGA,IAAM,IAAI,EjBHV,CAAA,AiBGa,MAAM,CAAC,CAAD,CjBHnB,AiBGA,CjBHA,aAAA,GAAA,YAAA;AFCF,AUmBA,EShBE,AImBA,ErBtBE,EiBGI,AImBF,IvBtBI,AmBGE,AImBF,CrBtBC,AFAA,CEAC,CAAC,AiBGE,AImBF,CAAX,IrBtBgB,CiBGG,CnBHrB,AmBGsB,CnBHD,AmBGA,CAAnB,GjBHE,AFAJ;AAEA,EEDG,AiBGD,AImBA,CrBxBA,GiBKM,AImBF,IJnBM,GAAG,IImBb,EJnBmB,AImBF,CJnBG,CAAD,CAAnB,GImBA,EAAyB,CAAzB,EAA4B,EAA5B,EAAgC,CAAhC,EAAmC,EAAnC;A7BOI,EQ3BJ,AiBEA,IAAM,GzByBQ,CyBzBJ,GAAG,EzByBT,CAAiB,GyBzBF,CzByBf,AyBzBgB,CAAD,CzByBQ,AyBzB3B,IzByBI,EAA2B;EAC/B,AyBzBA,AIkBA,I7BOM,AyBzBA,CAAC,GzByBG,AyBzBA,AIkBF,G7BOK,C6BPb,G7BOiB,CAAC,EyBzBE,CAAC,CAAD,CAApB,CzByBA;EG5BA,AY4CA,AUxCA,EIkBE,EJlBI,CAAC,CtBJP,CAAA,A0BsBO,CJlBG,EVwCV,CAAA,KZ5CA,CAAA,CsBIoB,CAAC,CVwCrB,AUxCoB,CVwCpB,AUxCA,OIkBO,CAAa,CdsBpB,GAAA,CctBE,E1BtBF,GAAA,IY4CU,MZ5CU,AY4CpB,EAAgB,EZ5ChB,EAA0B,QAA1B,EAAkC;EH6BlC,AyBxBA,EtBJE,AY4CA,ActBA,E7BME,AyBxBA,EtBJI,CY4CD,ActBA,C7BMC,KAAK,CegBX,CZ5Ce,CsBID,CVwCC,AfhBA,CG5BG,AH4BF,CyBxBC,ItBJM,AY4CvB,CfhBF,EAA0B,E6BNnB,CAAa,I1BtBA,IAAmB,GsBIpB,AIkBjB,CJlB8B,CtBJY,MsBI5C,ItBJuC,CAAgB,IAAhB,CAArC;A2BKE,ECgBJ,EhBwBE,AfhBA,A6BNA,KdsBK,AexCO,ADkBP,E7BME,C8BxBL,CAAc,ECgBlB,CAAA,A/BQE,EegBA,GAAiB,CAAC,EAAE,CgBxBtB,CAAA,CDhBI,EAA4B,CfwCJ,ActBrB,CAAa,GdsBY,KgBxBhC,AhBwBqC,GgBxBrC,AFEE,IdsBkB,CAAlB,OgBxBF;EhByBC,AfhBA,AyBzBD,AKCA,CfqCA,CgBrBE,A5BrBA,A0BuBA,EJnBE,CAAC,CtBJC,C2BKC,ADkBA,CJnBC,IAAR,EAAc,AKCA,C3BLZ,EAAe,W2BKV,ADkBA,CAAa,IClBa,QAA1B,GACH,EDiBF,ECjBE,gBAAA;EfyCJ,AP7CA,AsBIY,ELDV,AImBA,EEHO,A5BpBL,G0BuBG,C1BvBG,EKCV,CAAA,ELDe,CsBID,EtBJI,CsBID,GjBHjB,CAAA,ILD2B,CAAC,CKC5B,CqBsBO,CJnBsB,AImBT,CrBtBpB,EiBGgC,CtBJd,CAAkB,MKC7B,AqBsBL,E1BvBgB,CAAd,AKCJ,EAAY,QAAZ,AiBGgC,CAAa,CjBHzB,GiBGlB;AnBDJ,AUiBM,EhBSJ,AyBxBC,AKAkC,CLFnC,CjBDE,EuBmBE,AFE6B,C7BM5B,CQ3BC,CiBGC,ATeO,CVjBN,CyBkBC,AzBlBA,AN0BA,CAAC,CyBxBC,CMgBP,ANhBQ,CMgBC,A/BQA,AgBTT,ChBSJ,AgBTqB,AcfjB,CtBHF,AiBGa,ATeX,AchBG,C9ByBS,CAAC,AgBTO,CVjB1B,AUiBM,CVjBe,AmBEZ,CzBwBa,AgBTK,CVjB3B,AmBEuB,EMgBjB,C/BQJ,EAA0B,CAAC,EAA3B,EAA+B;AMxBjC,EUgBE,AcfI,ECcF,AvBjBA,AR2BA,AyBxBA,EtBLE,AaoBE,CAAC,ChBSD,A6BNF,E1BvBI,AaoBE,CAAC,ChBSD,CQ3BC,AR2BA,CAAD,AgBTI,CbpBD,AH6BP,AgBTN,CRlBc,AiBGA,GAAG,CtBLC,AH6BA,CG7BC,CAAf,EAAkB,AH6BA,CAAC,CQ3BT,AR2BQ,CAApB,EAAyB,EyBxBE,CjBHf,CAAU,CiBGQ,EjBHlB,CAAZ,kBiBG8B,CAAa,KAA3C;EMiBD,ANhBA,ATeD,AchB+B,CCa/B,G/BYI,A6BND,E1BvBG,CaoBC,CAAC,EbpBE,CH6BC,AgBTA,CAAJ,EchBuB,C3BJf,AaoBA,ChBSX,AgBTG,EchB2C,CdgB/B,CAAC,EclBpB,CdkBuB,CAAhB,GAAoB,CAA3B,GbpBU,IAAyB,IAAI,IAAI,KAAK,gBAA1C,EAA4D;AaqBnE,AchBA,ECkBC,EvBrBE,AR4BC,IQ5BG,ELDE,GKCG,WAAL,CAAiB,SAAjB,CAAJ,EAAiC;AQqBrC,AchBA,EfwCE,AfhBC,AyBzBD,EIkBE,ErBrBE,AiBGA,CAAC,EIkBE,C1BtBC,AsBIA,CjBHC,CO4CT,CAAA,CUzCA,EAAc,GtBJG,CAAC,EY6ClB,CAAA,CP5CI,CLDa,AKCM,CLDf,GAAmB,AKCA,CqBqBpB,CAAa,OAAlB,ErBrBqB,CO4CvB,AP5CuC,GLD/B,AY6CR,MP5CuB,EAA2B,GAA3B,CO4CvB,CP5CuD,QAAhC,CAAnB;IO6CF,AP5CC,AiBGD,EIiB2B,I1BrBrB,CY6CC,CZ7CC,IY6CI,AUzCA,CtBJC,EsBIE,YAAY,CVyC3B,CZ7CQ,CAAsB,AsBIA,ItBJtB,CAAF,gBsBIwB,CAAa,KAA3C;EV0CD,AfjBD,AyBxBC,CVuCD,AUzCA,KtBFO,A0BqBH,C1BzBE,AHgCC,AyBxBA,IzBwBP,AyBxBW,CAAC,CtBJC,EsBIE,EIiBA,EJjBR,EAAc;AzByBtB,A2BqBK,EZHJ,EP9CE,AiBIA,IIgBgB,CF6BJ,CxBjDN,GKAG,EmBiDP,CnBjDU,AmBiDO,AF7CP,GtBJG,AsBIA,CtBJC,MAAV,AwBiDJ,CxBjDqB,CwBiDQ,GF7CJ,CtBJrB,EAAwB,AsBIA,CtBJxB,CwBiDJ,EAAuC,EnBjD7B,CAAgB,cAA5B,AiBI8B,CE6C5B,AF7CyC,EE6CgB,GF7C3D;AnBAE,AN0BN,E2BoBE,AF7CC,IE6CG,EE7BE,CvBjBQ,OAAV,AqB8CJ,AE9BqE,CvBhB/C,AuBkBhB,CF4BU,ErB9CZ,EAAqB,SuBgB4C,EAAjE;EEEJ,AzBjBA,EEJE,AmBkDA,ErB9CE,EEJE,AqBsBF,E1BtBI,CGIC,AqB8CA,CrB9CC,AuBkBF,CrBtBG,CLAC,C4BqBZ,AFCW,CEDX,GzBjBI,AqB8Ca,AE5BF,CvBlBG,AqB+Cb,AE7BW,G1BtBK,AGIjB,AuBkBO,C1BtBW,AKAhB,AFIN,AuBkBoB,CEDpB,AvBrBuB,CuBqBvB,AzBjBwB,CqB8Cf,CACI,ExBnDD,GwBkDH,CnBlDH,CLA2B,AKA/B,AmBmDkB,CxBnDZ,CKA2B,CLAC,C0BsBD,CAAC,CEDpC,GAAA,CJ8B8B,CAAC,CAAD,CAAV,CAAc,EE7Ba,CAAC,CAAD,CED/B,AFCmB,EF6Bf,AE7BgC,CF6BV,EI9B1C,EAAqB,CFCc,CAAxB,CAAP,WF6BgB,CADX,EAEJ,OAFI,CAEI,KAFJ,EAEW,UAAU,CAAC,CAAD,CAAV,CAAc,OAAd,CAAsB,kBAAtB,CAFX,CAAP;EAGD,AFhDD,CE4CA,CI3BE,AzBjBA,EEJE,AiBIA,EMiBI,CzBjBD,AqBgDA,EI/BI,AvBrBF,CLAC,CGIC,CyBiBG,AzBjBF,GAAG,CAAR,AmBAS,CMiBG,A5BrBF,CGIC,EAAE,CmBAC,CtBJC,AKAlB,CuBqBU,AvBrBS,AFIA,EyBiBrB,CzBjBwB,CEJC,AFIA,KHJV,CAAgB,AGI/B,EAAiC,CAAC,CHJnB,CAAP,AKAa,CAAgB,AFIA,EAArC,CmBAmB,CnBAsB,AmBAT,EnBAW,CAA3C,EEJqB,AFIyB,EEJE,AiBIlD,EAA2C,CjBJpB,EAAgC,QAAhC,CAAnB;IuBsBF,AvBrBC,AmBoDD,AFhDA,EnBAE,EuBiBA,CEAG,C5BrBE,AGIL,CqBgDK,EAAP,AE/BO,CAAC,EJjBI,CIiBD,CAAJ,CJjBQ,CMiBf,AFAc,CEAG,CFAD,EEAI,CAAC,AFAF,MvBjBjB,EAAc,GAAG,AuBiBW,CvBjBV,AuBiBW,CEAd,AzBjBE,CyBiBgB,AzBjBjC,CmBAa,CAAa,EIiB1B,CEAe,CAAjB,AFAuC,CAAC,GAAG,EAAzC,EJjBF,AIiB+C,EAAE,CAA/C,EAAkD;EECrD,AhBwBD,AP7CC,AmBoDA,AFhDA,CMcD,AvB5BA,CFcG,IHJI,E0BqBD,EdwBN,CAAA,CcxBU,IAAI,IdwBd,AcxBkB,CdwBlB,AcxBmB,GAAL,CAAS,cdwBvB,CcxBsC,CAAC,CdwBvC,UAAmB,AcxB+B,CAAC,CAAD,CAAZ,EAAiB,GdwBvD,EAA2B,CcxBW,CAAxB,CAAR;AFgCP,EI9BC,AvBrBA,AFGC,CAJD,CS6CE,EZ7CG,E0BqBA,CdwBE,ATzCA,gBSyCL,GAAwB,QAAxB;AYSJ,AXjCM,EDyBH,AU1CD,CVwCA,CZ3CG,AGID,IAAA,CmBDK,ATiBO,IAAV,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CSjBzB,ATiBI,EAAsB,MVhBxB;AmBAH,EtBHE,AY8CD,AC1BA,CbrCA,CGoBgB,IuBiBZ,CbAG,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAR,CAAZ;ASfF,ATgBC,IVlBiE,EuBkB7D,CvBlBD;AN2BE,AgBPN,EbtBA,AGGG,OHHH,AH6BgB,MG7BhB,IH6BM,CAAqB,GAArB,EAA0B,UAA1B,EAAoC;AG3L1C,AGkKC,CHlKD,CAAqB,AH4LnB,E6BTE,E7BSI,G6BTC,G7BSK,GAAG,GAAG,CAAC,EG5LrB,CAAA,GH4LE,K6BTO,CAAa,aAAlB;EEEF,AvBrBA,AR6BA,IAAM,A6BV6B,G7BU1B,GQ7BT,AR6BY,CQ7BZ,EuBqBA,CAAA,C/BQiB,CAAC,GAAG,CQ7BrB,AR6BsB,CQ7BtB,EuBqBA,CAAA,E/BQiB,CAAjB,W+BRA,AvBrBA,GuBqBA,AvBrBA,UuBqBe,AvBrBG,GAAlB,EuBqBA,AvBrBuB,EuBqBH,MvBrBpB,EAA+B;ER8B/B,E+BRE,AvBrBA,ER6BE,CAAJ,C6BVI,CEEG,AvBrBA,MLDM,AGIA,IuBgBE,CEEb,CAAiB,IAAjB,AvBrBA,CAAsB,UAAA,MAAA,CAAU,GAAV,CAAtB,EAAuC,QAAvC;AmBqDE,EI/BH,AvBrBA,CuBmBD,AvBrBA,KqBoBkB,CFkCJ,MAAV,CAAiB,WAAjB,EAA8B,WAA9B,EAAyC;EI7B7C,AhBuBA,AP5CA,AR2BA,A2BwBA,IAAI,C3BxBC,CAAC,A6BVA,G7BUG,CeiBT,AfjBA,A2BwBU,CZPV,CfjBY,CAAC,A2BwBA,CEnC+D,CAEtE,C7BSU,C2BwBhB,GZPA,CAAA,CfjBA,EAAwB,CAAC,EAAzB,EAA6B,A6BX+C,Cd4B5E,Cc5BI,Ed4BJ,UAAU,MAAV,EAAgB;AUzCZ,IV0CF,AfjBA,GAAG,CAAC,CeiBC,AfjBF,AyBzBS,CzByBZ,GAAS,GeiBT,GAAe,CU1Cb,GAAqB,EV0CvB;EYOF,AFhDA,EV0CE,EflBU,C2BwBP,CEjCD,Cd2BG,AU1CA,CAAC,CzBwBS,A2BwBR,CAAC,C3BxBS,A6BTV,C7BSE,A6BTD,CFiCG,EEjCA,Cd2BX,AU1CK,AIeE,EJfS,AIeF,Cd2BG,CAAC,Ac3BF,Ed2BI,Cc3BD,CFiCG,CAAC,CFhDlB,CV0CoB,CU1CC,CAAC,EEgDhB,GZNS,AYMY,AEjCF,CFiChC,AEjCiC,EFiCI,AFhD9B,CV0C+B,AYMA,CFhDC,CAAC,CIepC,CFiCsC,CAA1C,AEjCyC,Cd2BrB,Ac3BsB,Cd2BxC,AYM2C,EAAE,AEjCF,CFiC7C,AFhDO,CAAP,AIeI,CFiC8C,CEjCD,EAAE,CAA/C,EAAkD;AJdvD,ATiBK,EDyBH,CAHD,CYSE,E3BzBoB,E2ByBhB,CX/BQ,CaFR,C7BQqB,EAAE,GAAG,AgBN5B,AaFQ,C7BQqB,AgBNX,ChBMU,AgBN5B,CW+Ba,AEjCF,CFiCG,AX/BO,CW+BR,CAAX,IAAkB,EX/BpB,EAA6B,AaFP,CAAC,CAAD,CAApB,IFiC6B,CAAC,CAAD,CAAjC,EAAsC;AF9C1C,AKCM,EfyCJ,AC1BA,EhBKW,CAAT,C2B0BE,AX/BE,GcfQ,CDaR,EFiCI,AX/BE,EaFF,CFiCG,AX/BE,GaFD,CbEK,CW+Bf,AX/BgB,EaFF,CbEH,AaFI,CbEK,EAAT,AaFD,CCbV,ADamB,CbEK,AcfK,QdelB,CAAf,CcfI,EAAyC,EDaP,CAAC,MAAM,CCbzC,ADa0C,CAAD,CCbY,ADanB,EAAY,GCb9C,EAA4D,CDa1B,CAAxB,CAAR,MCbF,EAAqE;E9BqBxE,AgBLD,AcfA,IH8CI,GX/BG,GcfG,CdeC,CAAC,CcfC,GAAG,CdeT,AcfU,CdeC,CAAC,GAAG,KcfN,CdeT,AcfP,IdegC,MAAhC;AACD,ERrBC,AsBMA,EH8CG,EG9CC,IDYE,ErBlBN,CAAA,EqBkBW,CAAC,GAAG,CAAJ,CCZX,CtBNA,AqBkBkB,CrBlBlB,CqBkBoB,GAAG,MAAM,CAAC,MAAxB,EAAgC,CrBlBtC,AqBkBuC,GrBlBvC,AqBkB0C,EAApC,EAAwC,EAAE,CAA1C,EAA6C,CrBlB9B,GAArB,EAA0B,QAA1B,EAAkC;AQuBpC,EhBGE,A2B2BC,AG9CD,EtBNE,CRyBC,CAAC,A8BnBE,GtBNC,CRyBP,CAAS,C8BnBG,ADYJ,GCZO,CDYH,IAAI,C7BOG,CAAV,EAAa,A6BPF,C7BOX,A8BnBgB,ADYJ,CCZK,C9BmBH,CQzBrB,AqBkBc,CrBlBW,AqBkBF,UrBlBE,KqBkBa,CrBlBb,AqBkBc,CrBlBJ,EsBMtB,CtBNY,CAAzB,AsBMF,CDY+C,CrBlBH,AqBkBI,CAAD,CAAP,EAAY,IrBlBlD,EqBkBsC,CAAxB,CAAR;ErBjBP,CAFD,CR2BE,M6BPK,C7BOE,UAAU,CAAC,CAAC,CAAC,KAAH,EAAU,CAAC,CAAC,KAAZ,CAAV,IAAgC,CAAC,CAAC,KAAF,GAAU,CAAC,CAAC,KAAnD;EQvBF,ARwBC,A2B0BD,AG9CA,C9BkBA,G8BlBI,EDaC,CFiCE,GG9CP,EAAY,CH8CZ;AACD,EI9BC,EDhBE,WCgBF,CAAA,GDhBiB,GAAG,GCgBpB,CAAA,EDhB0B,CAAC,GCgB3B,GAAA,IDhB0B,EAAa,ICgBhC,CDhBmB,CAAxB,CCgBF,EAAU;AJgCZ,E3B5BE,E+BHE,G/BGG,CAAC,A6BPF,EEIF,CAAA,A/BGO,CAAT,EAAY,CAAC,GAAG,E+BHd,CAAM,A/BGW,CAAC,K+BHlB,CAAY,A/BGd,EAA4B,CAAC,C+BH3B,CAAY,A/BGd,EAAiC,E+BH/B,EAAa,GAAb;EhByBF,EfrBE,A8BpBA,EDaC,C7BOE,CAAC,A8BpBA,C9BoBD,CAAH,EeqBF,CAAA,AfrBW,GAAG,CAAC,A8BpBA,C9BoBD,CAAH,CAAO,C8BpBC,CfyCnB,CAAA,EfrBE,K8BpB0B,KAAK,EfyCjC,GAAA,KezC2C,CAAC,IfyC7B,IezCkB,EAA/B,EAAsD,GfyCxD,EAA0B;EfpBzB,E+BJC,AhByBA,EezCE,ECgBE,ChByBC,CezCG,CCgBR,EAAS,QhByBT,EezCqB,CfyCD,EezCI,SfyCxB,CezCkC,CAAC,gBAAX,EAAtB;A9BqBL,EeqBE,CAFD,Cc3BE,EEIE,GFJG,CEIG,QAAQ,GAAG,GAAG,CAAC,KFJlB,CAAa,KEIC,EAAjB,YFJF;A7BUJ,AyBtBM,EV2CJ,IgB1BI,ADjBA,ADYqC,GJZ3B,CKAN,CCiBC,YAAL,ANjBA,AKAA,CCiBkB,ANjBO,CKAN,GCiBnB,ANjBA,CMkBE,CNlB6B,GMkB7B,CNlBF,EAAqC,IAArC,EAA2C,IAA3C,CMkBE,CNlB+C,CMkBxC,QAAP,CNlBF,CMkBmB,CNlBwC,iBMkBxC,CAAU,WAA3B,EAAwC,KAAK,eAA7C,EAA8D,IAA9D,CADF;AfCA,ESjBJ,IAAI,EKAE,ADYF,CbKU,GaLJ,EbKN,CAAgB,CSjBpB,ATiBI,ESjBY,ATiBO,IaLH,CCZC,GdiBjB,AchBK,EdgBsB,achBP,GAAG,aAAnB,GAAoC,sBAAA,CAAgB,SAAhB,CADtC;EdkBN,ESjBE,EMkBE,ADjBC,EDWC,CbKC,CeCC,GfDG,CSjBC,ATiBA,CeCC,ANlBA,CAAD,CAAV,ETiBK,CSjBW,ATiBA,ISjBhB,GTiBuB,CAAC,CAAD,EAAI,CeCzB,EAA4B,KfDP,CAAlB,CAAP;AACD,ERrBC,EiBIE,AKCC,ICiBG,AFNE,IrBhBR,CuBsBW,AvBtBX,CiBIY,CAAC,CAAD,AIWwD,CJXlE,AIaM,GJbU,EjBJlB,CAAA,CiBIE,CMkBI,CAAkB,AvBtBxB,GAAA,CuBsBM,AFP8D,CEQ5D,CFTJ,GESI,IvBvBJ,GAAJ,EAAS,KuBuBD,AvBvBR,EuBuBe,AvBvBC,QuBuBR,EAAiB,AvBvBzB,EAA0B,gBuBuBD,CAAU,UAA3B,EAAuC,KAAK,cAA5C,EAA4D,IAA5D,CADF;AfCR,EcjBG,CATD,CtBIE,AiBIA,EMoBG,EvBxBG,CsBKD,KtBLO,AiBIF,CAAC,CAAD,CjBJK,AiBIf,GAAgB,EjBJI,EiBIpB,KjBJe,KAAiB,KAAK,OAAL,GAAe,EAAhC,CAAf;IiBKA,AKCA,IAAM,ADWJ,KCXS,ADWJ,CJZG,AIYF,CJZG,CAAD,AKCI,CLDd,AIYW,CAAJ,EJZS,AIYF,EAAE,EJZhB,CIYmB,CCXK,CAAC,QAAX,ADWe,CAAC,CCX9B,KDWE,EAAoC,CAAC,GAAG,EAAxC,EAA4C,EAAE,CAA9C,EAAiD;IrBhBnD,AiBKA,EMmBE,EvBxBE,EqBiBA,CEOG,ANnBA,GIYC,IrBjBR,AqBiBY,ErBjBI,CiBKhB,CMmBE,CAAiB,EFPA,CAAC,CEOlB,SFP4B,CAAC,CAAD,CAAX,EAAgB,WAAhB,CAAf;A7BSF,EyBpBH,CAND,CMyBG,ADnBD,EtBLE,EsBKG,ADYF,C7BQS,AyBpBP,GjBLG,CAAC,AsBKC,GtBLF,CAAN,AsBKY,C9BoBZ,CAAoB,CQzBN,ERyBd,EAAyB,CQzBzB,GRyBA,EAA6B,C8BpBjB,CAAM,OAAf,IAA0B,CAAC,SAA5B,IAA0C,SAAS,IAAI,cAAA,CAAM,OAAjE,EAA0E;ECoB3E,AhBsBD,AfrBA,C+BfA,CvBVG,AiBKD,CjBPA,CR2BE,A8BpBA,KtBLK,ARyBT,AyBpBS,CVyCT,AUzCU,CVyCV,GUzCS,EAAO,GKAG,CfyCnB,AUzCS,CVyCT,CUzCsB,AKAA,ILAb,EAAmB,IAAnB,AKAL,CLAF,SVyCF,GAAA,UAAsB,IAAtB,EAA0B;EgBpB1B,A/BAA,AyBpBC,EVyCC,AezCC,CAFD,CtBHE,ARyBE,E6BTF,Cd8BG,CP9CG,CRyBC,A8BpBF,G9BoBK,CAAC,GQzBG,ARyBA,CAAC,EQzBE,GRyBN,CAAU,EQzBE,CAAC,GAAD,CO8CzB,AP9CE,GO8C6B,AfrBE,EAAV,EeqBvB,AfrBqC,GAAd,EAAiB;AyBnB3C,EVyCE,CAFD,CfnBE,EQzBE,AsBKA,ADWD,G7BSI,GQzBG,ARyBA,CQzBC,ERyBT,CQzBQ,CAAN,GAAc,KAAd;AiBON,EVyCE,EftBE,E8BpBE,K9BoBK,CAAC,IAAI,CAAC,EAAD,EAAK,GAAL,EAAU,GAAV,CAAZ;EACD,CAHc,CAAf,A6BPE,ErBhBE,AsBMA,ItBNI,QAAQ,KAAK,KAAjB,EAAwB;AQuBxB,EhBIJ,I8BpBI,ADSO,ErBfL,CR0BC,AgBJO,CchBJ,GtBNC,CR0BC,AgBJR,CAAgB,CAAhB,ChBIW,CgBJQ,CRtBjB,CAAY,ER0BN,A8BpBQ,CtBNd,EAAiB,AR0BA,A8BpBA,C9BoBC,AgBJpB,ChBIJ,CgBJ+B,KRtBzB,mBsBM4C,CAC5C,UAD4C,EAE5C,GAAG,CAAC,WAAD,CAFyC,CAA9C;A9BqBL,EgBJC,IRtBK,EqBeD,CbOG,IAAI,CAAC,AaPF,IAAI,CbOP,CAAW,GaPR,CAAU,GbOK,CAAC,CAAD,EAAI,QAAJ,CAAlB,CAAP,eaPoD,IAA1C,CAAN;A7BaN,AgBLC,IRtBI,EsBQC,ADOD,ICPK,YAAU,KAAK,iBAAf,IAAoC,KAAK,KAAK,cAAA,CAAM,OAAxD,EAAiE;AH8CjE,AX9BN,ERvBG,AqB7BD,CrBkBA,KsBmBM,CH6CQ,MAAV,CAAiB,UAAjB,EAA6B,KAA7B,EAAkC;EnBnDtC,AmBoDA,IAAM,EG7CA,MH6CQ,GAAG,IAAI,CAAC,CG7CD,EH6CJ,CAAS,AG7CF,KH6CP,CAAjB,IG7CkC,GAAG,UAAU,CAAC,gBAAX,EAA/B;ALFF,EMmBJ,AhBsBA,AYOA,AEvCA,IFuCM,AG7CD,CAHD,ELAU,AISP,GdgCP,CAAA,AetCW,ADMX,CFuCc,CI7Bd,CAAA,CJ6BiB,IAAI,CZPrB,AYOsB,CZPtB,EgBtBA,AJ6BiB,CI7BjB,AJ6B0B,EFhDtB,CAA8B,EEgDjB,CAAjB,OFhDI,EAAwC,IMmB5C,AhBsBA,GgBtBA,AhBsBA,UgBtBoB,EhBsBpB,IgBtBA,EAA0B;AFT3B,EFuCC,AFhDA,EMmBE,AhBsBA,EYOI,CAAC,CG7CD,CCgBC,ANnBA,CEgDG,CZPD,CgBtBP,ADhBQ,CCgBC,GhBsBG,IYOM,AG7CF,CH6CG,CAAD,CAAV,AFhDW,AKGA,CLHC,AKId,EH4CkB,GG5Cb,CCeX,ADfY,CAAD,CCeiB,ANnBT,AKIb,EH4CE,AFhDsB,CKIb,EH4CkB,CI7BnC,ChBsBA,GUzCmB,EAAqB,CAAC,AKId,EH4CkB,CAAC,AG5ChB,CH4Ce,AG7C1B,CH6CgB,CG3C7B,EH2C6C,AFhDhC,EAAgC,CAAC,AKKzC,CAAC,CAAD,CAFQ,EH6CrB,AG1CQ,GLNa,EAA2C,AKMnD,CAAC,CAAD,CAAL,GAAW,ILNE,CAArB,KKM6B,GAAG,CAHX,EAIb,KAAK,CAAC,CAAD,CAJQ,EAKb,KAAK,CAAC,CAAD,CALQ,EAMb,KAAK,CAAC,CAAD,CAAL,GAAW,UAAU,GAAG,CANX,EAOb,KAAK,CAAC,CAAD,CAPQ,EAQb,KAAK,CAAC,CAAD,CAAL,GAAW,UAAU,GAAG,CARX,CAAf;ALFP,AIUD,EESG,AhBsBA,AYOD,CI/BA,AhBsBA,GYSM,CAAC,CGpCD,EHoCI,MGpCI,GAAG,CHoCG,CAAC,CAAD,CAAV,GAAgB,KGpCC,CAAC,EHoClB,GAA2B,GGpCV,EAAW,KHoCS,CAAC,CAAD,CAAV,AGpCV,EAAqB,CHoCK,AGpC1B,CAArB,OHoCN;AF9CF,EMmBE,AJ4BA,MGpCM,IHoCI,AGpCE,CHoCD,CAAD,CAAV,EGpCiB,CHoCD,CAAhB,CGpCoB,IAAA,mBAAA,EAAY,QAAQ,CAAC,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAZ,EAAkC,QAAQ,CAAC,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAlC,CAAd;Ef6BR,AYQE,MGpCM,Cf4BR,GYQY,AGpCE,CHoCD,CAAD,CAAV,GAAgB,AGpCE,Cf4BpB,AYQE,EGpCqB,IAAA,mBAAA,EAAY,QAAQ,CAAC,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAZ,EAAkC,QAAQ,CAAC,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAlC,CAAf;Af7LR,AfsMM,CetMN,CYkOE,CZlOF,Ke8LQ,C9BQQ,A2B4BP,Q3B5BH,CAAmB,C2B4BvB,E3B5BI,EAAwB,A8BRP,GAAG,CAAC,I9BQrB,C8BR0B,C9BQQ,E8BRL,MAAT,E9BQpB,EAA4C,A8BRL,CAArC;AHqCP,E3B5BC,IAAM,A8BRD,O9BQQ,GAAG,QAAQ,IAAI,yBAA5B;A2B8BF,AXjCM,EhBIJ,OAAO,AgBJO,GhBIJ,CAAC,AgBJP,CAAe,CDuBN,ACvBT,EAAkB,ChBIf,CAAU,MgBJb,EAA0B,EhBIH,UAAV,EAAsB,KAAtB,EAA2B;EQzB5C,AQsBA,EhBIE,E8BTE,E9BSE,CgBJC,CcLG,EtBjBV,CAAA,AR0BW,AgBJA,CAAC,IhBII,AgBJT,ChBIL,AgBJe,EhBIE,CQ1BnB,CAAA,AsBiBuB,GdKC,AcLE,CdKD,CAAD,EAAI,KcLO,CtBjBnC,EQsBwB,AcJhB,CtBlBR,AQsBO,CAAP,SRtBc,MAAd,EAAsB,GsBkBd,CAAgB,MtBlBxB,EAAgC,CsBkBxB,CAD2B,GAE3B,UAAU,CAAC,gBAAX,EAFJ;AdML,IRtBG,ER0BE,GQ1BG,IAAM,AR0BF,GQ1BT,CR0BE,GQ1BgB,MAAlB,EAA0B;AiBMxB,IzBqBD,EQ1BC,AsBkBA,GLbU,CKaN,CtBlBC,GAAL,CAAS,GAAT,EAAc,GsBkBG,GtBlBG,CAAC,CsBkBC,EtBlBF,CAApB,EAA2B,IiBK3B,AKaA,CLbuC,CKaN,ItBlBjC,KiBKA,EAAmD,UAAnD,EAA6D;EACjE,EjBLG,EiBKG,CAAC,CKaD,ELbI,UAAU,CAAC,CAAD,CAApB,AKaqB,IAAI,aAAnB;ECON,AvBxBC,AiBKD,CjBTA,CR6BE,EyBpBI,AKaD,CLbE,CzBoBC,EyBpBE,CzBoBC,GAAG,C+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AA,eAAA,EAAiB,MAAjB,EAAyB,WAAzB,EAAsC,cAAtC;MCSD,ADRA;IACF,CAJD;EtBdF,AsBmBC,CAND,GCaI,IAAM,EvB1BV,CuB0Ba,AvB1Bb,GuB0BgB,KAAK,CvB1BrB,CAAA,IuB0BgB,CvB1BhB,CuB0BI,EvB1BJ,UAAM,GAAN,EAAW,UAAX,EAAqB;AiBOjB,AKaL,ItBnBG,EuB0BE,EvB1BE,CiBMQ,CMoBJ,GvB1BC,OuB0BS,AvB1Bd,GuB0BiB,CvB1BD,EuB0BI,CAAC,AvB1BF,IAAI,KAAK,MiBM9B,CjBNF,AiBOF,EjBP2C,YuB0BpB,CAAmC,ANpBtD,EAEJ,GMkBuB,CAAnB,ENpBA,EAGJ,GAHI,EAIJ,MAJI,EAKJ,UALI,EAKM;AKUZ,ELRE,IjBZI,AiBYE,IjBZI,EiBYE,GAAG,GjBZG,GAAG,KAAK,OAAL,CAAa,AiBYA,CAAC,EjBZd,CAAjB,OiBY8B,CAAlC;AE4CI,EF3CJ,IMaI,AvBzBA,GmBuDU,AF3CP,CMaC,GvBzBG,KAAK,EuByBZ,EAAgB,EJ8BhB,CnBvDO,AmBuDmB,CnBvDN,GAAb,CAAP,AiBYwB,CE2CxB,AF3CyB,EE2CS,IF3CV,EE2CxB,AF3CiC,EE2CO,aF3ChB,EAA0B,MAA1B,EAAkC,GAAlC,EAAuC,MAAvC,CAA5B;AACD,EE2CC,IAAM,EI9BA,AJ8BE,GAAG,CI9BC,KJ8BK,CAAC,CAAD,CAAN,GAAY,GI9BG,GAAG,AJ8BA,CAAC,CAAD,CAA7B,CI9B6B,uBAAA,GAAvB;ANXR,EE0CE,InBxDI,AmBwDE,EAAE,EnBxDA,CmBwDG,GnBxDH,GmBwDS,CAAC,CAAD,CAAN,GAAY,GnBxDf,EAAQ,CmBwDa,CAAC,CAAD,CAA7B,CnBxDqB,OAAb,CAAJ,EAA2B;EmByD/B,MI/BM,AvBzBA,CmBwDC,EAAE,CI/BC,CvBzBC,CmBwDC,EAAL,GAAU,CnBxDX,CmBwDa,EnBxDE,CmBwDC,EI/BhB,AJ+BN,CnBxDM,CuByBoB;AJgC3B,MnBxDM,IuByBG,KAAK,UAAL,GAAkB,IAAA,iCAAA,EAChB,KAAK,cADW,EAEhB,cAFgB,CAAlB;AJiCV,QI7BS;MvB5BH,IAAI,C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","file":"Coordinates.5e8c21ea.js","sourceRoot":"..","sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ (\n    (function () {\n      throw new Error('Unimplemented abstract method.');\n    })()\n  );\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/render/Event~RenderEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/render/Event~RenderEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  !!(\n    ua.indexOf('version/15.4') >= 0 ||\n    ua.match(/cpu (os|iphone os) 15_4 like mac os x/)\n  );\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (opt_canvasPool && opt_canvasPool.length) {\n    canvas = opt_canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', opt_Context2DSettings)\n  );\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Radians\n   * @api\n   */\n  RADIANS: 'radians',\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': Units.METERS,\n  '9002': Units.FEET,\n  '9003': Units.USFEET,\n  '9101': Units.RADIANS,\n  '9102': Units.DEGREES,\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.RADIANS] = 6370997 / (2 * Math.PI);\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [opt_precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  const numberString =\n    opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [opt_disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(opt_disable) {\n  const hide = opt_disable === undefined ? true : opt_disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  This includes all API\n * methods except for those interacting with tile grids.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/control/MousePosition\n */\n\nimport Control from './Control.js';\nimport EventType from '../pointer/EventType.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  getUserProjection,\n  identityTransform,\n} from '../proj.js';\nimport {listen} from '../events.js';\n\n/**\n * @type {string}\n */\nconst PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nconst COORDINATE_FORMAT = 'coordinateFormat';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', Return>} MousePositionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string|boolean} [placeholder] Markup to show when the mouse position is not\n * available (e.g. when the pointer leaves the map viewport).  By default, a non-breaking space\n * is rendered when the mouse leaves the viewport.  To render something else, provide a string\n * to be used as the text content (e.g. 'no position' or '' for an empty string).  Set the placeholder\n * to `false` to retain the last position when the mouse leaves the viewport.  In a future release, this\n * will be the default behavior.\n * @property {string} [undefinedHTML='&#160;'] This option is deprecated.  Use the `placeholder` option instead.\n */\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nclass MousePosition extends Control {\n  /**\n   * @param {Options} [opt_options] Mouse position options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const element = document.createElement('div');\n    element.className =\n      options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MousePositionOnSignature<void>}\n     */\n    this.un;\n\n    this.addChangeListener(PROJECTION, this.handleProjectionChanged_);\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * Change this to `false` when removing the deprecated `undefinedHTML` option.\n     * @type {boolean}\n     */\n    let renderOnMouseOut = true;\n\n    /**\n     * @type {string}\n     */\n    let placeholder = '&#160;';\n\n    if ('undefinedHTML' in options) {\n      // deprecated behavior\n      if (options.undefinedHTML !== undefined) {\n        placeholder = options.undefinedHTML;\n      }\n      renderOnMouseOut = !!placeholder;\n    } else if ('placeholder' in options) {\n      if (options.placeholder === false) {\n        renderOnMouseOut = false;\n      } else {\n        placeholder = String(options.placeholder);\n      }\n    }\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.placeholder_ = placeholder;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = renderOnMouseOut;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {?import(\"../proj/Projection.js\").default}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    this.transform_ = null;\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    this.transform_ = null;\n  }\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  getCoordinateFormat() {\n    return /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (\n      this.get(COORDINATE_FORMAT)\n    );\n  }\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"../proj/Projection.js\").default|undefined} */ (\n      this.get(PROJECTION)\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event Browser event.\n   * @protected\n   */\n  handleMouseMove(event) {\n    const map = this.getMap();\n    this.updateHTML_(map.getEventPixel(event));\n  }\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  handleMouseOut(event) {\n    this.updateHTML_(null);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      const viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.POINTERMOVE, this.handleMouseMove, this)\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.POINTEROUT, this.handleMouseOut, this)\n        );\n      }\n      this.updateHTML_(null);\n    }\n  }\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  setCoordinateFormat(format) {\n    this.set(COORDINATE_FORMAT, format);\n  }\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  updateHTML_(pixel) {\n    let html = this.placeholder_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        const projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            projection\n          );\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      const map = this.getMap();\n      const coordinate = map.getCoordinateFromPixelInternal(pixel);\n      if (coordinate) {\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            userProjection\n          );\n        }\n        this.transform_(coordinate, coordinate);\n        const coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  }\n\n  /**\n   * Update the projection. Rendering of the coordinates is done in\n   * `handleMouseMove` and `handleMouseUp`.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.mapProjection_ = null;\n    } else {\n      if (this.mapProjection_ != frameState.viewState.projection) {\n        this.mapProjection_ = frameState.viewState.projection;\n        this.transform_ = null;\n      }\n    }\n  }\n}\n\nexport default MousePosition;\n","import MousePosition from 'ol/control/MousePosition';\r\nimport {createStringXY} from 'ol/coordinate';\r\n\r\nconst map = $(\"#map\").data(\"map\");\r\nconst mousePosition = new MousePosition({\r\n    coordinateFormat:createStringXY(5),\r\n    className: \"badge-pill badge-warning\",\r\n    target: \"coordinates\"\r\n});\r\n\r\nmap.addControl(mousePosition);"]}