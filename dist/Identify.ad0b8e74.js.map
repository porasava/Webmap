{"version":3,"sources":["../src/events/Event.js","src/ObjectEventType.js","src/Disposable.js","src/array.js","src/functions.js","src/obj.js","../src/events/Target.js","../src/events/EventType.js","src/events.js","src/Observable.js","src/util.js","src/Object.js","src/MapEventType.js","src/OverlayPositioning.js","src/css.js","../src/extent/Corner.js","../src/extent/Relationship.js","src/AssertionError.js","src/asserts.js","src/extent.js","src/has.js","src/dom.js","src/Overlay.js","../src/layer/Property.js","src/math.js","../src/layer/Base.js","../src/render/EventType.js","../src/source/State.js","../src/layer/Layer.js","../src/layer/TileProperty.js","../src/layer/BaseTile.js","src/ImageState.js","../src/renderer/Layer.js","../src/render/Event.js","src/transform.js","src/color.js","../../src/renderer/canvas/Layer.js","src/TileState.js","src/easing.js","src/Tile.js","src/ImageBase.js","src/Image.js","src/ImageTile.js","../src/reproj/common.js","../src/proj/Units.js","../src/proj/Projection.js","../src/proj/epsg3857.js","../src/proj/epsg4326.js","../src/proj/projections.js","../src/proj/transforms.js","src/string.js","src/coordinate.js","../src/geom/GeometryType.js","src/sphere.js","src/proj.js","../src/reproj/Triangulation.js","../../src/renderer/canvas/common.js","src/reproj.js","../src/reproj/Tile.js","src/TileRange.js","src/size.js","../../src/renderer/canvas/TileLayer.js","../src/layer/Tile.js","src/ViewHint.js","src/ViewProperty.js","../src/tilegrid/common.js","src/centerconstraint.js","src/resolutionconstraint.js","src/rotationconstraint.js","../src/geom/GeometryLayout.js","../../src/geom/flat/transform.js","../src/geom/Geometry.js","../src/geom/SimpleGeometry.js","../../src/geom/flat/closest.js","../../src/geom/flat/deflate.js","../../src/geom/flat/simplify.js","../../src/geom/flat/inflate.js","../../src/geom/flat/area.js","../src/geom/LinearRing.js","../src/geom/Point.js","../../src/geom/flat/contains.js","../../src/geom/flat/interiorpoint.js","../../src/geom/flat/segments.js","../../src/geom/flat/intersectsextent.js","../../src/geom/flat/reverse.js","../../src/geom/flat/orient.js","../src/geom/Polygon.js","src/View.js","../src/structs/LRUCache.js","src/tilecoord.js","src/TileCache.js","../src/source/TileEventType.js","../src/source/Source.js","../src/tilegrid/TileGrid.js","src/tilegrid.js","../src/source/Tile.js","src/tileurlfunction.js","../src/source/UrlTile.js","../src/source/TileImage.js","../src/source/XYZ.js","Scripts/customFunctions.js","Scripts/Identify.js","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/css-loader.js"],"names":["map","$","data","mapLayers","getLayers","getLayerByName","layerName","layer","forEach","lyr","get","container","document","getElementById","content","closer","overlay","Overlay","element","autoPan","autoPanAnimation","duration","onclick","setPosition","undefined","blur","key","attributions","addOverlay","on","evt","coordinate","hdms","toStringHDMS","toLonLat","CrimeTALayer","CrimeTASource","getSource","view","getView","resolution","getResolution","projection","getProjection","CrimeTAInfo","html","CrimeAreaInfo","noFeatures","CrimeTAUrl","getFeatureInfoUrl","ajax","url","method","success","result","console","log","CrimeTA","features","CrimeTAName","properties","ta2022_v1_","CrimeTAName2","ta2022_v_1","CrimeTAArea","land_area_","toFixed","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","replace","exports","bundle","require","updateLink","link","newLink","cloneNode","onload","remove","href","split","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","setTimeout","links","querySelectorAll","i","length","module"],"mappings":"AsGAA,ACAA,IDAImE,ACAAW,MAAM,GDAG,ACAAC,GDAG,IAAhB,ACAoB,CAAC,cAAD,CAApB;;AFAA,ACCA,ACCA,SDDSX,ACCAY,UAAT,CAAoBC,IAApB,EAA0B,CDD1B,GAA8B;EAC5B,ACCA,IDDI,ACCAC,CDDCf,MCCM,GDDX,ACCcc,EDDE,ECCE,CAACE,SAAL,EAAd;AFFF,ICEIhB,SAAS,GAAGE,YAAY,EAAxB;EACD,ACADa,OAAO,CAACE,MAAR,GAAiB,YAAY;AFF/B,ADFA,IAAMpF,AGKFiF,GHLK,CGKD,CAACI,CHLCpF,CAAC,CAAC,GGKR,GHLO,CAAD,CAAUC,IAAV,CAAe,KAAf,CAAV;AhBAA,AFAA,A9CGA,AyBAA,ALHA,AjDAA,ADGA,ASHA,ACAA,AuDGA,AFHA,AjBAA,A0BGA,ACAA,AtDAA,AKAA,APHA,AuCGA,AjCHA,AkBGA,AdCA,APJA,AMGA,A0BAA,AHAA,AZHA,AiDGA,AjEHA,AoEGA,AJHA,AOGA,ADAA,AECA,AXAA,AKDA,A5BHA,AmCCA,AnFEA,AfHA,AsCGA,ATHA,AWGA,A9BHA,ADGA,AVHA,AqBGA,ATHA,A0BGA,AmDAA,ArDHA,A0BAA,ACAA,A9CGA,AEHA,EkFME,ACAC,CAFD,CHHIC,KEKGgE,IFLM,GAACnE,EEKd,CFLiB,CAACI,SAAJ,EAAhB;AnBEA,ArDAA,AiBAA,ADHA,AyDGA,ACIC,A7DJD,AhCAA,AkDHA,AOGA,AhBHA;A2BAA,ADAA,AxCIA,AyBAA,A7DJA,AMIA,AiEAA,AOAA,ACAA,APDA,A/CCA,AKAA,AgCAA,AhBDA,ACCA,ACJA,AhBIA,A0BCA,AHUA,AqCXA,AGAA,AGAA,ADAA,AECA,AXLA,AKMA,AOHO,A5DCP,AEAA,A/BAA,AWAA,AiBAA,AmDAA,A5EJA,ANGA,AiDAA,AUAA,AzDHA,E6FOE8E,OHJc7E,AGIP,CAACiF,IAAR,GAAeL,IAAI,CAACK,CHJf,CAAwBhF,EGId,CAAUiF,KAAV,CHJV,AGI0B,EHJQ,CGIxB,EAAqB,CAArB,IAA0B,GAA1B,GAAgCC,IAAI,CAACC,GAAL,EAA/C;AvBJF,ANHA,AOIA,AXJA,A1CIA,AiBJA,AIGA,AoDCA,ACKA,A7DLA,AhCAA,AyDJA,A9CIA,AfJA,A+DGA,ARHA,EwCIA,AGIER,EnFJI,EgFAF1E,AGIE,AnFJE,CmFIDmF,EDCErB,AlFJP,EgFDO,GAAG,EhFCH,CmFGP,CHJF,AGIkBsB,GDClB,GAAwB,ClFJtB,KmFGA,AnFHqB,CmFGQT,OAA7B,EAAsCD,CnFHtC,GmFG0C,CAACW,AnFHP,OAAO,ImFG3C,KnFHoD,CAAC,SAAjB,KAA+B,WAAnE,GACI,SAAS,CAAC,SAAV,CAAoB,WAApB,EADJ,GAEI,EAHN;A+DDA,ACCA,AFAA,A9CCA,AyBAA,ALDA,AjDAA,ADCA,ASDA,ACAA,AuDCA,AFDA,AjBAA,A0BCA,ACAA,AOFA,AdCA,A/CCA,AKAA,APDA,AMAA,AiBAA,AbJA,APIA,AMCA,A0BCA,AHUA,AZZA,AiDCA,AjEDA,AoECA,AJDA,AOCA,ADAA,AJEA,A5BHA,AsCKC,ArGLD,AsCCA,ATDA,AWCA,A9BDA,ADCA,AVDA,AqBCA,ATDA,A0BCA,AFDA,AkDDA,AxBCA,ACAA,A9CJA,AoBAA,A9BAA,AJIA,AgBKA,AqCLA,AUAA,AdDA,A2CAA,EIGAzF,AEIE,SFJO,CAACK,OAAV,CAAkB,UAAAC,GAAG,EAAI;A3BHzB,AOHA,ACAA,AIGA,AzDEA,AgBDA,AKJA,AoDKA,A5DAA,AhCAA,AkDDA,AxBDA,AiCHA,AlBIA,A4CDA,EQQE,EFJE,EEIE,EFJCA,GAAG,CAACC,GAAJ,CAAQ,MAAR,MAAkBJ,SAArB,EACAC,KAAK,GAACE,GAAN;AvBJJ,ADAA,AOMA,A/CJA,AyBAA,A7DFA,AMEA,AiEAA,AOAA,ACAA,AOFA,AdCA,A/CCA,AqBDA,AEDA,AhBEA,A0BCA,AHPA,AqCMA,AGAA,AGAA,ADAA,AENA,AXMA,AKEA,AUGA,A7DLA,A/BAA,AWAA,AiBAA,AgDFA,AzEAA,AOJA,AjBAA,AqDKA,AUAA,AdDA,AoCJA,AOIA,AtFAA,E0FKC,CAHD,CEMI,ACDAoF,MDCM,IAAIvB,ACDA,GAAG,EDCP,EAAN,ACDJ;A9BXA,ACIA,AWJA,AfIA,A1CEA,AiBDA,AwDCA,A5DAA,AyBDA,A/BDA,A9BAA,AuDAA,AkCAA,EMMA,AEGG,CAFD,CAEE,KFHG/D,EEGIgE,GFHX,AEGI,C/ENW,AMAA,AHAA,AiEAA,A5DAA,AnBAA,AXAA,AoCAA,A0BAA,ACAA,CsCMC;AnBFhB,ARkBA,AvClBA,AyBJA,ALCO,AeEP,AOHA,ACAA,AOFA,AdCA,A/CCA,AOAA,A0BCA,AqCDA,AGAA,ADAA,AJEA,A5BDO,AmCGN,AGCD,ArGJA,ASDA,AWAA,AiBAA,AgDFA,ArEAA,AGHA,AiBEA,A9BCA,AiDUA,AUfA,A6BKA,EzEGE,AMAA,AHAA,AiEAA,A5DAA,AnBAA,AXAA,AoCAA,A0BAA,ACAA,ERAW,ASAA,AqCMT,ApGNJ,E6BAM,AMAA,EiEMEC,AvENA,AMAA,A2BAA,CzCAC,AMAA,A0EIAsB,AxELM,AMAA,C2BCL,CzCAC,AMAA,AkCAA,EAAE,C7DAb,A6DDe,CxDCA,AQAA,ACAA,AWAA,A2EMA,GAAG,ACFlB,AvCLe,CsCOI,C/EPJ,AMAA,AoCCc,CsCIR,EtCJW,CqCMRvB,CrCNjB,EqCMoB,C9CNU,A8CMTE,G9CNY,E8CMtB,EAAiBC,KAAjB,CAAuB,+DAAvB,CAAd;AtBTJ,ACCA,ArDCA,AoBAA,ACFA,ANIO,AsBCP,AoCHA,AnGCA,AuCDA,AkBCA,AxBRA,AfaO,AgDRP,A0BAA,ApFEM,E8CEJ,AjDAA,AQAA,ACAA,AOAA,AMAA,AFAA,A4EIA,AxEJA,AMAA,A0BAA,ACAA,EhBFE,ALES,AgBDb,AvCKa,EmFAPmB,GvFJG,AOAA,AyBFA,AjBEA,AMAA,A3BFO,EMEL,AOAA,AIAA,AIAA,AMAA,AjBIS,CJLL,AgCDH,AjBAG,AMAA,A2BEH,CjDAC,AYAA,AgCDb,AICa,CfFb,AgBEc,A5CIS,CLJR,AgDAA,CwCIb,AnFAuB,CAAC,AVNpB,C6FMY,C5DJU,CpBFb,AbAS,EiCEO,CaAR,C7BDR,APKQ,CoCJE,AbAlB,AvBI2B,C4CNnB,EjDCA,AcCa,E2BDY,A3BCV,ITIP,MAA0B,CAAC,CAA3C;A+DbP,ACUM,ATVN,AvCYA,AyBJA,AUQA,AORA,AQFA,AdCA,A/CCA,AIDe,AeEf,AIAA,AUAA,AHSA,AZPA,AoDHA,AGAA,ADAA,AJEA,A3FFA,AoBAA,AqCAA,A4BFA,AxBCe,A3DDf,AgBSA,AqCCA,AJhBA,AoCIA,AOJA,ExCUE,AzCAA,ACAA,AOAA,AIAA,AIAA,AMAA,A2BAA,AtDFA,EkCCI,A0DMF,ACDA,IhFJI,A+EKArB,AvELA,AMAA,C+CAQ,AxCDL,AjBCF,CJAC,AQAA,AMAA,A2BAA,CrCAC,AIHI,AMAA,COED,A1CDd,A8DEY,EjDAE,ACAA,CqDAC,AjBAA,AkDKX,AzFLW,CEAC,ACAA,CAFD,AsFOE,C/ERF,E6DGT,AzDFS,CyDEa,I5BAH,EAAE,GzCFZ,MqEET,EAAuC,MAAvC,EAA+C,GAA/C,EAAoD,MAApD,EAA0D;AXLhE,AYAA,A7BGwC,A5BAxC,AaAA,AkBAA,AKDe,A7DPf,A+DSA,A7CHA,A6BIM,A4CJN,CtCEO,C4BGL,ArEAA,ACAA,AqDAA,AjBAA,A7BAA,AqBDA,AjBCA,A4EIC,ArGND,A6BEA,AlBAA,EwDAE,A3DHK,E2DGH,AiCKA,CtFLC,AoCAA,AzBAA,AIAA,EqDAE,ApEAA,AoCAA,A7BAA,AIAA,AIAA,AmBDO,CnCCN,ACHK,AqDEA,AtCHA,CRIJ,ArBFT,CaEU,A4CHZ,C2CQaG,AzFLA,EuEAE,AvEAA,CuCDA,AzBFA,EyDGG,AlCDZ,C3BHS,A2BGW,EkCCL,AlFFnB,CaDa,CuFQQ,ClBLC,AkBKAH,ApGPtB,CgDCI,EAA4B,CrCAnB,EuECb,CkBK6B,ClBLC,AkBKA,ApDN1B,CoDMyB,CAAR,ApDNkB,CoDMnC,YpDNA,EAAgD;AdStD,AyBVA,ALIA,AeIA,AORA,AQFA,A5BMA,AqCJA,AGAA,ALEA,AvEFA,AiEFA,ArEEM,AuCQN,AUVA,EpDKE,ACAA,AqDAA,AjBAA,A7BAA,AIAA,AIAA,AlBAA,A8CHA,AtBEA,AaAA,EkCCE,AkBKC,ApGPD,AQDC,C2DGA,CnBDG,ClCCD,AqDAA,A1CAA,AIAA,EqDAE,ApEAA,AWAA,AIAA,AbHO,CFDD,CDIJ,CsDFI,CeEF,ArEAA,AqCAA,CgCAC,ChCAC,AvCAA,AKHT,CKGU,ALHO,ARAlB,C0EGY,AvEAA,CuEAb,A7DAc,A2BDE,EkCCA,CAAC,AlCAjB,GkCAoB,ClEHlB,EkCCS,AlCDmB,GkEG9B,EAA4B,AvEFjB,CUHA,C6DKmB,AlCAjB,CkCAb,ClEHE,CkEG+B,ClEHM,CgCGrB,SAAlB,GAA8B,MAAM,CAAC,OAAP,CAAe,aAAf,CAA9B,GAA8D,KAAK,MADrE;A2BAI,AFRN,A5DKe,AaCf,AqBAA,AtBDe,A0ECf,AtEFe,AIDf,AdCA,AGPA,A4CSA,ARCA,AkCHA,E9EME,AqDAA,AjBAA,A7BAA,AGAA,AiEAA,AWKC,ACDDqB,A3FJA,AXAA,AYAA,AKHA,AgCGA,EDJE,AoDAE7F,ChCID,CeAC,AlEHA,AgCGA,AxCHA,CMGC,AqDAA,AgCJE,AnFCF,E2DCS,A7DEP,CoEAG,ApELG,AqFCHC,C3EID,A2EJE,ChCCE,AgCDD,AEQF,A3FJA,AFHA,C0EGG,AhCAF,A1BAA,AwBAA,CDJC,ArCIA,ACAA,CuCAC,AuCAA,AYIA8F,CnBJG,A7DAF,AtBAA,AYAA,AKHd,AgCGc,AxCHA,CuCDC,A0CIA,CpEAC,A8EJL,ApGIK,AiBHA,C2DCZ,A5BFN,AoDAY,CxBEe,AwBFL7F,C3FCV,CAAU,EgBHP,A2EEH,CAAe,AEQF,CAAC,A3FVX,CwCGA,CFGa,CAAC,CmDJjB,AxFCG,CuEGkB,AiBJjC,CjBIkC,AONnB,CpEAA,EsDIT,C3BEU,C2BF4B,A3BEP,CkCAG,AmBIF,ErDJtB,CkCA2B,AlCAzC,CkCA+B,CPF3B,AOEA,EPF8C,GAA9C,EAAmD,InED7C,CAAN,CmECA,EAAyD;AHAzD,AECA,AOCN,ARTA,AvCgBA,AyBLA,AUGA,AORA,AQFA,AtCIM,ACDN,ASGA,AqCJA,AGAA,AVIA,AKFA,AQFA,ApGHe,AsFCf,AjDEM,AlCAA,AqDVN,AJMA,A2CCA,EnBKE,AtEEA,ASAA,AqDAA,AjBAA,A7BAA,AVAA,AqCAA,EqDIE,ArFPA,ARAC,CAFD,CmEGE,AOEA,ApEAA,AqDAA,E9DAE,ASAA,AqDAA,AkCIA8F,C7BPQ,AECA,AxBEP,AJFO,AVFA,AlCAA,A8CIP,C3CAC,AgBAA,ALHA,CkCGC,C7BAC,A2BAA,CqDIC,A1FJA,ATJP,C4CEA,A9BDQ,C2DCC,AhEEA,AyBJT,CiEQUpF,AjERO,AlCAH,C4CEC,AVFf,CuCEY,AtEJH,CsEIb,AvCFsB,AYIL,CEJJ,CgCIM,A7DPN,C6DOO,EmBIE,ArDJA,CqDICqF,ArDJA,CwBHnB,AxBGM,CwBHsB,AEC5B,CACJ,AQC0B,AvEJb,CqCIc,EkCAE,CAAV,CAAf,GAA8B,ClEH1B,CAAmB,GqFOb,ArDJyB,CwBHnC,A6BOoC,ArDJA,C0BFpC,CFD6C,CEGjD,E1DHQ,CAAN,AgCGQ,EwBHN,CECA,AQE6C,AlCAA,CwBHQ,AUGP,CRClD,EQDqD,CRFjD,EAIJ,AQFwD,AlCAxD,IwBHI,EAAiE,AECjE,AQE8C,ERGlD,A2BCc,CnBJmD,AmBI/D,CnBJ+C,CAA7C,CVHA,EAAuE,SECvE,EAKW;ADZjB,A3DGe,AqDEA,AzCAf,AqCIO,AoCHP,ApGKA,AEZA,AgDDA,A2CKA,A5DLA,E2CUE,AHDA,AEOA,AxBJA,A7BAA,AqBDA,AIDA,AtBEA,AiEAA,AWKA,A1FLA,ACAA,AKHC,AoBDD,AlCAA,A8CIA,AxCPA,EuDMW,EYDP,ADME,AQJF,CVHC,A1BCA,C6BAC,CjCCC,A0DMA,AhETA,AlCAA,A8CIA,C3BAC,AyBFA,C6BAC,AHDA,A9BEA,C8BFC,AnDGA,AyBFV,AsDOA,ClDLW,AdJA,AlCAX,CkCAY,CoCCC,AtBGA,AvCAA,C6DHR,AxBGS,C0BIG,A/DJF,AyBJR,CoCCS,ApCDA,CAAT,AYIU,CwBHC,AEOE,AhCVR,CwCMO,A7DRN,A0COe,A3BHT,C8CIC,A9CJb,CoCCc,ApCDrB,C2BG+B,AfCxB,CkCAgB,CPFC,CAAC,AzBHZ,AaIR,AfED,CkCDsB,EPFE,EhEHf,CgEGkB,AHDA,CAAC,AUGZ,CRIe,EQJA,CAAhB,CPFK,AOEpB,AlCAG,C2BFP,AHDA,AEOwC,EFPA,AUGA,AlCEpC,CwBLqC,EUGrC,CVHwC,AxBKpC,EwBLR,CEOoB,CFP4B,CxBK5C,CwBL8C,AEOE,A1BFtC,CwBLd,EAAqD,CxBKnC,KAAJ,GAAY,G0BEN,GAAkD,C1BFlE,C0BEJ,C1BFmC,IAA/B,CAAoC,GAApC,IAA2C,YAF/C;AyBTF,ALOM,ATGN,A7DFA,A8EHA,AQFA,AtCKC,AUCD,AqCJA,AGAA,AGCA,ACSC,AfZD,ArEIC,AoBDA,AlCAA,AgBOM,AfNA,A8DFP,AjBOC,AxCLA,EmECC,ADMA,ArEJA,A6CAA,A7BAA,AVAA,AwBDA,EqCFE,AUGC,ApFFL,AuGKI,AnFAS,AfNA,EwECP,ADMA,CAAC,AvCLA,CwCDC,AtDEA,C+CHQ,AiCMP,AlEJA,CuCKC,ArDJA,AcTK,AjBYI,AfNA,CwECR,ADMT,E5ENF,AuGKaC,AnFAS,AfLpB,CkGKY,A1FHA,COGU,CPHR,AOGS,CmFAR,ChFZF,AgFYX,C7BNe,AtBGA,CsBHC,AJAd,AiCMcA,AlGLX,CiEAP,AlBEmB,AmDGA,EnFAC,CmFAEF,AnFAS,EyDLP,AHDA,ArECX,CwEAY,AxEAX,CqEDG,CAAf,A6BMyB,C1BLC,A0BKAG,A1FTf,E6DGiB,AtDMV,CyDLW,AxEA/B,GiEDI,AiCMF,EjCJF,AlBLa,AmDSuBD,AnFAS,AfLpB,CwEAA,A0BKY,AnFAS,CAA1B,CmFAlB,C1BLsC,AHDA,CGChB,AHDiB,A6BMA,C1BLzC,AHDwC,AJApC,AlDM+C,CsDNjD,CJGF,AlDGqD,CAAC,CfLtD,CiEDI,EAIJ,AjEFI,GeI+C,CAAW,EkDN1D,AjEEM,CAAC,CiEGX,GlDCmD,EfLnD,GeK0E,AfHtE,CiEHA,AlDMuE,CAAtE,CkDAL,OjEHc,CiEHV,EAMI,GjEHJ,EAAkB,WAAlB,EAA6B;A2EH7B,AEIA,APVN,A3EOA,AgDEA,AOSA,AZTO,AQZP,ArCWA,AwBDA,A9BAA,AJAA,AgBOA,AIjBA,AiCeA,AWNM,AlBON,AuCTA,AKIA,A5DXA,AxBWA,EgEDG,AJOD,AlBJA,A7BAA,AqBFA,A/BEA,AwBDA,AhCCM,EsCDK,AzCDT,AuDIA,ClCFC,C+CIG,AiCDF,AlGHM,CkBAL,AcDA,E2CHS,AEIA,AhFFP,AmCCA,A+BHO,CEQJ,AiCDFpB,A1FHA,EAAE,ARAM,CiEIH,ElBJA,C8BAT,AqBGU,AnCPV,CcIkB,A9BAP,AmDGAH,ArGLb,AGEmB,A+DJC,GlEEJ,CoEMG,CzDXR,EyDWW,CpENtB,AkEFE,C/DIM,CkGGF,AnCPsB,CmCOJqB,A9CD5B,EdHuC,AtCCH,C+CPrB,C8BOT,AZIiB,CURjB,ArCGoC,A4DIT,CvBN/B,AEGuC,AqBGPE,CjCCG,AiCDJ,CAAL,AlGHc,CiEIxC,A3BLK,A4DI8BZ,GrBH/B,CqBGI,AlGHqC,C6EAE,GAA3C,A7EAE,E6EA8C,AqBGPR,AlGHM,E2EJ/C,EAEJ,EEEI,AqBG+C,CAACT,CrBHQ,EFJxD,EAGJ,GAHI,CEIA,CFAJ,CEAoE,CqBGvB,EAAzC,EvBPA,AuBOgE,EvBFpE,MALI,EAKE;ALVR,AdgBA,ALPO,AxDHP,AsFJA,A/DHe,A0BOT,A8CCN,AGHA,AGCA,ACUA,AjEhBe,AkDYf,ArBHM,ATKN,EoBNE,AGKA,AJCA,AMHA,AZIA,AlBJA,AlDFC,AWED,A8CHA,ASDA,EgBGE,A5BAS,A6CJP1D,AhGKI,E2EEF,AEFF,AZIA,AFRA,CQOC,ANCA,CiCDCqE,C1BNC,AKGP,AjCJc,AqDSPL,ApCPO,CkBCN,AdKA,AjEJM,CuEGL,ANCT,AXPA,CiBMU,A5EPZ,AaIY,CmEEG,AqBPA,CjBID,AnCHR,ApCIQ,ARAM,A+DJN,CSCC,ADMA,CIDG,AqBPA/D,CpDCG,C4BCH,A0BMA,CDElB,ACFmBoF,AnCPA,CYMD,AIHd,AkBMgB7C,A3CRlB,CkBAA,ADMA,AxBHmB,AOHP,AOCR,CAAuB,CWDN,ADMA,AxBHA,AkDKvB,AjGLgB,CuEGQ,AyBRE,AEQF,AlGHM,CgGLHtC,ACUF,ACFAqF,A5CNvB,C4CMsB,A1FXT,C+DWY,ApBJS,A+CIlB,A5CNE,C4CMZ,ArCLF,AEFJ,CSC2B,CDM3B,ApBJqC,AUDF,AEFP,CTC5B,CiBM8B,CCNC,ADMA,AjBNP,IiBMW,AjBNnC,EkBAA,AwBFgB,A1CEc,C0CFU,AnCGpC,CWDmC,AGKvB,CdJ+B,CcK7C,AJAF,AxBXa,AOKb,EiBM2C,AjBNT,E0CFlB,CAAlB,AnCGM,CcIY,CdJqC,kB7DEvC,CAAN;AsETV,A0BKA,AlDTA,A6COM,A9DZN,E8CsBI,ANPF,AQIA,A1BDA,AxDHA,AoDIA,AHJA,AqDSA,ApGNA,AWCA,AqDFA,A7DEO,EwEHL,ADMA,AQJA,AiBJEpF,A1CEF,ASDA,EmCOG,CnBJA,CPFG,AKGF,A9BAA,CsBJC,A4BSA,ANZO,CnBIJ,AzBGF,AkDKA,ClBNC,AiBJE,AxFKF,AuDJA,CcIC,AjCJA,AmBAR,CSCW,AhEGF,CwFLGF,C3BCd,AEOa,A3BPA,AqDSAuC,C1BFC,CAAC,AQJb,AnCHF,CiCIA,AoBKO,C1BFM,CAAX,A0BEgByB,EDVI,CzBQD,ApBJA,A6CJE/D,E7CIA,E8CMhB,ANZH,CnBIwB,AyBQF,ANZO,CnBIJ,ArBCQ,MqBDT,CAA1B,AmBJE,CKEU,CzBQsB,AyBRE,ALFK,CpBUN,KAAhB,CAAsB,CAAtB,AoBVjB,EpBU0C,AoBVK,CpBUJ,GAAG,CyBRpC,CAAhB,IzBQuB,CAAnB,iD0BEK,EAAqG,IAArG,IAA6G,GAApH;A5BRD,ACND,AdeA,ATfe,AkCCf,ArCKC,AiDHD,ALbA,AQeA,ACUC,AzFfc,A0EUf,A3BHM,EgBMH,AQJA,AdID,AdJA,A9BCA,AdAA,AwDJC,A4BHD,C5BCA,CSGE,AwBFEE,AEQD,ArCLD,E8BLI,C1BUD,CONG,CTDD,ARCO,CiBAJ,AwBFA,C/BQD,A1DHA,C0DGC,A5CHA,AsEPE,CnBIC,AwBFAH,AzFKF,CcAC,C4CGC,AVNT,AoCJW,CpCIM,IAAjB,CUMJ,A+BRqB,CAACC,AzCEK,CUMN,A0BVrB,C1BUsB,A1DhBT,C4CYU,AIFnB,ClCVS,C4CgBY,AdJA,AIFO,CiBAJ,CAAC,CPM7B,EAA8B,CAAC,EONI,AjBA/B,CyCFS,C/BQsB,A+BRE,AzCEG,CiBAF,CAAV,CAA1B,GPMF,EAA2C,M+BR9B,CAAf;A3BGA,AWHM,ADKL,ATTD,AnBMuC,APCvC,AoDDA,AlDjBA,A9BeM,AyEfN,CtCiBO,C0BGL,A3ECA,AqCFA,A+CEA,AtFAM,AuDHN,AoCJA,EnBIE,APMA,AFPA,E/DIU,AuDHR,AoCJE,CzFOD,C+DGG,CeTM,AHKP,AZIE,A/DHF,AqCFA,AvBJO,EuBIL,AwBFA,CEOG,AjEHM,A2FPN,CnBID,AcGA,C/BHC,CsBEC,ASCA,AtFAQ,A2FPN,CzFNF,CsEUE,CKEC,CLFC,AjBAA,ChBTL,AwBQV,CcGF,A7EC2B,CwEHP,AxEGQ,C6EDP,AcNrB,CnBIe,GAAU,APME,CAAC,AqBjBf,AtFcc,AuDH3B,CiBA2B,AKEA,AZIA,AjEHrB,CgFNF,AfSF,AjDTE,AuCGwB,CyBHQ,AhECpC,CwDE8B,CKEC,CLF7B,KKEF,C7DLI,C6DKmC,C7DHvC,IgEFI,EAAiD,IhEAjD,EgEAA,AhEGJ,EgEH6D,GAAzD,EAA8D,MAA9D,ChEAA,CgEAoE,ChEIxE,qBAJI,EAIiB;A4DAjB,AEEA,ARTN,AdcA,AyBdA,AeMA,ACSAgE,AfDA,ApDXA,EyCSE,ASRA,ArFEA,AOKA,AmBDA,AdAA,ASDA,A+CHC,A4BHD,EnBIE,AKEA,AZIA,AiCAAgB,A5CNA,ACAA,EiBAE,AtEIA,AyFRE,CdMD,AoBMA,ChCFG,A/DFF,A+FIAxB,CzBRC,AIAO,AEEA,AbIL,AXNF,CuBEC,CLFN,A7EDF,CsEOY,AVNF,AoCJE,CpBSD,AjBLT,CiBKU,ArEhBC,AgGiBD,C3CNC,AoCJE,CrCID,ACAA,C2CMC,A3CNF,CsBEG,CACZ,AtBHa,CgBKjB,A5ENA,AsGSF,A3CRI,ACAW,C5DDD,AuGOV,A3CNA,EgBKmB,A0BGAD,ANZrB,CpBSA,C5ENA,EsEO2B,AtEPX,CsEOY,CaJxB,AbIyB,CaH7B,EFHI,AXM4B,CWLhC,AXK2B,CYHR,AZGjB,CYHkB,KAAhB,CAAsB,AoBK5B,InBNM,EAEJ,ADDgC,CDH5B,EAEJ,ACCmC,GCD/B,EAGJ,CFLI,ACGA,EDAJ,AEDI,ADCuC,ECG3C,EFNI,EAIJ,ACDI,CADY,CCAZ,CDEA,CCGJ,EFPI,EAKJ,EEHI,EAKE,MDHa,CDJf,ACIgB,EDEpB,GCFI,CAAsB,MAAtB,EAA8B,KDJ9B,CCIoC,CDGxC,ECH2C,MDJvC,ACIA,CAFY,CDKR,ACLN;ATJJ,AEJA,AaUA,AaJA,ACSAS,AxFPO,AVHD,AgBOC,AgDNN,AlCbD,E8CoBI,AJDF,AKGA,AEAA,AEXA,A9EOA,AqCJA,A+CGA,AYGC,AlFJD,AhBAM,AuDFL,AoCJD,COCuB,C1BGrB,APMA,AtEPA,AwFIJ,A7BFI,A7CAS,AMIA,CmFCR,C1BNC,AIQA,AEAE,A9DNF,A2ENE,CfYN,A1EJK,A+FIA,ACXkB,AlGKZ,CiEIL,AgCEAF,ACXN,C1BGO,AJHA,AGQA,AKGA,AXFA,A/DFA,AHNO,CkEQN,CONN,AIQF,A5ENe,C2EIH,AVAN,AkBHR,AnEDE,AhBAgB,C4EML,AXFT,CWEF,A7EVI,CCIe,C4EML,AXFA,A/DlBD,AOaU,ATCZ,A2FNK,C5FEG,C6EUnB,AqBAF,AjGNwB,CSDI,AkFLP,CpBSnB,AKGkB,A5ENM,CiGMLA,AlFHS,CqDR9B,AOSI,ACEF,CRVA,AUUuB,A9ENI,C2EIL,ACEA,A7DFtB,CkDAuB,CWEvB,AEA0B,AbFF,CAAD,CWEG,AXFZ,A0BVd,EfYA,AEA0B,ArEPrB,AMKC,CkDAuB,AgCE/B,ChCFgB,AjEJsB,CAAC,CeKrC,CkDDiC,AlDChC,EACC,CqDXJ,CrDWM,AfNE,CoEHN,ArDSK,CfNwC,CAAC,EiEIJ,CAAC,AjEJM,CiEIP,CGT5C,AHSmC,AlDE/B,AfNI,CeMO,CqDRb,ApEEqD,CiEIL,CAAlC,AjEJyC,CAAjD,EiEI8C,AjEJM,EoEL5D,EAIE,CUO0B,EACxB,C/DDA,CkDF2D,CGT/D,AHSgE,CaG5D,AbH2D,CGJ7D,AHIE,CGTJ,ArDWkC,CAA9B,CqDLF,CANF,EAOE,ArDKE,EAAE,CAAC,KAAH,CAAS,GqDZb,AUYI,EVLU,CUIc,EAExB,eAFwB,EAGxB,MAHwB,EAIxB,GAJwB,EAKxB,C/DJA,CAFD,CAFI,G+DGqB,CAA1B;APFD,ADZD,AdaA,AyBdA,AtCQM,AOWN,AiCTA,AKTA,AUaC,AhBAD,ApFdM,AWUN,AMSA,AgDXA,AqBHM,A/EEN,EmECG,AJKD,AQGA,AIXA,A9EOA,ALJA,AEFA,A4FFA,EhBUI,AEFF,AZEA,AfKE,AlDTI,AKHN,E+DMI,AQGA,AIXF,CJWG,CRHC,ASDF,AZEA,AjEJQ,CiEIP,AtBNO,A7CRA,ACMP,AqFDO,CRWJ,AIXF,AfSA,CGDG,AOCA,AEFT,CFEU,AVAN,AtBNF,A9CAJ,CmFHW,AHOA,AZET,A/DFS,AyCJO,A9CAlB,CmFHA,AjFCA,ACIoB,CEEP,AGLA,C4DOC,CtBNV,A3CEmB,CKHP,CsCCM,AOWH,A7CZrB,EuESuB,A9EhBjB,C8EgBkB,A1BGA,ArDXtB,ACR2B,CDQ3B,AuFHI,ClCcN,AkCd+B,CnBSN,AmBTnB,ChBQsB,AHCF,AjEJQ,CoEGL,AHCJ,AjEJU,AoFLD,CnBSlB,A/DnBD,AFemB,AoFL5B,CpFKI,CHFR,ACRI,AsFK+B,CnBSN,AmBTzB,CTS4B,AVAlB,AnEduB,C6Ee/B,A9EPN,AuFHsC,ChBQZ,CAA1B,AHCiC,GnEd7B,C8EgBmC,C9EhBM,E8EgBH,CAArB,CAArB,AXF0C,CAAC,ApEN3C,CoEM0C,AmBTtC,CnBS6B,CUAD,ASTmB,ETW7C,AVF0C,CAAlC,GAAsC,AnEdhD,E6Ec4B,A7Ed2B,E6EiBrD,GAH0B,EAI1B,AVJuD,CAAC,CAAD,CAA3D,GUA8B,EAK1B,UAAU,CAAC,CAAD,CALgB,EAM1B,UAAU,CAAC,CAAD,CANgB,CAA5B;AJCN,ADbA,ApBmBA,AiCXA,AaHA,AlDbA,AbaM,A9BEN,AJFC,AoBRK,A2CQN,AjBMM,A4CTN,ApFKA,E+DKE,AOQG,ACLH,AEKA,AEhBA,AfSC,A/DFD,AyCJA,A7CRA,AkBSA,AuCFA,A6BFA,CTCgB,CAAhB,AqBAE3D,AnGEA,A8FJA,EvBSI,AUQF,AEhBA,AHOA,A/EZA,AkBSA,AoEJA,CNgBC,A5ETA,CkECG,AYRF,AnFGA,CKIC,AyCHL,A9CDK,ACRP,AmCMc,AdRA,A2CQP,AjBMO,CULN,CaMG,AUQN,AEhBI,AgBCA,AlGNA,AyDOA,C4BEX,A5BFU,CsBKG,AtBLX,CZEO,AqDHK,AnGEA,ACRZ,AqBFI,CwBWI,AxBXY,C0DchB,A3ElBS,A+BYT,AsBCU,CtBDQ,C+DANC,A/DAZ,CUGG,AyCJU,CzCIf,A3BAgB,AiBHK,AdRnB,AoCSc,CAAC,C1DCjB,AsBVyB,AoCST,CAAJ,CZGZ,A9CFoB,AmBCA,A6BGlB,AuCPkB,CjEPlB,A0Bc0B,CuBCJ,AYRF,AzBEA,CaMG,AYRF,A7DPO,A0Bc5B,EiCSC,AnCXE,AEE2B,CmCPN,ArCKpB,AxBZJ,AoCSwB,CuBcZ,AjCTZ,C1Bd+B,C6DOJ,AzBE/B,AVKoC,AuCPpC,ChBQkC,AzBHtB,AqDJA,CrDIC,AqDJW,AZDS,EhBQI,AUQhC,AhBfP,CMO4B,ApDJU,A8CFpC,CMMA,AUQwB,AEhBA,AhEIa,CgEJrC,ErCKQ,CAAa,E3BDrB,EAA6C,C8CH/C,EAEE,MgBaK,CAAL,EAA4C,AhBf9C,EAGE,YAHF,EAIE,QnBAQ,EAAuD,ImBJjE,EAIgB,GnBAN,CAAD,CADL,IAEA,IAHF;A2BNF,AdYA,AyBdA,AzCUA,AGGC,AuDEDmF,AtF7BA,AsE4BA,AnFNA,AiDJA,EwBIE,AJMA,AOSA,AKjBA,A9EOA,AiFHA,AaHAlF,AlGNA,AmCMA,AdRA,A2CaA,APJA,AVKA,EiCSE,ADTC,AlFLD,AqBEA,AhBAM,AoFJN,EhBQI,AYRF,AkBSA,ArGNA,ACRE,AgEWA,AjBCA,CqDED2D,C9BDG,AYRF,AhFIM,A6CGJ,C2BLD,AGeA,AhFfA,AqGDA,A/DAA,AdRA,CwDwBC,AzEVA,AcHA,AuCFA,CaMG,AUQF,AEhBA,AgBCAlE,AnGEA,A0DDA,AVKE,C3CAD,AqDLF,AVKI,C7BHD,AiBHA,AdRA,AoCSX,C2COF,A/EhBc,AnBWM,E8EYhB,AhFrBc,AyDOF,CoBed,AuBRemF,A/EhBR,A2CaU,AjBCA,AuCPF,CZEC,ArDTA,AiEOA,CvFGZ,ACRe,AmCMF,AjCGM,A6CGZ,AuCPI,CYAS,A/DCN,A6BKE,APJF,A6BFhB,CZEiB,AjBAA,AVKE,C2BLrB,AtEda,ALeO,AsBVA,AoCSF,CpCTG,AoCSP,A6BFO,CnDCC,A6BKF,AsBNlB,CnDCe,CmCOS,AYRF,AkBS1B,ArGNM,AoCFJ,AdRgB,AoCSQ,AVKb,CuBCgB,AYRF,ArFEvB,AqBEuB,AGXA,A0BcE,C7BHD,AhBAd,EgFJgB,AzBEA,AVKjB,CAAX,C1BdgB,AnBWoB,CgFJL,AlFLE,AkBStB,AuCFX,CaM0B,AjDfM,CiDerB,ApDJT,ElBTmC,AqBFrB,CiDesB,AjDf/B,AnBWmC,CgFJjB,CZQzB,AjDfsC,A2CalB,EkBNoB,AlBMX,CkBNL,A7DPjB,AnBWwC,CgFJ/C,A7DPA,GnBWQ,EAA6C,E8DEjC,IAAsB,OhEX1C,KgEWsD,CAAC,CAAD,CAAtD;AUHD,AGeA,ALrBD,A3BYA,AVPC,AdRA,EiDeC,AQEA,AEMC,ADTA,AZCD,A/DDA,AqCJA,AyDFA3E,AzFKA,ATXA,AkBSC,A8CED,APJA,AVKA,C7BLA,CrBCE,A2DAA,A8BHA,EhBQI,AQEA,AXFF,A1BLA,A1CAA,ACRA,AESM,A8DEJ,AjBCA,EuBCE,A7BLF,AMIE,CmDND,AzFKA,A+CHA,AxDRA,AkBSA,AuCFA,EaMI,AlEDF,A8FNA,AnGEA,AUGA,APFM,A6CGJ,CNnBC,AzCOF,A+CYE,C3CAD,AoDJT,AxDRF,AkBSW,CiDIC,C+BTY,AhGKH,CsDDP,CQGG,APJjB,AVKiB,AuCPF,CnBQC,AjEJN,AoFJM,CRUG,A/BHR,AuCPI,C7EdF,A+CiBX,AQGkB,AsBNlB,CvCOmB,C+BGC,AXFF,AjEJQ,CiEIP,AmBRA,CRUrB,A1EvBa,A4DmBO,AsBNlB,CRKM,CRGkB,AQG1B,A/ERI,AgDIO,CuBCgB,AvBDA,C7CHjB,CiEIM,CjEJoB,A6CGzB,CAAX,EoBC+B,CGAG,AHAlC,EAAkC,CGAG,CAAX,CAAf,EpDJJ,A8CEa,CMEsB,CpDJN,A8CEN,CME9B,QNFoB,IAAuB,YAAY,CAAC,CAAD,CAAvD;AUFF,AGeA,ALtBA,AWHA,AOGA,ANWA,ApDRA,AGGA,AdRA,AoCQC,EaMC,AYTA,A9EQA,AoFDA,AULEC,AlGNF,EmEaE,AuBZE,A3FOD,AyDCD,AOAA,A/BLE,AdKF,AoEJA,EhBQE,AtEbA,EmEaE,AjEJM,CgFLL,AfSA,C/DDC,AJZA,AkBSA,EoDIR,AlEDU,AFHM,CFTL,AkBSA,C6CAC,CmBLC,AfSX,AqBFW,CEVG,CFUD,AxDPE,AdKF,AoEJA,CJDC,AfSA,A+BPE,AhGGI,AoFJN,CnBQd,AuBZiB,AxFQI,AoFJR,CIJK,AQKA,AnCGlB,A/BLkB,AsDClB,CJDF,AQHmB,A1FDA,CITN,AJSO,A+DSA,CmBLC,AQHE,AJIF,CIJF,AJIjB,EIJwB,CAAP,CAArB,A1FDE,CkFI2B,GnBKzB,A7CAS,CgELoB,AhEKA,AhBAf,C6DAgB,A7DAM,GAAtB,C6DAd,A7DAU,CgFLZ,CnBKsC,A7DAM,CgFLL,ChEKC,IAAI,GAAjC,EAAsC,C6CA/C,EAAkD,O7CAO,IAAI,GAApD,C6CAT,A7CAA,E6CAiE,A/BLrE;AwCFA,AgBZe,AEaf,A1DGA,AsBQA,AGLA,EqBOE,AEKA,ADTA,AZEC,A/DDD,AqCLA,AlBIA,A8DFA,AtFDC,AUGD,ATXA,AkBSC,A8CED,AjBCA,ChDTA,AmBIO,CgEHL,AgBEEC,AZDF,ENeE,A5ERA,AJZA,A+DSA,ACEA,CcIC,A/BHA,CmCRG,A9EQF,C2EDC,A7DFA,AoCIA,C0BOH,AEhBM,AnBKF,A7DAM,C4EML,AONT,ArFTS,A+DSA,AhBGA,AuCPA,CRUC,AvDJA,A2ELE,AnDMF,CmCRG,CHOb,A3ErBa,AmBqBD,A2ELE,AlGNF,C8EeC,A/BHA,C+BGR,A5ENe,A6CGpB,CgBHI,A7DAiB,C4EML,A/BHA,CsCHhB,ArFTA,A+DSiB,AhBGA,C+BGC,AONN,AnFAQ,A8DEpB,C9DFc,C8DEM,AjBCA,C+BGC,C5ENO,AoFJ1B,ChCQJ,C/BxBe,A+BwBW,APDA,C+BGC,A/BHA,C+BGC,AIXE,CAAC,A5BS/B,CpDJoC,A6CGd,C7CHe,AoDIN,APDA,CiCQzB,C1BPN,APDiC,C+BG/B,AEKmB,A9EXe,A6CGF,CmCRJ,AhFKd,AoDImB,CwBEC,AIXhC,CJWiC,AONnC,A/BIF,E+BJ+B,A/BIQ,CwBEC,AEKlC,AjCRgB,COCtB,CwBEE,AEK2B,AjCRa,COCC,CwBEC,A/BHA,COC5C,APD6C,C+BGC,CAA5C,AxBF2C,EwBEI,E/BH3B,CAApB,EAAoD,CAAC,EAArD,EiCQI,AjCRqD,CiCQzD,EAA+C;ATb3C,AQKL,APVD,AWJA,AxBhBA,AfAA,A4C+BA,AD/BA,AH8BA,A/EHA,AYSO,AgDXD,A0BHA,A5DTN,EuCkBE,AlEAA,A8FRoB,AnGKpB,AuDIA,AgCRC,CALD,CReE,AEKA,AEhBA,AGKA,AnEAA,ADQS,A+CNT,AjBCA,COCC,CgBDC,AhBCA,ClDDC,CkEAC,AQGE,AIXA,AnBKF,A7DAO,A6CGL,CwBNM,AnEMP,A6DNO,AqBDP,AKFO,CTCJ,AhEKF,ADQS,A8BLP,C+BGC,AEKF,AhBTA,EMCE,AYRE,AhEKF,ADQS,AgDXhB,AlBMS,CuBAT,AQGU,AbTK,CecjB,AjBXW,A9CQS,AqCJtB,AUFa,C5DtBA,Aa4BU,A+CNT,EMCE,AQGE,CAAC,AdJV,CMCS,AQGA,AdJA,CcIhB,A5DNiB,A6BGE,C7BHD,A+CHhB,AlBMkB,C9BKF,C8CRd,A9CQyB,AgDXJ,AlBMH,CuBAD,AvBAE,A4CTrB,CrBSJ,AvBAwB,A4CTO,CpBG3B,AxBMkB,CuBAI,ACL1B,AWH4B,CAAC,ClBOpB,CjBCsB,C9BKX,A+CNU,EjBCT,CmCRc,AhEKxB,CAAuB,A8CEA,AjBCE,A4CThC,C3BQ+B,CkBPG,AjEaO,A8BLxB,A4CToB,CTCb,AjEakB,A8BL5C,CmCRA,AjEakB,A+CNU,CAAS,EOLnC,CrDGO,ADQwC,CsDTnD,ArDCE,CDQmD,CAAC,IsDXlD,CPK0B,COF9B,CtDQmD,A+CNC,C/CMU,MAAX,GsDX/C,CPK0B,COD9B,AtDOyE,A+CNhE,C/CMiE,A+CNxE,C/CMG,IsDXD,EAIE;ACRR,A1BKM,AoDNoB,ApFf1B,AkCQA,A/ByBA,AiCfO,CgDHO,C3BWZ,ASSC,AbRD,A/DAA,AmBDA,A2EXF,AlGAE,AkBSC,AoCID,AUFC,ACLD,A0BHA,ErBSE,AQGA,AIXA,ArFGA,AqDJS,AHST,AuCPA,AODA,CvCSC,CwBEC,AfNC,A7DAM,AoDIP,AWPA,A0BHA,CpBQC,CWPC,AnCQE,C+BGD,AXHA,AtELA,AOKA,A0CNO,A9CNP,CsEYC,AvBAE,CwBDD,AnECA,AkFPA,CfMC,AWPA,ApCEN,A9CNM,AsDaV,AgCRU,ChBOC,AYRA,AfQX,ArBNkB,AQOP,APDE,AuCPJ,ChCQT,AWPY,A0BHA,AECA,CtBOC,AWPA,AlFJA,AsFKA,CfMR,AjBES,AgCRL,ChCQT,AqCVe,CpBQC,AWPA,AhCDS,AoCET,CxCCZ,A9CNJ,AiEMiB,AqBDR,ChBOP,ACDgB,AWPR,A9EhBG,AkFiBX,CxCCwB,A9CNP,AkDGS,AHSP,CAAC,CwBDD,AsBPnB,CfWoB,A/BHE,C+BGD,AIXA,ArFGrB,AkDKuB,A8CRF,C9CQC,CmCRC,AnCQH,A4CTG,CbYC,AbT1B,A0BH0B,ETCE,AjBEA,AfHvB,C4BYwB,A/BHE,CmCRrB,ApCEN,CoCFF,CXO8B,AzBLO,ACMlB,CwBDY,AsBP/B,C9CQkC,C+BGd,AeXa,CfWjC,A/BHmB,CAAnB,EwBDF,EAAyC,CAAC,CzBLtC,C6CHW,CpBQ8B,AzBLK,A+CFhD,CFDF,CpBQA,AsBP6C,EtBOI,EAAE,CAAnD,EAAsD;ACTxD,ALWC,AgBhBD,AxDjBA,AGMA,AoEsBA,A7D5BA,A+CmCA,AzENO,AuCJP,EoBQG,AlEAD,A0CNA,AQOA,AgCRC,ChBKD,CCCE,AOIA,AIXA,ArFIA,AiCvBJ,A0BuBI,AxDRA,AWQS,ATCF,A+DHP,CXOC,CwBEC,AIXA,ApCEE,AQOF,AuCTA,EtBOI,CDCD,AQGA,AIXA,A1BIA,CpDIC,AyFRA,CXAN,AjBEO,A4BFA,CzFQC,AkDCV,CELE,AFKS,ExB5Bb,AwB4BE,CRPgB,AUEF,CFKC,CiBFG,CzBLC,AQOnB,AWPE,CTEA,A7CAyB,AkFJvB,CtBOiB,CnExBR,AyFiBO,ClFIU,CmEOR,CAAC,AhCTE,CAAC,EgCSA,GAAG,CPJG,CAAC,AzBLd,CyBKa,CAA9B,AzBLF,EgCSuB,CnEPlB,EmEOiC,CAAhB,CAApB;ANbJ,ALYA,ArC7BA,AoEuBA,A5F7BA,AK+BA,AVJM,AqFAL,ENcC,A5EPA,AqCLA,AKDA,A5BEA,AhBCO,AoDIP,AUHA,ACJC,A0BJD,C1BEA,CKQE,AYRA,A1BKA,ATGA,COCC,C0BMC,AEfA,A9EQA,A0CNE,AiBEF,A7CAA,AoCKA,AqCXA,CAAC,CrBUG,AlEAF,AqCLA,AMKA,A8CRA,CvBQG,AYRF,AjFCO,A+DKP,ACJA,CxBCC,AsBCA,AhBIA,CmCRN,AnBIO,COIG,AhBCZ,CgBDa,A7BzBD,AxCkBR,AqDQO,AUHA,AjBEA,CuBAG,AlE1BD,A4DwBD,CMEG,ApDJf,AoCKA,APDE,A4CVF,AEEa,C5FCK,CiBGH,AjBHQ,AqDQR,AUHR,AjBEQ,A4CVA,CrBUG,ANFF,CVGhB,CgBDa,CxBNQ,AiBEb,EiBWa,CVPG,AUOF,AlCbE,A+CFlB,Cbee,AjBXE,COIV,AUOT,AjBXoB,ECEjB,CMEsB,CAAC,AUOF,AhBTA,CMEG,GAAG,ANFF,ClBJG,AkBIF,CMEJ,AUOK,AlCbE,AiBEhC,CiBW+B,CAAD,AjBXE,ACER,CgBSxB,AhBTiC,CMEG,EAA5B,CUO6B,AlCbjB,EAAxB,EwBM+C,EAAE,CNFrB,EMEwB,ANFF,EMEH,GAAU,EAAE,CUOD,CAAC,CVPG,AUOJ,CAAjB,AhBTb,CMEhB,ANFL,CMEL,ANFF,EgBSiE,MAAM,CAAC,CAAD,CAAvE,EAA4E;ARjB9E,ArExBA,AgFkBA,AxClBA,AEkCM,Af5BN,AsBoCA,AqC1CA,AOOA,ANiBA,AQMA,A3D9BA,A6CyCA,A/EVA,AJFA,A+DIC,AsBJD,EJFG,A9EQD,AKDA,A6CEA,EiBHE,AOIA,AEKA,A5BAE,AsClBA,A1FDF,AkBQA,A+CFA,A0BJA,CrCWC,CAAC,APDA,A8CRC,C7FJA,A6FED,CzFUE,A2DJA,CQEC,AOIA,AjCHO,CiCGN,A1EFA,A0B7BV,A9BiBU,AkBQA,C8DWC,AvERA,ASHA,A+CFA,CpBKL,A6CVQ,ACCF,CpBQC,AOIA,AjCHO,ApCAP,ATXA,A+CYA,A8CRA,CtBMC,AxBER,CiCOF,AUlBa,A3BOF,ATKb,AqCXa,C7DnBf,A4DkBA,AxEOI,CqDEa,A1BCX,A7CXY,CuEUd,AnEzBW,A0BFf,CgD+BI,AjCHsB,A3BHP,CqDEC,ANJhB,CMIiB,AOIA,A9EdC,A+DQd,CeMc,A1BKE,EmBTA,A9D1BT,ATgBU,C8EcA,A1BKE,EpDnBV,C8Ecb,A5DNA,C2BGE,AOQN,CmBTI,AOI0B,CAAC,AjCHK,A7CXH,CuEUD,AvEVnB,CAAT,CuEU8B,AoBRA,CpBQ9B,AOI+B,AaZA,EpBQE,IOIjC,EAAuC,EaZT,CAA9B;AlBWE,ADXN,AbnBA,AfAA,AQsCA,AsClBA,AQKA,AXzBA,AvB6BA,AzDJM,EyEYH,A5EPD,AqCNA,AIKA,ACNA,AhBvBwB,AZ0BvB,AhBAK,AoDKN,AWPC,EKKC,AeFA,AE3BJ,AvFkBI,A+CYC,A4CVD,CrCWC,CiBHC,AOIA,AhCTA,AiBGC,ATKD,CTFC,A7CXA,CsEWC,AQGA,AjCHA,ACNA,A+CDA,CvBOC,AGCO,AYHP,AnFDM,AKDC,CPPN,AsDaR,CwBCS,A1EFA,A0B9Be,A9BkBf,CsEWC,AzBAL,Af7BmB,CwC6BtB,AlECS,AyCDX,A0C7BF,CIoBc,CrBSC,ApEHP,AyFNO,AEEA,AtFGT,CsCIU,AtCJO,EuCFL,CvCEZ,EgEGe,AvEVA,AOOK,CgEGJ,AzBLA,AuCIlB,ArFTkB,C8BlBI,A+DsBH,CzFpBR,AyFqBJ,C/DvBe,AuD4BpB,CPIoB,AjCHxB,CiCGyB,CPJC,AOIF,CAApB,CPJe,AvEVS,CuEUxB,AzC5BoB,A9BkBK,A6FIhB,CpBQT,A3BPA,AhBvBoB,A+DuBP,CpBQjB,A3BRA,A6CHE,CpBQ8B,AvEVJ,A2FEI,C7CGC,A9CLd,EAAgB,C6FItB,EACY,ERKJ,AMRnB,C3FFiB,CuEUuB,AvEVxC,CuEUyC,CAAD,CAAtC,AcAsB,CZEtB,CoBP8B,CpBSlC,AoBTmC,CAAD,CAAT,CAAa,GpBOlC,AYFA,EZKJ,CYLsC,EQLb,CpBOrB,CoBRS,CpBYb,CoBVS,KpBML,EAKJ,AoBba,CAEI,GRIb,GAAsD,AQN7C,EAEY,ERGvB,KZGE,EAKY,AoBXkB,CAAC,CAAD,CAAT,CAAa,QAAb,EAFZ,EAGJ,OAHI,CAGI,MAHJ,EAGY,SAAS,CAAC,CAAD,CAAT,CAAa,QAAb,EAHZ,EAIJ,OAJI,CAII,UAJJ,EAIgB,YAAA;ArBN/B,AI1BA,AOmBA,AtCiBC,AhBpCD,AfUA,ANVA,A4BAA,AmDMA,AHoCA,ApDbA,AGCM,AjCGC,A+DFN,ARAK,CvDlBC,CuE8BL,ASfA,A9ESA,A0B9BA,A/ByBA,AUIA,A6CEA,AqCXC,ApFKD,EgEGG,AzBLD,AuCMA,AvE1BJ,AkBmBM,CsBSD,CgBFC,AGOE,AKJF,AxBDA,ClDDC,C0EEC,CIXC,A9ESA,A+BPO,AsBCA,AlDCP,C+CMP,AuCLU,CfMD,CRHC,AvEJV,AQAU,C2EJC,AnFIX,AQAW,CuCFC,A+CGI,CvBGH,AxBNA,A+CGI,CpCFb,CtBDA,AsBCkB,CgBYJ,ASfF,ApElBlB,AqBoByB,A0DGH,CXLb,AlDCY,AGCf,A5BEG,EkEWc,AtCbG,AsBCpB,CaKA,AYRgB,AnFIpB,AiCHsB,CjCGtB,A0DD0B,ClDCJ,CuCFV,CgCSY,AhCTtB,CgCSuB,AeNI,AtFDJ,CuEOC,AeNI,AtFDJ,CuCFC,A+CGE,CAAnB,CfMmB,AIXtB,ApCEL,CgCSsB,CAApB,CIX4B,A3EIV,GkEWe,AlEXF,C2EJC,AnFIpC,GmFJuC,AnFIvC,C0EW0C,ASf1C,C3EIyC,CAAC,EAAE,GyBH9C,EyCcuB,E1EXrB,C0EWsD,A1EXlC,CAApB,EQAyC,CAAlC,CAAP,WkEWqB,GAAoD,EAAzE;ACXI,AQHL,AVFD,ApEnBe,AuBDf,AuEyBAN,ApFtBA,AuBHA,AkDDA,AvDyBA,AfWO,AfPP,A+DFA,A1DAC,EgEGE,AEQD,AOAA,AlCbC,A5BED,AiBFA,AmBQA,AGPA,EaKG,AdHD,AxDRA,AiBgBS,A8BLT,CuBFA,AhBIC,CmBKC,AOAA,AkBZA,AnCCA,A7CAA,AoCMA,CmBKC,AyBZAO,AjFUS,CjBhBR,A+CWA,C2BLQ,AlBEP,ArBHA,AsBCA,CgBYC,ActCV,AxB2BY,A9CSO,A8BLT,A8CHE,CvBGD,AGOT,AzElBS,CiBgBU,CuCRjB,ArBHS,AlBWS,AwCVT,AVKA,CmDLb,AlGNc,AmCKL,AmBQP,AGPY,AoCEI,CvBGH,AhBEA,AGPF,AVKT,CuBAY,AiB/BhB,A/B4BgB,AtCDd,AoCMA,AGPO,CyCAQ,AlGNb,AmCKa,AYMA,CwC/BjB,ArE2BkB,AiBFT,AmBQS,CgBFC,AtEXA,A+DOE,ATMnB,AGPiB,AoCEI,CnBFjB,AJKK,AdHP,AvCQe,AwCVV,CiBAmB,AvCDP,AlBWS,AqCHT,CgBFC,APJE,A8BCE,CbUH,CAAC,AvBZA,CuBYD,A7CbE,AmBQA,C0BKnB,A7Cbe,AmBQK,EGPE,CyCAC,A/DDA,AmBQR,AGPQ,CuBYC,A7CbT,AmBQS,AGPF,AoCEM,CpCFV,AoCEW,C9BDD,A9CSf,AqCHE,CnBRY,CAA/B,AmBQgC,AGPA,CMCG,ANDnC,CiBAI,AMY8B,AjBXF,ATMb,C0BKgB,CNZQ,AMYT,A/DFW,C+DEzC,AjBXmC,A9CSO,CAAzC,AqCHiC,CAAtC,E0BKyC,AjBXE,ATMF,CoBPrC,AXCwC,CAAD,CWDQ,AXCZ,CTMM,AuCLrB,CvCKsB,AuCLI,C9BDD,A8BCzB,CnBFpB,AmBEM,CvCK+B,CoBPgB,ApBOP,EAAT,EAAa,EoBPlD,ApBOqC,CSNrC,ATMJ,CoBP+D,AMYL,CAAC,CAAD,CAAjB,IAAwB,MAAM,CAAC,CAAD,CAAvE,EAA4E;AEb9E,ACXA,AdpBA,A/CAA,ARUA,ARHA,A8E0CA,AjDjBC,AlBYD,AwCXC,AlDED,EmEFE,AnDKA,A2ELAN,AnGAF,AwF3BwB,A/B6BrB,AFKD,AqCZA,EXiBE,AnFXA,AqBAA,CoCMC,CoBPC,AJKA,AQEA,A9EbA,A+DOA,ATMA,APFA,GlDJG,AqGDA,AnGAT,A4FLS,CjBKC,AIOC,AoBPDO,ApFvBV,AiDwBY,A7CAF,A2ECE,CvBGD,AQEC,AEKD,AOvCa,ArE4Bb,CqE5Ba,Cb2BX,A7ECT,A0BIS,A+BEX,APFW,C2BLX,A3BKY,A8CHF,CvBGG,AQEC,AEKZ,AzDPW,AwBAT,CuBAU,AzEJA,AiBxBhB,CgE8BW,A5DNP,AyENF,C7ElBF,CwD4BmB,AvELnB,CuEKM,AzEJF,AkEAkB,A7CAF,C4DME,AoBPpB,AX3BsB,CjBgCF,A4BLAC,C5BKC,AQEC,ASlCA,AxB4BC,GOIC,CQEE,CAAlB,AvDjCK,CgEDS,AM6BZ,CN7BY,ArE4BpB,CgFDF,ALEiB,CvBGb,AQE6B,CfNA,COID,AQEG,ERFD,APJE,A8BC1B,CvBGN,APJ6B,CeMM,AeLf,CvBGa,AQEJ,CfNO,A8BC9B,EAHmB,CfQe,AeLf,CfKgB,AfND,CAAC,CAAD,CAAJ,CeMS,EAA7C,AfN8C,EeMI,QfNlD;AceA,ALlBN,ArEvBA,AwCDA,A8CCA,A1FAA,AuCRA,ACQA,ASaA,AbaA,AdTO,AiCgBN,AGND,AkCNC,C5FrBD,CwE6BE,AEQA,AOCC,AvCZD,AKFA,AoDEAT,ApFxB2B,A0C2B3B,AtCFC,CnB3BH,AmBWuB,CrBiBnB,A0C5BJ,ArB4BE,AGXW,A0BcR,E/CXC,A+DOA,CUUC,CHNC,AQEA,ArCPA,AyDAA,A7ETS,CwDwBD,ANZP,AOIA,AoBPAU,AlGNA,CyCMC,AsBCE,CUUD,A3DnCkB,AOeR,CoDoBT,AKJC,AhCTD,AhCtBiB,AdkBjB,C8EaE,AhCTD,AoDEX,A3D1BF,CuCiCe,CPJb,AEQa,AzEjBA,CyEiBR,AVVW,CeMA,CLIA,AhCpCJ,AzCmBI,C8EaL,A9EbP,A+DOe,COID,AGMA,CHNC,CAAD,CAAZ,AGMe,A3BbX,AzBPS,CyDgBI,AhCTvB,CAAuB,CwBOC,AQEC,AhE/BE,C2DmCF,CAAC,A3DnCC,C+DuCvB,ACRwB,CRFJ,AOWxB,CCTW,CAAD,ELIV,A3DnC2B,AiDyBO,CjDzBP,C2DmCO,AKJE,CLID,AVVE,CeMC,ERFd,AGMc,A3BbtC,CgCSyC,CRDjC,AGKR,CKJU,CLIgC,A3BbA,C+BiBtC,CJJwC,CIM5C,AJNA,AKJ+C,ELIA,AKJzC,GfN8C,CcchD,AddiD,CAAD,CciBpD,A/BpBA,AiBGkC,EOKX,CAAC,AOSpB,AddsD,CAAtD,CckBJ,KPb+B,COS3B,EPT8B,AOclC,CPduB,AOSnB,CPVoB,COgBxB,CPdQ,AOQJ,EAMH,aPdsB,CAAC,OAAO,GAAG,CAAX,CAFC,EAGhB,CAHgB,CAAlB;ACDP,AzBLA,ATvBD,AEFA,ApBRA,AiEkDA,A9BPA,AqCZA,EjBGE,AGuBA,AtDjBA,A2ELA,ApFxBA,AyELF,AlEoBE,A0BcC,E0BMC,ApCpCJ,ArCmBK,CAHD,CsEkBG,APRD,CWFC,CDYG,AKJF,CoBPC,CnCCG,A8BAA,CnBFD,ADYE,AcxCb,AvFuBW,C0EKC,CrCxBZ,CoCoCgB,AyBXd,ALCgB,CnBFH,AmBEI,CnBFZ,AXEW,EWFA,ADYE,AoBVE,CpBUD,AVVA,CWFD,ADYA,AcxCpB,CdwCI,AKJiB,CAAC,CJRC,Aa5BvB,AM8B2B,CAAC,EfMpB,CJRmB,AIQA,CJRC,AIQpB,KeNc,CnBFpB,AXEkC,EWFA,CAAC,AXEE,C8BAG,EnBFF,EAAtC,EAA0C,EAAE,CAA5C,AmBEiD,CAAC,CnBFH,AmBEE,CAA7B,E9BAgC,CAAC,A8BAE,C9BAH,A8BA1C,C9BAwB,GAAwB,CAAtD;AQIN,AK/BA,AhCGO,AEuBP,AjB1BA,AuBwCA,A8CbC,A7D1BD,AEFA,A/BCA,A4BAA,AzB4BO,CuFLP,CrB0BE,AGXA,AvCZA,AhCMA,AYdA,EqDQE,ADYA,A7BnCS,AQqCb,AiCTI,A1EHS,EmEMN,A9EbD,A+DOA,EWFI,CMYD,AKPA,A5ECA,CmC7BU,ALJnB,AwB6BU,A8BAE,CnBFC,AjEMF,EuEMF,ApCnCa,C8BuBN,AXEF,CsBGV,AtFLW,C0EYC,AlCvChB,CkCuCiB,ArBEjB,AWZiB,A8BAE,CnBFC,ADYF,AYPA,A9ChClB,AsD6BoB,CnBFC,AWKjB,AQHiB,CnBFD,ADYJ,A7BnCT,C8BuBH,ADYA,C9DV2B,CoDAR,CUUC,AVVA,CAAD,ApDAW,CoDAjB,C8BAE,E9BAU,A8BAjB,CbUH,EACL,MjBXkC,GAAG,CUUC,AVVzB,ApDAV,C8DWD,EVXuC,EiBUpC,EAEL,EjBZE,IiBUG,EAGL,CPHsC,EAEpC,AOFG,EAIL,IPJsC,EAGpC,AOHG,GPAiC,EAIpC,MAJoC,EAKpC,YAAY,CAAC,CAAD,CALwB,CAAtC;AxC/CJ,AmCAA,AxBcA,AQmCA,A0CjDA,AzDUA,A5BHe,AEgCf,A2EJM,AvDVN,E8CkCE,AGPE,AzC5CoB,AgDgCvB,ArEHC,AGTA,A0BcA,E2BNE,ADkBA,AYZA,EfGE,AtEdA,A+DOA,A1CVA,EqDQE,AmBEG,C9CIF,AuCPO,AOPD,CpB0BL,ApC5CV,ArCqBU,A+DOA,A1CVR,A0BcA,A8CdM,CtDpBgB,CmC4BZ,AnC5BY,CkC8CX,AzEvBA,C+DOC,EUgBV,ApC5CJ,ArCqBM,C+DOW,COOC,AjCnClB,AiDyBM,ChBUa,AgBVO,CAApB,C/C3BkB,CmC4BF,AYDO,CZCN,AnC5BC,AwB8BD,AuBHjB,CvBGkB,COOlB,APPiB,AuBHS,CvBGf,AuBHX,EhBUsB,AgBVK,C/C3BT,AwB8BK,CxB9BL,I+BqClB,IITgB,AXEgB,EWFE,CXEC,CAAxB,GAA4B,CWFvB,EAA0B,GAA1B,AXEhB,EWF+C,MAA/B,CAAlB;AvExBJ,AkEHA,A/CCA,AGVA,A2BiDA,A8CXA,AzFMA,AwDPM,AlBML,E8BiBC,AJLC,ApC7CqB,AEDtB,AgDFA,AD6BA,EZCE,AwBCEC,AhFDG,EoDSH,AQFA,A9EZA,A+DOA,A8BAC,CKDE,CpBMD,CbPQ,AqBDP,CZCC,AwBCE,AnCCF,AuBHA,CRQC,AzClCa,ArCsBb,CoDiBX,AfvCwB,CqC2BX,AIOP,AQRO,CtFJC,A+DOA,C/DPC,C0EKX,AYDK,CvBGQ,C/DPX,CsFIa,CAAV,CjD1Be,C4B2BlB,C5B3BkB,A0B6BD,AEFO,AqBDP,CvBGC,AEFlB,CFEiB,CAAN,AEFc,AqBDtB,GjD1Be,A0B6BK,AuBHA,CjD1BL,AiD0BtB,SvBGqC,GAAG,CAAzB,GAA6B,MAAxC,emCDN;AvBtCA,A9CYA,A0BZA,A2CuCA,A5D7BA,AN2BM,A9BEA,AiDgBN,ADrBM,AoCGL,A/EEM,EmEDJ,AGuBD,AzBXA,AfvCA,AhBkBA,A4CSA,EKSG,AzCnCL,AqE2BMC,AlGND,AkBKD,A2EEC,AtFDQ,C+DFF,CQQL,AfLA,A1CXA,A4CSE,EaOA,C9CRQ,A9BEA,AgDLA,CaMN,A7CFA,CoDSC,AQFA,A5DPA,A+CAE,A1DCO,EuEMd,CfLQ,A7DDR,A+DDW,A1DCM,CLAD,CgGAJ,A7EVF,CQjBhB,AkC4BiB,A/BHX,CAAmB,AiCCJ,CiCEnB,C7EXA,A6BKI,ChCIF,AhBCE,AgDLsB,ChCIN,AGTA,A4CSG,A1DClB,CwDCgB,A/BHjB,A9BEsB,A+DDF,AfJpB,CaMkB,CAAD,A/BHO,AiCCd,AfJgB,CaMf,A7CFb,CgCJE,ChCIsB,A+CAI,CFEH,AEF3B,AfJkC,UaMG,AbNjC,EAAwC,CaMJ,CAAzB,GAA6B,G7CF1C,G6CEE,CAd+D,CAgB/D,oDmCDJ,yGAFF;A/BMM,AxBhCC,AdDP,AqE+BA,A1F9BA,AFCA,AaHA,AHRA,AfmCM,AqFCN,ETuBE,AJNA,AhCjBA,AXzBA,AhBAA,A0C2BA,AxDPC,AgCID,AdDA,AhBGA,A+DDA,AfJA,A2ClBA,Ef6BG,AjFLD,A8C5BS,AnCAb,AaiBI,EiDkBE,APLA,A/BLA,AkBHE,ChDKD,EiEKS,AtEJP,AIHO,C0CzBG,CbCjB,AhBAA,A0C2BA,AtDDW,CoEQD,AdPV,ANNY,CTID,AE1BS,AXyBT,CyCkBC,CHRC,AGQA,ANXT,AtEJF,A4CFW,AjC1Bf,A0CsBiB,CiBWf,EtELgB,AmCHZ,C/BAA,ACEJ,CyC3BK,A1CyBoB,CwEkBzB,AjBfA,CcOI,AzEPF,AiC3BF,A0B2BA,AvDHI,C6BxBQ,AEwBS,A9BEE,CuEgBD,AxElBK,CwEkB3B,A3D1CA,AoCqByB,CpCrBb,CgBAZ,CWLY,CXKM,A5B0BlB,AgDL6B,CpCrB7B,A0C2BA,CWII,AnCPJ,A9BE+B,CY1Bf,CqDiChB,AXNA,AxBH+B,MmCO3B,EAGJ,EXPS,ANNT,CiBUI,EAIJ,MAJI,AXJJ,EWSA,ArCpCA,A0B2BkB,E1B3B2B,GqC+BzC,EAMJ,MANI,EAOJ,CrCtCA,EAA6D,KqC+BzD,EAOI,IrCtCR,EAAwE;AaC1E,AdHA,A4DGA,AGfA,AM4CA,A1F/BA,AU2BC,AiCgBD,A0CdC,A9DbD,E2CUE,AGwBA,AJNA,AKVC,AXOD,AtEZC,AGND,ACGA,AiDHA,C4BVQ,CRuBL,AQDH,AhDlCA,AhBAA,A0C4BE,AxBHA,AXRA,AnBUA,A+DDA,AlCXE,EoCyBE,AlEfF,AiDHE,EpBtBN,AhBAA,AOiBM,AUFE,C2CUD,ADkBA,CNHG,AtC1CZ,AqBwBY,CMMD,AxBHA,AXRA,AnBUA,A6BZE,C9BUD,CyEAV,APea,ArCxCb,AhBAA,AoCsBa,EjDGA,AoBRA,AUFE,CDdb,ADHJ,AfEE,A0C4Bc,AxBHZ,AXRY,CnBUC,AgDLF,CrBxBf,A3B6BkB,EY3BhB,AbyBA,AoBRE,AUFS,C0C4BX,ANHqB,ApCzBA,CDdnB,ACcS,CDdT,ACcJ,CoCyB0B,EXZf,AtDDM,C4B1Bb,A0B2BuB,AtDDvB,C4B1BA,IqCuCmB,ArCvCnB,AoBqBW,EpBrBL,AoBqBe,CiBkBY,CXZD,ANNT,CiBkBzB,AXZmC,ANNT,CpBrBxB,A0B2BgC,ANNT,CMMhB,ANNI,CAAb,CMMuC,E1B3B1B,IADb,G0B4BgD,CAAC,CAAD,CAAvC,CAAP;AkBFH,ADkBA,AxCpCD,AmCFA,AQLA,AjDEA,AgCCA,AmCRA,AImCA,A1FhCA,AU6BA,AiBFM,AnBpCN,AC+CO,A4EPP,A9DbA,EuCmBG,AOcD,ACfA,AXMA,AtEXA,A4CJA,AlBOA,AMnC0B,A2B+BzB,AxBHA,A/BCD,AoBTC,AnBUA,AgDLD,CMIA,AxBHA,AXTA,CuDdF,AjBGA,A7BDI,AuD6BA,ApEKS,E4DaP,AVTE,AJXF,AbPE,E2B2BA,CVTG,ASxCX,AS+BS,ArDNA,AGAO,AdRP,CbnBT,AuD+BU,AbPE,C2B2BD,AhDpDiB,CgDoD1B,AVTY,AtC3Cc,C8BM5B,ATmBe,CaOD,C5BJR,CgCeY,A5CRF,AflChB,A2B2BuB,CgCeJ,AkBTf,AtBFa,A5BJX,AeHS,C3BUG,AflClB,C2B2BwB,CgCeV,AkBTM,ClBSG,AJXjB,CsBEF,ApEK2B,C8CPR,ElChCK,AZwC1B,CkDGY,CAAZ,AtC3C0B,KZwCnB,AiCfM,CrBzBa,CAAA,AqByBH,EAAE,CAAC,CAAD,CAAZ,CAAb,QjCeA,KAA4B,WAA5B,GAA0C,gBAA1C,GAA6D,CADxD;AyDTP,ADkBA,AG7CA,AnDHA,AkCMA,ApCXe,AwEPf,A9EsDA,AfXC,AiDcD,AMfM,AkCLA,Ed4BJ,AGPE,AbFF,AtC3CA,ArBA+B,A+EH/B,A/BmCA,ArBJA,AeHA,EmCUE,AvEjCA,AkB0BA,AXRA,EwDgCE,AVTE,AjBlBA,E2B2BA,A/DlDE,AiD8BF,CIWG,AhCfF,AsBCO,AkCLA,CxDId,C0CwBS,ArEpDsB,A+EH/B,AvD+BS,CgDiBG,AbFA,ArDzCA,ANFmB,A+EH/B,AxBmCU,ENHN,AkCLA,C7EtBW,AiD8BF,ANHO,AkCLA,CxBmBJ,AJXF,CIWG,AjBlBA,C8BoBf,ChDjBe,AyBCb,CuBgBgB,AbFR,AJXM,A/BJA,AkBHE,CiBkBC,AoB9CrB,A9BgC0B,APJL,CqC5BrB,C/EG+B,AuDgCV,A4BRjB,EnFxB2B,AwB4Bd,AkBHQ,AyCDK,Cd4BN,AGPtB,AbFU,AnCfV,AyBCE,CoBuBqB,AVTzB,AJXa,CiBaa,AlE3CX,A2C2BkB,APJL,E2B2BA,CrEpDG,AuDgCF,CvDhCE,AuDgCzB,AbPc,C2B2BW,A/DlDJ,AyEL3B,CI2BI,EJ3BJ,A9BgCI,APJgC,AyCDK,CzCCzC,COIyC,CoBuBjB,CAAxB,C/DlDe,GAAuB,EyEL1B,AI2BR,EAA+C,OJ3BnD,EzEKe,AyELM,GzEK2B,MAAM,aAAA,CAAQ,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAApD;A6DFJ,ACEA,AjBGA,ApCgCA,AgCjCA,A2C6BA3B,A/DJC,A9BIK,AWzCN,AdwCA,A8DEA,EMIE,AOeA,AVTA,A3D3CA,ARuBA,AgCKC,A/BAD,AwDCA,APJA,AyCDA,COQC,ClBaG,AkBbF4B,ApF9BA,AyELA,AlEuBA,EwDgCE,AVTE,AlEfF,AwDCA,APJE,AyCDA,CrBaD,AqBbE,Cd4BD,A/DlDE,AiD8BF,A1CZA,CrBGC,AKSO,A2DCP,CYhCT,AjBGA,AgCoBY,CrBaD,AOeA,AGPE,AOhDF,AlEuBA,CiDiBC,APLA,CIWG,C+BXf,AlGTc,AyDMA,CaQC,AUQF,AkBbEZ,ApF9BE,AiD8BF,A1DAT,CiEKJ,AHMgB,AS1ClB,AjBGA,A4BPgB,AlFmCO,AJJrB,CDLe,AkDEE,CoBYD,AMpClB,AjBGA,A7CDM,CwDkCa,APLX,ANHW,AkCLE,C3FDP,AkDEQ,AyCDA,CtEJD,AsEIA,CrBaC,AHME,A+BXxB,A7FAM,AgBZK,AsEIT,CxBmBuB,AnEpBF,CmEoBC,AnEpBA,AKSO,AgBZT,A6BKA,CiBkBpB,CUSwB,CAAC,A7E7BzB,CsEcA,AjELI,AoDHJ,EaQ4B,AOeA,AUvDnB,AlFmC0B,AoDHP,EaQE,AiBxC5B,CjBwCF,AOe+B,CUvDC,CjBwCC,ANJnC,CAAoC,E3DD9B,CwEoBqB,A3B3BL,C8BoBT,A3EbkC,C6CPf,C2B2BU,AGPX,CHOL,A3B3BQ,C2B2BhC,A3B3BiC,CAAD,CcQlC,AdRgC,E8BoBnB,A3EbP,A2DC0C,CdRR,C8BoBD,A3EbkB,C6CPf,CAAC,CAAD,CAApB,E8BoBT,EAAkC,A3EbzC,A6CP2C,CAA/C,C7CO+D,C2DCjE,EAA+D,CgBYlD,CAAP,MlEzCA,IADA,CkD8BN,ElD5BM,AkD4BsE,elD9BtE,GAGA,IAHA,GAIA,eALF;A0D0BE,AvCjBN,AmCFA,A9CNA,AsBGO,AsD2BP,AlGTC,AgCKA,ArBEM,AwBDP,AgBkBA,AGXA,EwBDE,AEUG,AbFH,AS3CkB,AjBGI,AtD6BtB,AJHA,A+DIA,AdRA,AyCDA,CXQO,CVKL,AULF,A/CtBE,AmCFE,AxBHO,AjCyBA,A8CDT,EqBME,AXQE,AoB9CF,AxBmCC,A1DAD,AgBZA,A2CaA,AdRE,AyCDA,CzCCC,EsBEO,AlBSP,CV/BU,A2CRP,AlEuBA,A6BMR,C0B1BgB,AjBGI,AtCiBX,CyDeD,AFnCQ,AjBGI,A7CKpB,AkDyBQ,APJA,AkCLE,CxBmBC,AvBtCO,CAAC,A2CRP,AlFmCF,A6CNN,C4BSO,AlC9BS,AoB4BT,APJA,APHN,AyCFQ,CrBaD,AHME,AlCjCF,AmCFE,AXqBF,CaQC,AMrCG,AWHD,A9BgCJ,CaQC,AQFd,AlC9BoB,A9BGlB,ATwBc,A6CNd,CoBWA,ArC3Be,AmCFE,AQRD,A9DQhB,AkDyBe,APJA,APHN,CNrBgB,AoB4BT,APJL,CE1BS,AfEM,AjCyBA,A8CD1B,CaQkB,AHME,AoB9CA,CpB8CC,AlCjCzB,AmCFqB,ATLG,AfEF,A9BGlB,AkDyBW,A2BTU,CxBmBD,ArDnCpB,AHsB6B,AqDGT,A2BTE,CxBmBxB,AS3CkB,AhCKc,CgCLd,AvEgCM,CmELpB,CACJ,A5BvBoB,A9BGlB,C6CLoB,CAAA,AfEe,A9BG7B,AyEXS,ArC6Bf,C7CM2B,CuC3BT,A2CRhB,C3CQC,CoB4BQ,AdPa,EcOQ,CMIC,AxD7BjC,ATwBF,CiEKoC,AhBDtC,AJVgC,C7CMO,AiDIA,AJVN,CkBlBZ,AzDsBd,EGtBW,AoCkBU,AyCFX,CnBGX,AJnBN,Ad4BA,AJVqC,AyCFQ,CrBaD,CER1C,AlBO2C,EgBCE,CAAV,CAAjC,ANJW,CAAb,CQNI,AlBSN,CqCZiB,CnBMf,AlBMiD,AqCZjD,CzCE0B,CAAxB,CsBCE,EAIJ,AtBJE,IAAI,CAAC,CsBAH,EAKJ,AtBLE,CAAS,WAAT,IsBAE,AtBCA,EsBKJ,EtBLQ,CAAC,GAAL,CAAS,IsBDT,EAOJ,KtBNI,CADF,GAEE,IAAI,CAAC,GAAL,CAAS,IAAT,CAFF,GAGE,GsBHA,CtBGI,CsBIqB,AtBJpB,GAAL,CAAS,IAAT,CALJ;AqBQI,AScL,AZrCD,ACRA,AzBKA,AgDLA,AM+BA,A5F5BA,ANoBA,AgCKA,ArBEA,E2DMG,AOcD,AChBA,ANAA,ALQA,AS3CA,AjBGA,AlByBA,AaQA,AUHA,APJC,APCD,AyCNA,EtBvBF,AvDQI,ATuBA,A4DHA,EaME,ANAE,ALQF,A9CxBU,A2CcR,A2BTA,CxBmBD,C1BfC,CoCuBC,ANnBO,ArBFP,CiBaC,A1BfA,C0BeR,AHVW,C3DDD,C6CFC,CcGG,ACJF,CYsBC,AxEnBA,C2DCb,EakBgB,ARlDlB,CnB6BS,E2BqBP,CChBoB,AbNlB,AfCkB,AyCNE,Cd2BD,AxEnBA,CAAC,A4DHA,CaMC,AaXE,CbWD,A5BLA,CAAC,C7CEZ,CwEmBc,AxEnBA,EmEGI,CDH3B,ArBFgB,C2BqBW,ANlB/B,ArBH+B,C4BK/B,ANCE,EPPA,C5DGW,A6CFsB,C7CEjC,A4DHgC,AfCE,C2BqBpC,EAAuC,C3BrBR,CAAU,CAAV,CAAX,AyCNyB,CAAC,CzCMD,CqBEzC,EAEJ,CrBJiD,CAAC,IqBE9C,ArBFyC,AyCNA,CzCMU,AyCNvD,CpBWA,GrBL2D,CAAd,CsBMd,AtBNX,CAApB,IsBMoC,EDJhC,EAIJ,KCAE,CDJE,EAKJ,ACAM,QDLF,EAKI,mBCDN,GAEI,EAHN;AQaF,A/CrCA,AoCVA,A5CDA,AgBPc,AEUP,AGyBD,AoDKN,A/CcA,ADhBC,AoCHK,AvDTA,CU1BN,C8B8CE,AOHA,A1BMA,AfzCA,AhCgCC,AJJD,AqDQA,AUFA,EaiBE,AlCjDS,E4BoCL,AgB1CF,AxBmCA,A9DHA,AoBV+B,A4CW/B,EYsBI,AbjBF,C/BxBC,AaiBO,AQUZ,AgCVY,AvDTA,C8CiCJ,ANbA,AgB1CF,AxBmCA,A1Cb0B,A4CW1B,CbYR,AfzCA,AhBkByC,C2CiBvC,CagBW,ANbA,A5BpCO,AWmCd,CiCzCM,AxBmCA,A9DHZ,AoBVkC,AiCmB3B,CwBFM,AhCRT,AyC/BS,AlEsBgC,AiESzC,AvDTA,C+CiBU,AnCjCS,AGyBF,AzBTa,A2CiB5B,AsBRe,CvBIN,A1CbX,AiCmBF,AUFK,CVEI,AvBnBS,E+CiBpB,AnCjC2B,ANF3B,A2BmCE,COGmB,AOHF,AnCjCS,ANFhB,AkDJJ,AxBmCJ,ACIO,ClBRP,AQUW,AWRX,CtB3BmB,AoB6BF,ATML,CiBCQ,AzBXK,AMc7B,AaZsB,CbapB,AYPa,AsBRX,C3CzB6B,CVQnC,AIVE,AkDJyB,AD+BK,CTwBF,CAAC,AxCnDT,AiBqCE,CrB3BG,A+ByBL,EOGC,A5BpChB,AWmCoB,CAAV,AUFQ,CVEZ,CuBciB,ANbO,AzBX/B,AMcJ,CyBUE,AUvDE,ChB0CJ,AzBXwC,AMgBtC,AEN4B,AUFH,CuBvCS,AvBuCR,C3BnC5B,CiBqCE,CjBrC8B,A2BmCT,CAAS,CAAT,CVEc,CAAnC,AUFiC,EZMnC,EAGE,AENA,EjBtCF,EyCmCA,AzCnC4C,AiBsCtC,CAAC,CUHsC,EVG3C,CjBtCF,AiBsCW,AUHqC,E3BnCC,CeyCjD,CEHe,CFOb,AEPc,MAAM,EUHa,CVGV,CAAT,CUHgD,CAAzC,CVGM,AUH3B,CVGa,CFGf,AEHW,EFQT,AYXoE,CVGpC,IUHhC,GVGuC,AUFvC,CAFF,EVIE,GFGF,CEHgD,CFS9C,AEXF,yBFKA,EAM2B;A8BpBvB,Ab3BN,A3BkCA,ADJA,AE1BA,ApBiCA,AgCjCA,AwCNA,A/EfA,AsCyDC,AJRD,EoBKE,ACEA,AOHA,ANEA,ALKA,AlChCA,AaiBA,AjB7BA,AUCA,AtC8BA,AwDDA,A6BDA,AKJA,A5DLA,E8CiCE,AChBA,ApCFJ,AUeI,AiCdA,AhDnCF,EkCuCI,ACDA,AvC3BE,AaiBA,A7CEF,AoBXA,AsEKA,CpBeC,AOHA,ANEA,ALKA,AwBnBA,Cd4BG,AxCpDR,AkDHM,AxBmCA,AEFA,CiBHQ,AGQP,ACPA,AvDTA,C8CiCG,ANbF,AFvCV,AZ6BU,A1BVA,CwCoBR,AJIS,AtC5CT,AUCA,AkB6BS,AkCLJ,A5DLE,CoCwBG,AlChCE,A8BqBF,ANHF,CoBuBK,AxCpDb,AhBmBW,AoCUX,A1BVW,CuCkBC,A5BHd,AzCJE,AoBXY,AUAL,CuCkBM,AHMA,AlChCE,A8BqBF,A1CbA,A4CWA,CI9Bf,AvB4BkB,AuCOd,AhDlCA,A0B+BY,ANHC,A1BVD,CAAP,CyCmBP,AHtCF,AhDmBkB,AiESA,CxCAG,AuCOF,ACPA,AvDTA,C+CiBC,ANEA,AjCtClB,AwBgCkB,ANHC,A1BVZ,CuCkBP,AQDmB,AXOnB,A5B1CE,AkB4BkB,CqBOF,AzCnChB,AhBkBkB,AoCUD,A1BVC,C+CiBpB,AXOqB,AlChCE,AoDwBrB,AhDlCA,A0B+BmB,A1CbV,A4CWL,ARDS,A1BVR,CuCkBe,AHMA,AlChCE,AJZxB,CiB6ByB,AjB7Bb,AEoBW,CeSG,AWCD,A1BVlB,CoCwBkB,A9B1CvB,A0B+BW,A1CbY,AUAzB,C8CiC4B,AxCnD1B,AhBkBE,AiESsB,CTwBG,ASxBF,ChBS3B,AHMA,AtC5CA,AUCA,A+C4B0B,CJDtB,AnBKyB,ANHd,A6BDC,CJAhB,Afe8B,AtC5Cb,AQEf,AECA,AwB8BI,CIWyB,ArBfZ,AwCAY,C7BCE,CoBuBE,A/BxBnC,EqBemC,AlChCpB,AIVN,AEDT,AkB6Bc,AkCLT,Cd4BiC,A5CzCA,C4CyCV,AtCjD1B,AoDqBsB,Cd4BtB,ApBvBsC,CpB7BxC,AoB6BA,ClB7BA,A+C4BwC,CnBexC,AmBfyC,C/CxBvC,A+CwBsC,CnBeG,AmBf3B,CrDjBD,CiDgBX,AjDhBJ,AqDiB6C,EJC7C,MAFI,A3C3BJ,AoDwBK,CLIiD,CJEtD,A3CzBE,A+CuBqD,AKJb,CLIY,CAAtC,CAAhB,CJDI,EAIJ,ASPK,CAAL,EAAmD,GTG/C,EAKJ,E3ChCA,EAME,K2CqBE,EAKK,I3ChCT,EAMa;A+BgCd,AZvDD,AhBmDA,AwDDAhB,A/CkBA,AGTA,AgCbC,AOGK,A9DZL,EmDcC,AjDtBA,ApCoBA,AwEhC2B,AvB6B3B,AUGA,AnDCA,AJDA,A+DKA,APPA,CyCGC,C1BMC,ALKA,AtC7CF,AwDsCE,AaJA6B,A7D9BA,AEHF,AlBoBG,AsEKD,CtERA,C6DiBI,ApCLA,AoDIR,AXnCO,AlFmCD,A2DIA,ACNC,COQA,A0BNA,AXrCD,CpBgDI,AlChCF,AJbN,AUCA,AwBiCM,A4BRE,C1DbD,AhCoBA,A4FAO,CrBON,AfTA,CyBIG,ArFFX,AwEhC2B,AbgC3B,ACFS,C5DET,AwEhC2B,AbgC3B,AOCU,ANHF,C5B/BR,AUCA,AgDFW,A9BgCX,CyBIc,AfUA,AlChCd,A5BqBA,C0DAa,ClCjCX,AUQA,AlCyBY,AoDHC,CUcE,AlChCF,CAAf,A0DakB,C5BQZ,ACIN,CkCJF,AzCHqB,C5DEnB,AiDHqB,AUGrB,AvDAO,A+DKY,APPC,AkCLC,C9FOrB,AgChCE,AqEiCkB,A3DzBlB,AiBwBF,ACFmB,CyBII,ArDlCrB,AUQA,AkBsBa,CeSO,A1BVE,C0BWpB,AmBfiB,CtBzBM,AZ8BF,C5B9BvB,AUQA,C2C0B0B,AblCD,AxCAzB,AUQA,AsDwBE,CAA8B,EpCFnB,CUciB,AtC5C9B,AqEiC4BC,A3DzB5B,C4BoC+B,CAAD,AE5CL,A9BQnB,AkBsByB,CUchB,AE5CU,AvB6BQ,AoDIf,CrGDpB,AiDHoC,CoCKtB,ArDlCL,AqEiC0B,AzCHrB,CUcwB,A0BZlC,ChGAJ,A2DAA,C0BEwC,AVKlB,AfTkB,AoCEK,ChEjC7C,A4B+BA,AkCLqB,CnBgBjB,AhBTJ,CVHwB,APrBtB,AoDiB4B,ExBmB5B,ArBfF,APrBmB,GiC+BG,AqBPlB,CXEU,CVQV,AjClCF,AsDwBmD,ChGArD,CqFEoD,A3C1B1B,AiBwBR,CgBOI,EAIlB,EUTJ,ESTqB,CAAnB,CnBcoB,AhBPtB,EgBYI,AjCpCF,AiBwByB,KjBxBW,IARtC,OiCuCsB,EAMlB,yBANkB,EAOlB,CAPkB,CAApB;AFCJ,AhDnCA,AoB6BA,ApC3BA,AWmCO,AqEXP,AvDTA,EwCkBE,AOHA,A7CxBA,AaiBA,AoDIA,A7EbC,AoCUD,AoCEA,EhBoBE,ALLA,ALHA,AtEZA,AiC3BA,ADJA,AUQA,AiBuBA,AnDCA,AJDA,AgBSS,A+CJT,A2BZA,E7CII,AoDIAC,AnCAD,A8BDC,CtBOD,AOHA,CDgBC,AChBA,AXQE,AlChCF,AsDdA,AlFmCE,AJDA,A0FPA,C1DbD,ApCoBA,AiC3BD,A2ByBC,AoCEE,ChBoBD,A/C/CD,AkCgCC,COEC,AOHA,AtBHL,CeMM,AOHL,ApCHP,AmDDc,CNlCD,AvBuCA,CaeC,AChBA,AXQE,CUQZ,ANbW,AtC3Bb,AaiBe,CyBUV,AOHS,AoBHE,AXnCV,A/BmCG,AvDDO,C4EoBD,AVRE,AHPF,APPf,CcSgB,AtC3BA,AaiBE,AkBQF,A2BZE,CbWD,ANWA,AvCnCjB,AiEqBmBD,AXnCF,AtFkCE,CsEOD,AfNd,CQIO,A2BZU,AEOA,CrBeD,A0BdE,AlCIF,A6BLE,CtBOD,A2BNEC,C1CAN,AvDDO,CJAtB,AIAuB,A0FPA,CJ3BnB,AlFmCkB,AsFRE,C1EgBQ,CpBTR,AiDHE,AkBQjB,A6BLX,C/CH6B,AzCIF,CYS3B,A+CL4B,A2BZP,C7DpBnB,A6DqBE,CbU0B,AXQE,AtEZ9B,A8FNG,CbU0B,AXQE,A+BXjC,A1CA0B,CWWQ,ArCvCH,A0B4BJ,AvDDR,CsEOc,AtEPE,CsEOD,CJKG,A9DXnC,AYSK,CkDEyB,AXX5B,CsBGJ,AXQiB,ArBfW,CAAV,A7CGC,C6EIoB,AhCPE,A7CGA,CsEOzC,AOHwC,AXQE,AXVtC,CQGO,COE+B,APFxC,COEyC,AOHA,A7EJxB,CAA2B,C6EI9C,ANWE,CDR4C,AoBbzB,CbU0B,AXQ7C,AwBlBoB,CpBatB,AoBbqB,CbU4B,AtBFpC,AmCRR,CpBa6C,AOHlD,AtBFc,EeKsC,AOHA,A7DMpD,A0EhB2B,CpBa3B,AtEPmB,C6CHD,AUKd,AvDFF,CsEOqD,AzBVvD,EhBxBE,AbqC2B,CuCRP,AmCRW,CAAC,CAAD,CAA7B,EnCQuB,EmCRa,EnCOpC,CvCSJ,GuCPI,CvCQJ,G0ElBqB,CnCUZ,AmCVP,G1EkBK,CuCRH,IAAa,SAAS,CAAC,AvCQ3B,IuCVI,CvCUuB,GuCPvB,QvCMJ,CuCNa,CAAC,EvCQd,EuCRI,EvCQA,EuCRkB,KAAK,IAJzB,CvCYc,iBAHX,EAG8B;A0D1CrC,AzD6BM,AiCwBN,AMxBC,EyBGC,AjDrBA,ApCoBC,AwEjCD,AVIA,AjB8BA,AIJA,AoDIA,A1FjCA,AgDqCC,AqCLD,ChGFA,A2DAA,CeSE,AOHA,ANWA,ALHA,AQ3CJ,A7CKI,AkC+BA,A2BVA,EdyBE,AChBA,AoBHEC,AXnCD,AtBiCD,A4BCE,CXCD,CXMG,AJKF,CWRC,AXQA,ArBfA,A5BCO,C2DsBN,ALLA,ALHA,A+BXE,AlCIF,ACNA,A0BJA,CpBYG,AWNF,AblCT,AVIA,AnDHA,AmF2BS,CdyBC,AKnBA,AfWJ,AwBjBE,CnBoBG,ALHT,A+BXW,APNX,CpBYY,ACQZ,AvCnCU,A0CXd,AXqCM,CacS,AKnBA,CLmBL,AKnBH,AfWS,ClChCC,AiEqBFC,APNE,CTMC,AlBKR,ACPQ,CnBFC,A5BCb,A8CQK,CacS,AKnBA,AvB9BlB,Ab0BkB,A5BCO,C2DsBN,AlBjDP,CmBiCQ,AtEpCpB,AwDsCI,A6BNkB,ChBoBD,AChBA,AIHA,AfWA,AlChCA,AzBZT,AwDsCC,ACPQ,CaKD,A7CxBE,C6CwBpB,ATrCF,AwBiCyB,ChBoBD,AVRA,CeXC,A1EjCzB,AU8BI,A8CQa,A2BXQ,CdyBP,AKnBQ,AblC1B,C7DCkB,AU8Bc,A2EEH,C/CHZ,A6CFW,C7CErB,CyBUyB,AJKF,ARzC9B,Ab0B8B,AtC7B9B,AwDsCsB,ACPlB,CYqB2B,ANZ3B,CMY4B,AKnBhC,AjDrBe,A0BTQ,AnDHA,AyD+BS,A4BCP,C1BYQ,AlChCA,A+B0BR,A6BNU,CXCD,CLmBC,AKnBA,CfWrB,A0BZW,ChBoBP,A5CxCH,A+B0Bc,A6BN7B,CXCsC,AjDrBtC,A+B0B8B,A2BX5B,CxBiBqC,A+BX1B,ChBAb,A1EjCA,CqEoDyC,AqBnBf,AlCKD,CaciB,AKnBA,A1EjCX,AwDsCG,CacS,AbdlB,CkBLmB,CAA5C,AfW6C,ArBftC,AoDImBC,AlCKW,CacS,ANbd,AzBVhC,CoCI+C,CLmBN,ANXrC,AJG4C,GAA9C,EUQmD,CNbrB,CMauB,CNVnD,EMUsD,AbdR,CkCLxB,CrBmBe,CAAvB,AqBnBiBH,AlCKkB,GacW,CAA5D,EAA+D,CNVnD,CAAC,CAAD,CAHgB,A2BNN,AlCKW,CkCLxB,C3BUT,A2BVJ,CAFmC,AlCO+B,CkCJpE,AlCI2B,CAArB,GOC4B,CAA9B,APAI,KADF,GAEA,CAHF;AUPE,AzCjBL,A0CZD,A/BMO,A6CAP,AzCaM,AhChCN,ACyDA,AwCbA,E5DEE,A+EjCA,AsBkCF,A1CIE,AtCRA,AGXA,A2CqBC,EOIC,AORA,AIHA,AVcA,ALHA,AE9CF,AzBQW,AQ4CT,A5CnDF,A+EDG,AlFkCD,AJDA,A0FJA,E5BME,A7CHA,E2DsBE,ANRA,AORE,AIHA,AfWF,AE9CN,A7DCA,APgCM,AgEAA,CSFQ,AHeP,AJAA,AfMA,AJ/BO,A/CYP,AoBZA,CwDiCC,ANRA,ACGA,ALHA,AJXA,CmBAG,ANjCX,AjBGE,AI8BO,A7CHA,AyEHA,CpBiBH,AJAA,AnBzBF,A3CaM,CkEYR,ACGS,ALHT,AE9CF,A7DCA,AwCoBkB,A3BAlB,C6Dcc,AVcZ,ATdU,A7CHA,CbEC,AJDP,CsEaQ,AJAA,AS5Cd,APDE,A7DCA,AyD+BY,CW/BF,AjBGV,CuB8BgB,AvB9BhB,AI8BU,CQWV,AWXiB,AtC3BO,A3CyBT,AgEAA,A0BJA,CTMC,A9BiBhB,AuCvBgB,CjBEd,AIOiB,AIHnB,AhEHiB,CwDDQ,AL9BzB,AVIA,AfG4B,ApCN5B,AU8BkB,CiDcC,AE7CnB,AVIA,AP+CmB,A5ClDnB,AwCmBE,AiBYiB,CaKG,AbLF,CjBZQ,CmByBN,AvBtCU,CyBPhC,AVIA,AfGiC,ApCNjC,AHgCW,CyEIe,AFpC5B,APDE,A7DCA,AP+BwB,C6EKG,AnBjCrB,AfGsB,AmB2BlB,AEFK,CW/BQ,A5BmBrB,AiBYwB,CFEV,CeGM,AXQM,AE7C5B,AzBOsC,ApCNtC,AwCmBiC,C8BiBF,A1Bc/B,AlCpBF,CV9BQ,CsEoC2B,AXQF,ClEb3B,CyEFF,AL9BK,ANkCe,CeGc,AXQxB,AvBtCe,ApCN3B,AuDiCuB,AEFW,CSFQ,AXIpB,CeGA,AFpCxB,AjBGE,AI8BU,A9DF0B,C6EKpC,AXQqC,AE9CvC,AzBQkD,A3CyBX,AgEAA,CW/BJ,AbiCN,CvDjChB,CoCMR,A+CqBI,CjBEL,Af1BgB,A1D4BmB,A0FJI,C5BM/B,AEFgB,CSFwB,APeP,A3D7C7C,CuDkCmC,CEFY,CEaC,CwBjBvC,CjBEL,AXIQ,AEFK,CEaf,AJXE,A4BN+C,CjBEQ,AiBFlD,CAAP,C1BIoD,EhEAf,EyEFnC,AzEE+C,CgEA7C,CSF2D,MzEE1B,EAAsB,QAAtB,CAArC,EAAsE;AgCjB1E,A9BPA,AwEPA,AlC+BA,AGvBA,AZsBA,AXVC,A8BkCD,C9BjDoB,CqDyBlB,AFkBC,Ab5CA,AbyBD,AoDOF,AXrCG,AvCqBD,A9BWA,AyEHC,AEID,CN1CA,AlEeK,AsEgBL,CpBwBE,AWXA,A/E3BJ,AyEPE,APCE,A5B8BE,AWqBF,A5ClDA,EkE4BE,AGuBC,A/BxBD,AiBKA,A7CHE,AbEF,AJDA,C4FAC,CXEG,ANlCR,AXgCM,CjCFC,A2DFA,CjBEC,AHeA,ApEtCV,AwEPA,A7B6BM,AiBKI,CAAC,A7CHE,A2ECF,C7CZC,A3CaA,AJDA,A4FAA,CnBFC,AHeA,AK7CX,A5BoBW,A3CaA,CqEHX,AjCCc,AsBGF,AfdF,A9BWI,C8BXd,A/CYa,AgEAA,A4BAA,CtBaX,AI7CJ,ACCI,AiB+BF,CpDDiB,CkC/BnB,AZkCc,A/BJd,A6DEkB,CXEG,AlDJF,AgBVA,A/CYb,A4FAa,C7CZC,EkCcI,ANjCpB,A9B4BE,A+CGgB,CjB/BlB,AX+BI,CnBHM,AdCd,CgBVyB,A6CYvB,C7DFsB,AgBVE,C4BnBtB,A5BmBqB,A6CYE,CjB/BvB,A5BmBF,CecY,A8BFe,C3EDG,A2EC9B,C9BEkB,A7CHa,C0D9B7B,AvEgCE,AwFD0B,CxFCC,CyCJT,CAAC,E8B5Bd,AbiCe,A1DDpB,C0DCqB,A7CHK,C6CGN,A7CHxB,AbEqC,C0DCzB,CalCZ,CbkC6B,CmBAc,CACvC,CpCNkB,CAAlB,AiBKQ,CjBLZ,AzCII,C0DC+B,CjBLE,GiBKzB,CAAR,CA5B+D,CA8B/D,ImBFuC,EAEvC,MAFuC,EAGvC,GAHuC,EAIvC,MAJuC,CAAzC;ATeE,AfvCN,AvDHA,AwCFO,AYEP,A5C0BO,AUXP,AnBWO,EqEaJ,AI9CsB,AjCmCvB,ADHA,A8C/BA,AvD8BA,AgBVA,A9BWA,A8CSA,EaaG,ACjBD,AXQA,AxBxCS,AGyBT,ASvBJ,A8B+BI,A1ELS,ATAA,AyFJT,AEIA,ChBiBA,C7CnBI,A3BGF,AJDA,AgEAC,C/CDA,A+CFD,CaOE,A9CNE,CyCkBM,ANJP,AkBPA,ArBGA,CvBTC,AE3BS,CkCiDR,AFtDc,AjCmCvB,AILS,AdCE,AdCF,AyEHA,ChB7Bc,A3BqBb,CmBwBC,AxBxCS,AKgBT,A9CYS,A8DQb,ACRI,CEYC,AxBxCS,AYEvB,APcY,A/CYE,C4EqBC,ApCtBA,AE3BS,AKgBtB,CPWc,A4CMZ,AnFJF,C2EoBe,AVTA,AxDZS,AVAT,CkEYC,CkBPC,ArDPE,AgBVF,A9BWA,CcDG,AgBVF,ArCYS,AODT,AyEHhB,AEIgB,ChBqBC,ACjBA,AXQA,AzBVnB,AILmB,A7CGf,A4FAe,ChBqBN,AVTX,AQ7CqB,AjCmCX,ADJK,AKDG,A+CGF,CRKhB,AnFJK,A2FDL,CfIoB,AXQA,AQ7CC,AhCKH,AtC6BA,A2DOb,CGIgB,AnBxBA,A9BWA,AbEF,CwEoBG,AlCjDS,AKgBT,A9BWA,A8CSX,A6BRW,ChBqBC,AlCjDS,AKgBX,CmBwBG,AnBxB1B,C6BiC2B,AVTA,AzBV3B,AxCDa,CyElCU,AtEkCnB,AHAU,CyElCS,AjCmCJ,ArCDQ,CwEoBG,AVTA,ArBfX,AnCGd,AqDQE,ClBXL,AdCS,C6CuBa,A7CvBU,AgCUb,C3DPjB,CsC7BgB,AzB2BH,AhBEjB,CuEeI,ApEf6B,CoEgBjC,ANLE,AxBxC2C,AzB2BT,C2DsBC,A7CvB1B,C6CuB2B,ACjBpC,AXQoC,AnCdtC,AdCiB,CAAR,AhBEgB,C4EGe,AXQA,CUSC,AVTvC,CjDbwC,A2ECA,ChBqBlB,AVTmB,A0BZA,CxFCvC,CsC7BgB,AqBoCc,Eaaa,AlCjDS,CkCiDR,AbbX,CaaY,A3EpBjD,A8DOO,C9CT2C,CuDiB9C,AvDjB+C,A8CSX,CaaY,A3EnBhD,A2FFgD,CpBkBpD,AoBlBqD,ChBqBN,AgBrBK,CAAV,ClD5BtB,AzB2BoC,CyB3BnD,AzB2BoD,A2ECA,C3FE/C,C2EmBiD,AJLvD,AvEdO,E2EmBkD,AJF7D,GIEgE,AbbX,C9DPrD,A2FD0C,ChBqBK,AJL3C,AoBhBF,ChBqBsB,AbbgC,CSYxD,AvDrBkD,AhBI9C,A8DKG,CAAP,CaasE,A3DtBA,C2DsB7D,C3DtByC,C2DsBuB,A3DtBzE,CuDiBI,EAKJ,EvElBc,MAAV,EAAgB,OuEahB,EAKa;AtE/CnB,AwCAA,AYAA,AqCDA,AtFGA,ANkBM,AWQN,AwBHM,AgBuBN,AabC,EUXC,ADyBA,ADPA,AGhDA,AhBKA,AlB2BA,AKFC,AuCQA,AaFH,AlELE,AgBVA,A9BYA,AhBGM,AyFPL,AEIA,EXMC,ANtCA,AlCkCA,A5BvBA,AuBTA,AL4BA,A3BGC,C2BHA,A3BAD,CwEuBE,AJCE,AKlBF,AXQA,A+BTAI,AnCAA,A9DHA,ACGQ,CwENP,AIOA,CDiBC,AKfA,AjBNA,CiBMC,ANtCD,A9DWA,AuBTA,ArCuBQ,AgDLP,A9BYA,AiBFO,C2CMN,AXQA,AhEvCV,AyELS,AnC+BC,A3BpBD,AuBTA,A0BiCC,A/BLR,C0CDS,AIOA,AXQA,ARxCT,A3B0BS,C0CDC,APeA,ARxCV,AzD+BkB,C4ECP,CIEC,AfMJ,ArDjCN,AIqBF,AjBAY,CyEHC,AQSX,AfME,A1BbS,AvCIQ,A+DHR,CSHR,AIOS,A3E/BhB,AsC0BgB,AJ7BZ,AL4BF,CkDQe,ApE3BD,AbqBC,ACGT,CwENU,AIOR,AXQQ,AhEvClB,A+F8BkB,A/DLZ,CsCwBe,ApCpDH,AL4BC,AgBVjB,AbUwB,CuCDN,AjCAD,ANCb,CwB1BJ,AuC+BiB,ApFxBf,C2D4CA,AKnBkB,AnBhCpB,AI+BoB,A5BLK,CuCDJ,AIOjB,CFpCF,A5C8BF,AiCEM,CWhCgB,AsBmCL9B,A7DjCf,ApC8BE,C8DGoB,CSYC,CElBC,AFkBA,CElBC,GXMnB,CISuB,CKG/B,ALHgC,AnEnB5B,C0EIJ,APe+B,AnEnBS,CmEmBpC,AS5CF,AjBIF,A3DqBI,A+DU8B,CWNC,AFkBA,CElBC,AE7BD,A5EyBQ,CyE8BxB,AdnDnB,A3DqBI,E0EImC,A1EJK,E0EI5C,CD0BwB,CC1BmB,CXMvC,CWNyC,CAA7C,AE7BE,AbmC4C,EWNE,CFkBC,Ab3CjD,Ca4CE,CCOA,GAAkC,AyBpBnB,EAAe,MAAf,CAAnB,E1BYmD,EAE/C,ICMA,EDR+C,CCQO,CDLtD,CCIF,EDPiD,EAI/C,MAJ+C,EAK/C,gBAL+C,EAM/C,yBAN+C,EAO/C,CAP+C,CAAjD;AjB1CF,AjBCA,AUeC,A9BYA,A8CSD,AdTA,AyCJC,EpBgBC,AEWA,ADAA,ArEnDmB,AsC2BnB,A4COA,AaHF,AlGVE,AmCKA,A9BGC,EqEJC,AGwBC,AVTA,ARxCD,A9BJA,AfYA,AwBPJ,ADFI,AEKA,EgCoCE,AEWA,ASjBA,AgBHA+B,A/DLA,AlCEA,AgEAC,CMYA,AEWA,AtCzBA,CuCDG,AXMF,CSoBC,A3CvDD,AUQA,AvCiBC,AkDOA,CuBuBC,ASjBC,AzCPD,AZ/BD,A0BIT,AhBIS,AvCiBC,AmCKA,CsCyBR,AtEnDmB,AwDAV,CeyBG,AvEzBO,A4D+BP,CQSZ,AvEnBW,AmCKX,CnCLO,C0EIQ,AQSD,AvBlCD,AlB2BA,AZ/BX,AM8BW,CoCcC,A9BbA,Ac3BhB,AjBCA,ArC2BgB,CsEYd,AvEnBe,A+DUE,C5D/BE,A0BJJ,A0BIjB,AvDqBS,CkFaW,AgBHD,AjGHA,CyEHG,AvEzBD,A4D+BC,CWNC,A1EJF,ACOA,CyEHC,AjCDH,AZ5Bf,AqEmCgBD,A3D3BhB,AvCiBkB,ACOA,CyEHlB,EnCrBoB,AvCiBC,A+DUE,C5D/BN,AHqBA,AkDOrB,C/C5BqB,AF4BF,AiDAQ,CjDAC,CDPC,CkFanB,AlFboB,CAAT,CCOF,C0D5BR,CuBkC0B,AViBnC,AbnDqC,AuC+BP,AlGVE,ACOA,CiFMI,AgBHLE,AlGV/B,A+DUM,CxB3BJ,EoBJO,AT4BX,CS5BI,CuBkCiC,AhCNG,GjDArB,CiFM4B,AgBH3B,AjGHd,CiFM0C,CgBHhD,AhDHA,CgDLqC,CASrC,AhDJ8C,QgCMxC,EAAwD;AFWxD,AROL,AlDlDD,AGHA,AaEA,AtCqBC,AgDJD,A9BYA,AiCmBA,AmCvBM,AKAN,A5DTM,EwCwBJ,AJAC,AhExCD,AwDAC,AlB2BD,AKHA,ASzBuB,A2CiCzB,AlEPE,A9BKM,AgDFN,A2CDA,ClC7BA,Ce2BE,A5CvBA,ADLA,AUQA,AJqBA,AlCEC,AgEAA,EaGC,A9CNA,AkBGA,ChDEO,CwELL,AQSA,AnBHA,A/BNA,CuCeC,ASIO,AlCpBP,AhBtBD,AiC6BC,A/BNA,AsDAO,AOEP,A9DXO,C+CeN,ArCJA,AXzBD,CyBHgB,ApB2Bd,AjCIQ,CwELP,AnB1Ba,AL6Bb,CqBYV,ARRQ,CeDA,AfCC,A/BPL,ADTA,CmDkBS,AzCPA,ATFA,AkBGA,AnBZO,CUWN,ASCd,EJJA,CiBQQ,A5BNS,AjCIX,CgFIA,ApDhCJ,AEuBE,AGCc,EoB3BK,AQiCN,CWPI,AjCFJ,AXrBG,A5B4BS,CwELP,AnB1BC,ApB2BD,AJVlB,CCSmB,AGCN,C4BMI,A5BNnB,AJV2B,CgCgBP,A/BPtB,EAA2B,A9BKrB,CqD/BiB,AQiCN,AuBPb,C/B1BmB,AQiCG,A7DFW,AoFLD,GNmBhC,CACJ,AjBb8B,A8BLG,CAAC,C/DzBhC,CwDuBE,CZAiB,AXOa,CAAC,AuBPQ,CZAJ,EXOT,CAAS,CeD/B,AfCsB,EWPT,AIMS,AfCY,EWPK,CMmB3C,CjBZ0C,CiBc9C,AanBiC,CnBFZ,AmBErB,C9BKiD,CWPI,GMmBjD,EAGJ,AjBfuD,CWPlC,AXOmC,CWPtD,AIMM,AfC+C,CAAzB,CeDiB,AEa3C,EAIJ,CjBhB8D,GeDtD,EAA+C,AEanD,AjBZa,CAAT,CiBiBR,EFlBQ,AfEA,EeFqD,EEazD,CjBXS,CiBgBP,EFlBE,AfEQ,EeFqD,CAA7D,CfEY,CeFoD,AfEnD,CeFb,CAAJ,CfEY,CeF4D,AfEnD,IAAI,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,MAAM,CAAC,CAAD,CAAN,GAAY,IAAxB,IAAgC,KAA7C,CAFV;AQUP,ACYD,A1B5BC,ARzBD,AtCuBA,AgBtCA,ACuDO,A4EZN,EpBuBC,AOAA,AnFtBA,A+ElCC,AnCiCD,Ac5BA,ApB2BC,A9BED,A4DlBA,AqBeM,AvDTN,CIQA,CuCCE,AGuBA,A/C7CA,AsB4CA,ApBtBA,AfcS,AfTH,E2EkBJ,AKdC,A7ENC,AiFHA,CbyBD,AOAA,CFnBC,AfEA,AuBRA,CTuBC,AzBDA,AWdA,A5BPA,AJVA,C2CSC,AjCEA,AH5BV,ApC+BgB,C2EkBZ,AJEO,AOAA,AnFtBT,AKEe,AoFLG,CbyBR,AOAA,AnFtBV,AmCHU,ADTA,C2CSC,AXSH,A/BTG,ADTA,C+CeC,AfGH,CUgBI,AOAA,AvCvBA,ApCCE,AHEP,CuEoBH,AOAA,AvCvBS,AH5BhB,ArBwCyB,AfTH,CwELL,AIMA,A9CNb,C0CAc,ADyBA,AKnBV,AEmBU,A1CnDlB,AN0BkB,A3BGE,AiFHO,CvBSjB,A9CMR,AqEdG,CbwBe,AOAA,A5BHhB,CvDnBF,C6EHoB,A7EGpB,AkEMiB,A7DJS,A6BdhB,C2CSW,ADyBA,AOAA,A5BHA,AlDjBM,C6BdL,CAAZ,CgCkBW,A9CMd,C+DUkB,AjBhBH,AhClBG,C0CkCC,AOAA,AMzBR,AvDTR,C2CSM,ADyBW,AzCzBzB,AsDCW,CvBQI,A/BTW,ADTA,CgCkBF,A9CM1B,AfV0B,A6BdhB,C2CSoB,A1CA5B,A9BKM,CwELO,AtBsBb,ArB/B6B,C2CS7B,AMyBF,AjDlCU,C0CkCV,AVhB8B,CiBgBI,A/DVjB,AqEdG,AvDVc,C0CkCC,AOAA,AnFtBnC,AyFFqB,AvDVX,C0CkC0B,CVhBF,AhClBG,CiDkCC,AnFtBtC,AkEMmC,AhClBzB,C0CkC6B,A1ClCvC,CiDkCA,CPAA,AVhB8B,CiBgBY,AjBhBH,CUgBI,AVhBb,CiBgBc,CPAC,AOA7C,AjBhB0C,A9CM1C,CwDUA,AaxBa,CNwBkC,AMxBd,CbwBe,CVhBF,A9CMd,CpBZhC,AyFFa,EvBQoC,E9CMZ,AqEdG,CrEcF,AqEfpB,EACyB,CvBQY,CAAC,CAAD,CAAzB,G9CME,AqEdkB,CvBQY,A9CMd,AqEdG,KvBQlC,CAAT,A9CKH,AqEda,EAEf,CvBQK,IuBVU,CvBUL,AuBRJ,GvBQO,AuBVE,EAGf,EvBOiB,CAAC,AuBVH,CAGX,EvBOS,CAAS,GuBVP,CvBUW,AuBVvB,IvBU2B,CAAC,GAAL,CAAS,CAAT,EAAY,MAAM,CAAC,CAAD,CAAN,GAAY,IAAxB,IAAgC,KAA7C,CAFV;AQSR,AHlCA,A3BcmB,AKInB,A7BgBA,AgDbC,A4BAD,A9DZC,CUKD,CiCIG,APcD,AS5CA,AjBIF,AuCgCA,A5DjC2B,AiDJzB,A/BuCA,AtDHO,AgDHP,AoCHM,ETwBJ,AJEA,AOAA,AEhBC,ArFND,AuErBJ,ACZI,A3BmCA,AblCA,AuBoDA,ApBvBA,AGCA,A9BEA,AJDA,CiFGA,CLkBE,AVTA,A+BRAC,AnCIC,AuBXE,CpCGF,AoCHG,Cb0BA,AKnBF,AEoBF,AhD1BI,C6CuBD,AhFpBA,AwEjCD,AVIR,AjB+BS,AblCD,CwCDC,AxCCA,AqEmCC,A7FHA,AiFJA,CTwBN,AKdO,A5CpCgB,AiDJzB,A/BuCA,AxBRW,AGCF,AlCCA,AiDAA,CuBuBG,AL3Cd,A9BT2B,AiDJzB,A/BuCA,AnDLU,A6CDA,AoCHF,CYOCtC,AZPD,CnBeI,AzBTV,AVLY,AsDDN,Cb0BO,AtCxBF,AeCA,AoCHP,CjB7BJ,A6BoCU,AhDJP,CRGU,AwDCFuC,C/BQG,ARxClB,AtD4BoB,A6CAF,CmBhCA,CIuDI,AvBvBF,CuBuBG,AcxDrB,A/BuCA,AvDNE,CwEuBkB,ANXA,AoB7CpB,A/BuCA,CiBiBE,ANXmB,AhCbA,AeCA,C4BIC,ApCDA,AwDCb,A5DjCgB,AH4BH,COIC,CwDCzB,A5DjC2B,CwCiCA,AjFHvB,CmFuBsB,CAAC,AbZT,AzBTd,APJyB,CtCEC,AmCHE,AGCF,CHDG,CM3BN,AkBmCzB,CWM+B,AtC3C7B,ASEuB,AN2BK,AGCC,CgCa/B,AtEXE,AmCHY,AkBEkB,CMMhC,AxBRmC,AkBEF,CiBYC,AtC3CD,AM8BX,CAAD,CAAnB,E2CKI,ASrCN,AvD+BE,CH7BmC,AqB+BrC,CmBhCgB,AxCCsB,CwCDP,AkBD/B,ArCiCyC,C8BwBjB,A9BxBkB,CmBhCxC,AbsCS,CwBkB+B,AxBlB1C,CNN6C,CMM/B,CAAd,ANN+C,EMMhC,CwBkBS,A9BxB0B,CAAlD,C8BwBkD,COzDlD,ArCiCqD,EAAE,C8BwBD,A9BxBtD,C8BwBuD,CAAD,AnDvDrB,AqB+ByB,C8BwBlC,AnDvDiC,EmDuDE,EnDvD1B,CAA6B,GmDuDtC,EAA2C,AnDvDlC,CAA/B,KmDuDsB,CADtB,EAEE;A/C3CN,AmCFA,ATnBA,AlByCA,AwBCA,AlCZA,C4B9BA,CkB6DG,AhFpBA,A8DzCqB,AuC4CxB,A5DjCE,AH4BC,AlCCA,AqFJK,CzFGN,AIRA,CwEgCE,ANXA,AlC/BJ,AoCZI,A3BmCA,AblCA,AfUA,ANXA,A+EFA,A/BuCA,AxBRA,A3BGA,A6CDA,E4BIG,AEqBD,AElBA,AgBHAC,AZRM,CAAC,CnBgBL,AoB7CA,AlFkCA,C8DWC,ArDhCD,ANXA,C0EsCG,ApE3BF,ANXA,AHgCC,A6CDA,AoCJG,C9BUF,CxBRC,AsDFC,CN6BA,AxExDT,A+EFS,AvD+BA,AsDFA,CxEhBT,ATmBgB,A6CCN,AoCJD,CJWG,AfKZ,AmBhBI,CYQQ,A1FnCD,AgDqCC,CiBiBC,AOEX,AlE7CU,AkBkBZ,CyCyBc,ANXA,AnCdA,CyCyBC,AShBC,AfKhB,ARpDJ,AuC4CiBF,A1FnCb,C0EsCiB,AvB/CrB,AH8CW,CiBiBM,AcxDT,CdwDJ,CxC1CJ,AiEuBqB,CAACG,A1CEE,CiBiBC,AjBjBd,ANNc,CAAC,EqCjCE,CAAxB,A/BuCyB,AxBRzB,CwBQ0B,AxBRA,CkDSpB,AKxCqB,CvD+B3B,ClBlBA,CAxBc,A0CkDgB,C0BCI,ApEzBlC,CoEyBmC,CgBHtB,AhDJoB,CAAC,CgDItC,A1CEuC,ANNF,CAAZ,CgCOa,ChCPI,CMM/B,E0BCqC,E1BDD,CiBiBC,CAC1C,GjBlB8C,CNNC,CAAC,CAAC,CgCOjD,A1BDyC,E0BCe,AhCPJ,CAAL,CMMO,ANNnC,CMMd,CNNmD,EuBuBd,CjBjBiB,CiBmB3D,AjBnB4D,ENNzC,CAArB,CMMkE,EiBiBtB,EAG1C,CjBpBqE,GiBiB3B,CjBjB5C,CiBqBE,MAJ0C,EAK1C,aAAa,CAAC,CAAD,CAL6B,CAA5C;AxC1CJ,AyBFA,AUAA,AerCA,AxC+BO,A+C0BP,AvDCC,AlCCA,AqDUD,EoBbE,APeC,AkBPD,AaDF,A1CEG,AtDJK,AgDFL,AoCLK,C9BSN,CiByBE,AKzBC,AEqBA,AtB/CL,AfNa,ASgDT,AfjDA,A7BDA,AwB4BA,A3BGA,E6FGEC,AXrCA,AxByCA,AuBbS,CAAC,CJYR,A9BaA,CsBvBC,ArC1BD,AnC+BO,AoDQN,CmBmBC,ALnDV,AiB2BE,AhDlCO,AiDwBO,CDUd,ArDPS,C3BGC,AiFNI,CZEd,ADgCW,AVrBA,AuBbG,CvBaF,A/BVV,A3BGU,AiFNE,CJYD,AnBCF,A7DNL,AoFPA,ClBjBR,AzBNyB,AuDgCT,CzByBC,AVrBA,CUqBC,ALnDlB,AL8Ba,CpBpCe,AuDgCXJ,AnCIX,CmBDE,AvCnCqB,A0CiC3B,C1CjC4B,A0CiC5B,AhDlCE,CoC0DkB,CAAC,AyBzBF,CvDhCO,AuDgCNK,A7DjCC,CeiDE,CThDU,CeMnC,AfNoC,CSgDR,CqBSV,A9BzDU,CSgDxB,CThDoC,C8ByDR,CAAf,CAAb,A9BzDwB,ANDxB,AiBuCJ,C+BLE,C1CjC2C,CuDgC5B,A5CMiB,CXtCN,A0CiC1B,C1CjCK,AuDgCP,CAbqC,CAgBrC,SbFE;AXPD,AJUK,ArC5BN,AyBFA,AfJA,A1C4BA,ACCO,CATA,C2E2BL,AJSC,A5E7BH,AM7BE,AiEMqB,AOXrB,AnByCA,AxBTC,A3BDiB,AiDalB,CtBjBA,A3BIA,C+CuBE,AiCfA,AvExBA,AuBTA,AkDLC,AxByCA,EmBDE,A5BGD,EFUI,CkBbM,AOaP,AhFpBT,AiBnBQ,AkBiBC,CCnBT,AnBES,C+DuCE,A1EjDT,AiEMqB,AOXrB,AUuCS,CjB5BY,GTNR,CkBiDC,A5CzChB,AoD0BgB,CRed,A1EjDA,AWUE,CmBFJ,ApCqBA,AM7Bc,EiEMS,AhB2CD,AtCvCH,C6DfjB,CPWqB,AOXT,CvBsDW,CkBbnB,CAA0B,ElBaP,AtCvCrB,CXVF,AiEMqB,CAAA,AiB4BZ,ClFlCa,AmDuCM,E+BLE,CVvC9B,AUuCS,EVvCgB,ArB4CQ,E+BLE,GfE/B,EAA2C,AeFP,E/BKxC,CqB5CA,AvBsDuB,CEVqB,CqB5CT,AvBsDC,CkBbhC,EAAmD,AeFpB,EjCeM,CkBbrC,EAAwD,AeFP,KAAK,CfEtD,EAAgE,AlBa7C,EAA+B,CkBblD,EAAmE,ElBaZ,GiCfzD,QjCeqB,CAArB;AyBCH,AnB5CD,A7DvBA,A4FuBA,ALrCA,AlFgEA,AuDJM,C5D9CN,CyEsDE,AHIA,AlCjCgC,AoD2B/B,AaEH,AnCnDE,A1D6CA,A6CFA,AoCFA,CzF5CF,AwFkDE,CPAE,AEqBA,AEjBC,A/ErCH,AwELA,AvBwDE,ApBvBA,AsBYA,EgBHE,AQJA,AoBIAC,E5BAE,AnErCN,AwELA,AtEoCM,AiDSE,CwBPD,AXQA,A9DVA,AoDFO,APAP,AoCFA,CN2BC,AtBhDV,CY+BW,AQJP,A7CzB8B,ADoBvB,AsBYE,CrBhCqB,C+C8CrB,AbbX,AhEzCA,AwELA,A3CiCE,CsBYY,CGXV,APAJ,CQvBF,AvDLI,AwELA,AlBiCmB,CuByBN,AkBjBA,ClBiBC,AtBhDlB,A4BqBkB,CN2BD,AM3BE,CN2Bf,AkBjBe3C,AzCRb,A6BFY,CYUE,C/FpChB,AwELA,AuByCiB,A5CGG,AGXK,A6BFP,CnF1BlB,AwELA,ArB4CqB,AgCbP,EjFIhB,AiFJuB,ChBUC,AjENA,AiFJR,ChBUS,AnEpCvB,AwELA,AW+BF,CnF1BE,AwELA,EtEmCF,AoDFI,CxBrB4B,C9BP9B,AwELA,AtEmC4B,AoDFK,CaQX,ArC7BQ,CqC6BhC,C4BAkB,CAApB,A5CGgB,CnDvCL,AwELA,ArB4C4B,ErBhCL,CAAA,A5BuBhC,CF/BA,AwELA,IrB6Cc,EAAiC,UAAjC,CAA4C,IAA5C,CAAZ;AuBYJ,AVVC,AtEXD,A+C1BA,AkDJA,A/BsCC,ApDRM,AuCDN,AoCFA,EhBUC,AGqBA,AKzBC,AEqBA,A/C9CD,AyBHoC,AUCpC,AiB8BA,AaCF2C,ApF3BG,AkBkBA,A3BGD,AoDFA,EtD3BE,AwELA,A/BOJ,ALGI,AgDXA,A5EkCS,A2CUT,EgBHE,AbRA,CHWC,CgBHC,AiBzCE,AjC4CF,CfjCA,AlCwBC,CkCxBA,C+B8BE,AZhC2B,AUCpC,AmBVW,A9BiCF,CCxB2B,ADwB1B,CyCQD,CAACC,A3D9BR,AgDXY,Cd8DD,CAAC,ClCnDA,C2D8BhB,A7FNE,C+DzBA,A8B+Be,AXzCI,A5EkCO,A8CDtB,ClBtBF,AkBsBgB,CyCQpB,CzBqBE,ALpDA,AxBFF,AjC0B+B,E8CDzB,CgB6BmB,AhB7BvB,CaQwB,AGqBxB,CHrByB,AbRA,I8BjCX,CjC4CZ,CgBH6B,AiBzC7B,E7BSkC,AJmCH,CgBHC,A3DP7B,C2DOmB,AZhCY,CYgCpC,KZhCoC,CAAA,AJmClC;AaGJ,A1BZM,AG3BN,AmBoCA,A/BXC,ArBGD,ANAC,AW5CK,ACsDC,AkC1EP,AauEM,AdRN,AoCFA,AOCM,EpB6BJ,AfrDA,AwCgCF,EhBDI,Ad/BF,ACPE,AxCCA,AUSA,AgDZA,AtE6CS,AqCDT,AGXA,EyCQEC,C5CGC,CcnCL,AmBTQ,AjC4CF,CmBkBC,AJ5DD,A5BgCQ,AZ/BR,AUSA,AvBrBQ,AgDmDA,A6BTA,CXON,AbtCD,AxCCA,AUSA,CkBqBE,EyBOE,Ad/BX,A7BGE,EkBqBA,CyBOA,Ad9BA,ACRA,AxCCA,AUSW,CEsBT,A8ClCa,AjC4Cf,CbVqB,C4BhCP,AxCCA,AqEsCC,A3D7Bf,C8BVA,AkBFkB,AjC4CF,EmBkBlB,ALpDE,A3BwBE,AyDOe7C,C9B/BjB,A8B+BkB,AlFlDhB,CyB2CuB,AZ/BzB,AqEsCmB,AXzCD,AvETS,GoDmB3B,AnDmCgC,CmDnChC,EnDmCoC,EmDnCpC,AJgCE,CACJ,EhDpDI,A6E0CA,CAAqC,CzBvBhC,ApDnB+B,IoDkBxC,C8BgCoB,AXzCA,AtE6CkB,CiFJxC,A5CGI,CiC5C0B,AvB0CxB,EAEJ,CuB5CoB,CAAlB,IMiCE,EAAqD,E7BSrD,EAGJ,aAHI,EAIJ,kBAJI,EAIc;ASiBnB,AUtED,AvCcA,AtCIA,ANiBM,AgCMN,AgBXM,A9BYA,AbEN,A4DFM,EKMJ,AQJA,AEqBA,AEjBC,ANxCD,AnCkCA,AyDOF6C,ApF5BA,AEtBE,ACsDA,A+CEA,APdC,AoCAD,CpCFA,CWpBE,ACRA,AvCMA,ADLA,AUSA,AjCHJ,AiFVI,AjC4CA,EwBRE,A9D7CE,ACsDF,A4EZA,CvBOC,AMxCL,CAAA,AWAQ,CPyDD,AvCvBA,AXzBD,AhBIR,AyEbW,AvF2BK,AgDLA,A9BYA,A+CAA,ARDP,Cb3BT,AdGS,CgD2BE,CAAC,ASpCE,AvETA,CsDiDD,ArDKA,C+DYX,A1E/CF,C4F+Ba,AlFlDI,C4BejB,AsDmCcD,AjFIE,CqDLC,AMxCf,A9CSE,A9BkBE,C8ESK,AFpCT,AhCMF,A5CqByB,C8ESvB,ArCFiB,CAAC,AXzBD,AoEgCnB,AhFPM,AoCUc,CwBRC,AoBKF,AXzCI,AvF2BjB,AkBOsB,ADW1B,AqCDmB,CiC5CG,AMiCF,CvBOpB,AMxCA,AsByCF,ApF5BA,AyEbuB,AvF2BO,A6FMP,CpDCJ,A8ClCf,AvCsBE,AMsBc,CgBJK,A7BNvB,AOZ8B,AiBY1B,CWlCJ,A5E2BI,AgBpCsB,AsCqDF,AWVO,CXUb,CtDjBa,AkBO3B,AF3CJ,CsCqD2B,AuCXvB,C3EC6B,AoCUf,CgBJW,AxC/B3B,CwBmC4B,CAAZ,CgBJc,AuBPA,C7CX5B,AMsB6B,AuCXjC,CvCWkB,CgBJlB,AtBlB0C,AMsBxC,AuCXiC,CjBjCnC,CNwCqC,ALNjC,EAAwC,EjBZxC,EsBkBuC,AtBlBK,IsBkBD,MAA/C,EAAuD;AUkBxD,AvCvBA,AKJK,AhCnDN,AR8BA,AeWO,CPzCP,C8B0BiC,AsDoCjC,ApF9D6B,AdgD3B,AgDLA,A9BYA,A+CAA,EKME,AQJA,AFpCA,AvCKA,AkDLA,AlEoBS,AiCwBT,AUGA,APdA,AoCAA,EKQEE,AlDnBE,A9BYF,A+CAE,CnDvDR,AkC2CS,CsBkBC,AMxCA,A9DrBV,AOyCiB,AoCaT,CXHQ,ATzBR,AkDLC,AvF2BA,CsEaG,AjCnCH,AWiBG,CJjBqB,AvBeZ,AwEaV,CjD5BsB,AEyB3B,A9CHM,AkBOA,CoDMG,AMxCA,A9B8BK,A9CHP,EkBOE,A+CAE,CWlCC,AsByCF,AXzCZ,AvCsBc,ASWF,C8BhCV,AvCqBa,CiBYC,CiCOH9C,CtBzCK,AsByCJ,A7DpCd,ArCsBK,AsDiBW,C4CHD,AlGdE,AsDiBA,AGXA,CvCCC,C4BJhB,ATzBgB,AnB6BC,AGdF,CrBOZ,AsDiBW,CsB5CF,A9B8Bc,C8B9BJ,A5BsBhB,AMsBc,CiC3CV,AjC2CI,AuCXO,CvBOG,AtBlB5B,A6CW0B,CvBOG,AtEbF,AsDiBA,AuCXF,CjD5BM,A5CsB/B,AsDiBkB,AGXhB,AoCAA,CjBjC6B,AWC3B,AtBiC2B,CrB7BA,AUuCD,AGXA,CpB5B5B,AkDJgB,AjC2CA,EgBJU,ApDN5B,AoCUiC,AWVE,CKMjC,AhBIgB,CAAhB,CVvC6B,CAAA,AsDoCf,AjCPmB,CnBJ/B,AoDWN,EpDX+C,I8B9BnB,CAAqB,KAArB,EAAV,AXkCmB,EWlCqB,AXkCX,CAAV,CAAnC,GWlC6D,MAA7C,CAAd;AI2DJ,AvCvBA,AiDJA,ApFvBA,A8EYA,ApFOC,A2FGK,ETSJ,AtClCA,AEyBA,AhBtBC,AoEiCH8C,A1CFE,ARjBA,A9BYA,AF5CA,ACsDA,AIxBA,A4CcA,A4BDC,EvBOC,AQJA,AFpCA,AlCqCA,AgDNJ,ArDzBI,A7BHA,A8CyCA,ERdE,AyC7BE,AvCqBA,A9BYA,ADUF,AwCXA,CzC3CC,CsDkDG,AhBIA,C4BLD,ANvCA,AlCqCA,AlClCD,AmF2BQ,CrBUJ,AMxCF,ApEGD,AFKT,AiFPY,C/BsCV,AtCLW,AF5CF,C0EyCX,AQUU,A1CFR,ARjBY,AhChCF,AsCsDE,CgBJC,AYDb,AgBESF,CXxCK,ArEiCA,AuCDF,CfIV,AIPF,AyC7Be,AvCqBA,AhChCF,AsCsDE,ChDpCjB,AUlBO,CkFmDP,AzCRiB,CyCQD,A1FtCZ,AFKJ,AUlBkB,AsCsDE,AGXF,CHWG,CtCtDD,CRaA,AgDoClB,ARjBqB,CQiBrB,ARjBsB,ASWP,CzC3CM,CuEWX,A9BgCY,AkCHlB,Cf9BF,AWCuB,AI6BK,Cf9BN,AWCd,EjBuCkB,AdD5B,ACNe,CaOc,A9DrC3B,AiD8BE,CmBjCF,A1DkC4B,CsCK9B,ARjBe,A9BYgB,AoCUhB,AqCdX,CJ7B4B,AjC2CA,CiC3C1B,AvCqBN,AMsBe,AqCduB,C3ExCN,CsDkDG,AiBvCA,AvEXF,AsCsDE,CAApB,EgBJuB,ApDNR,AoCUQ,CgBJV,ApDN5B,AoCUe,CgBJb,CdDK,AxCjDP,AsCsDyC,CAA1B,C4CHjB,AlFnD2C,CAAC,AsCsDE,AqCdxC,EAA+C,C3ExCN,CsCsD3C,CtCtDF,CwCiDA,CxCjDiD,CwCiDjC,CxCjDmC,CAAnD,EAAsD,E2EwClD,EAA6D,UAA7D,EAAuE;ApBiBvE,AWPL,ArFPK,A8C3BC,A+CyBP,A1FFA,ACKM,AkD9DN,ApBmDM,EEZJ,AiEgCF,A5FnCyB,A0CevB,A9BYA,AGdA,AsEUA,ErBUE,AQJA,AFpCA,AlCoCc,AC/BL,ASiDT,AIfA,AxCjDA,ACsDA,AqCAA,AWVA,ARDC,CAFD,CyCWEG,AlDpBE,A2CQA,ErBUE,AiBvCA,AvCqBA,A9BYF,ADUE,CsDEM,A1EdA,AuDsBP,AnDrBO,A8BXA,C+CcN,C7C1BR,A2CVS,AtEOc,AkDiCnB,ARlBO,ASWF,CnD1Bc,AY2Bb,AyEJE,CbMD,ASnCE,C5CIQ,C7BOR,AGgCE,A0EdA,Cf9Bb,AsB0CY,A1CFL,CbnCe,AKiBP,AjBAb,CiBAc,A/CWd,AgBWc,ActBK,CmEoBRZ,AXzCP,AvCqBS,A/CWO,CqEOJ,AiBvCA,A/BuChB,ARlBJ,A9BYkB,AF5CA,CE4CC,AF5CA,CoCgEjB,A9C/CqB,CgEiCA,A3BnCO,CmC+BR,AjFJlB,ASzBmB,AiFNH,A/BuCH,AvCIO,C6DRD,AjFJO,AuDsBP,AnDrBnB,AgBWqB,A0EdA,ChDzBQ,AzB6BT,CoDMD,ApDNE,AF5CP,Af2CY,CJD1B,AyDYsB,AvBtBtB,CfhCuB,CiBoB3B,ApCsBiC,A8C3BI,ArCEd,AqFuBO,A5DRK,CEZvB,AUL0B,ArCEf,AgDsCnB,C4CHwB,CAACa,A1CFH,CbnCO,AamCN,CbnCe,ASiDT,CnB5CjC,AmB4CuB,AlCpBL,CqDYd,CACJ,AtCrCiB,AmB4CiB,AId9B,AtCNgC,CyB7BU,A1BuC5B,A0EdH,ChDzBgC,AzB6B7B,AF5CoB,ACsDE,ActBpC,CwDrBgB,ArEiCV,AF5C6B,C8D8CjB,AtBKlB,AxCnDkC,ACsDpB,A0EdwB,A5DRG,C+Cc3C,AnC/BwC,A4CJf,AvEXT,C2BeiC,AzB6BT,AF5CxC,ACsD0C,GsE3Cb,A/BwCtB,CcDc,A3BnCgC,A4CJvB,C5CIwB,C2BmCvB,A4BElB,CvDrCoC,AuDqCJlB,A1CD3C,CcDmB,ApDN2B,AyEJnC,CpBgBX,ArDZ+C,ADUjC,CqDJmB,A3BnCwB,C4B2C7D,A5B3C0C,AaoCzB,AvCGsC,A0EdA,CrBUhC,A3BnCU,CAA5B,A4CJe,CjBuCqB,AiBvCjC,ArEiCgD,CAAC,CoDMlC,AhBKU,CiBC7B,A2BJW,A5CGmB,CgBLW,CCS7C,A2BP0DS,C5BFnC,AdCG,CcDxB,AdCyB,AFIM,EAAO,CAAP,CEL7B,AFKA,CqCfmD,CzEIL,AyEJY,EOY/C,A1CAX,AtCRmE,AoCYnE,E4CJiEE,AhFRnB,CqDY9C,ArDZJ,EqDgBA,AfRS,CmCZT,GnCYI,EeIA,C2BJW,C3BSf,AfTiB,C0CCnB,Q3BGM,AfJsB,CAAC,CeSlB,GfXL,EFM6B,CAAC,CEH9B,GFG6B,EEHxB,AFG+B,CAAP,CAD7B,EEFA,EFIA,EEJa,SAAS,CAAC,IAJzB,aFQ+B,CAAC,IAAD,EAAO,CAAP,CAH/B;A4BHJ,AvClCA,AmDFA,AJyBA,EnBuBE,AOhBC,ApB7BD,A7DyBA,A+EhCC,A9B6BD,AhBtBF,AuD+BE,A/CnCA,A9BDC,AgD0CA,ARtBD,A9BaA,AF7CC,Af2CD,AoBbA,AiC2BC,AqChBD,AECA,A9DVA,C6C1BA,ApByCA,CvB5BA,A9BLE,AwELA,AjCoC2D,AbhC3D,AiECJ,AIsCC,CrGVI,C0EoBG,A1EpBF,AiDHA,AMyBA,AJhCE,A/BsBF,AIxBA,AoCaA,AkCFE,A5DTA,EEbN,AsDRQ,AvCqBA,AjBAA,C5BlBF,AwELA,A7CQR,ADJQ,AXgCC,ADSA,CdxCA,AwELA,A9CIA,AuBmDG,AiChBV,AhElBA,CkDgCW,Ab7CX,AhB4BoE,AoD/BtE,ATkCE,A/CnCA,AUmBW,A/CWF,AgBWA,ActBE,CWa0D,AgDNvE,AH5Bc,CtDQZ,AmB6Ca,AmCrDA,ChBmDC,AdnBF,CvCEZ,AuCFa,CxBvBX,AamBY,AMyBE,AKrBJ,CfEV,AUmBe,AJhCA,ASWb,AkCFa,CvCuBC,AJhCA,C2BvBhB,AvBuDe,A8CZJ,AlDpBI,CFOC,AhBtBpB,AsB+CkB,AiChBhB,AErCQ,AvCqBR,ASWkB,AkCFE,C9FCpB,AwFMA,AtDhBqB,CEZnB,A9BNA,AwELiB,A5CuBG,CwC8BC,AtC1CrB,A0CXkB,AvBuDG,AdnDvB,ArByCS,ActBY,C4CvBnB,ArCKA,ArC6BF,AwDAI,A1BXJ,C5BlBsB,CoEgDI,AnBEV,CnB5Cd,AhCuBoB,CgCvBpB,CmB4C2B,CNzBzB,AMyB0B,AdnD9B,CcmD+B,CnB5C7B,AJPA,AuBmD4B,AiChB9B,A/CjCE,CciDE,CnB5CI,AyBHR,AZsBgC,CyBuBT,Ab7CX,AvDHV,A0BD8B,AwDmChC,GdcsC,CtC1CpC,AJPA,C0CiDF,CoBrByC,CrD5BzC,AqD4B0C,E1DrB5B,AyBHd,ApBDE,C+CgCU,C3B/BS,EzBErB,A0DsByC,C7CFM,AuCS/C,CMPkD,CNOlC,EvCTmC,CR1BnD,EAIE,GAJF,EAKE,AqDuBuC,E7CFoB,A6CEE,C7CFD,QR1B9D,EQ0B6D,ARpB3D,CQoBF,A6CEyC,CAAzC,C7CF2E,cR1B3E,EAMmB;AkCiDf,A3EzBL,AiC7DD,AgEgCA,A/BsCM,ApDRN,AOEC,AhBDK,C4B/DN,CyCiFE,AKnDA,A9C9BwB,A4D0DxB,AQYF,A5FnCE,AkDuCA,ARvBA,A2CUA,A5DVA,CmEkBe,C5BDb,ArC5BA,AyBLF,AvDDE,AwELA,ANEA,A3BkCA,AIPA,AuCSA,AaEJ,A5DtCE,ACUE,A5BqBE,AVAF,A4FDA,CKjBiC,C3BqC/B,A2BTN,AX1CS,AvCqBD,ASWF,A1BXE,CwC8BD,CDbC,AZjCN,ApBJA,AUoBQ,A/CWF,AgBWA,ActBE,CyCmCM,AHvDR,A9BUA,AwB6BQ,A7DPA,AyFFP,CpBoBC,AFlDD,A9BUA,CgCwCP,AcdS,A/EhCT,A0CgBW,AjBAA,E2BhBX,AZuBW,AR3BX,AyBuCI,ApDRS,AVAX,A0FDS,C5BSQ,ANRP,CxCWC,AwCXA,CC1BX,AZsBY,AhB1DhB,AuDmEgB,A/C5BZ,ACEA,A5BqBc,ATCZ,AuDDQ,C3B9Dd,A5B+DwB,AuDDlB,CxCWY,CsBhCA,C+B2BE,APEd,ApDRgB,A8CAF,CnD3BlB,A0CgBqB,AjBAA,C2BfnB,ApBGA,AyB+BuB,AfnBH,A/BsBhB,ActBgB,CuCiBD,AEkBjB,AdlDF,ApBGA,ACEkB,ASUC,A9CYjB,A6BZiB,CyCoCrB,AlEpDA,A0CgBA,ASWI,A1BXJ,CsCpBE,AnEgC0B,CoEK1B,AxBVsB,AnCIR,C+C1Bd,AZsBuB,ARnBvB,A3BwBF,C2DK0B,AZhCxB,AWLuB,A/BQvB,ACEc,A5BuBd,E0EGO,A9C1BP,AoDoBK,CAAa,CjCzBlB,AWLA,AgBoCA,A/C5BA,EoBHM,A2B+BwB,A/C5BxB,GQmBgB,CAAV,C0B4BV,A1B5BiC,CRnBnC,CkCiDF,ClCjDgB,CoBHd,IckDE,CdlDc,CcqDlB,GAHI,AdnDJ,ApBIE,EkCmDF,A1BhCc,ARnBc,CQmB1B,K0B4BE,EAKJ,ElCpDE,EAAsC,YkC+CpC,EAMJ,A7D7BA,EAEE,G2B1BsC,CAAW,IAAjD,KAAsD,IARxD,MkCuDI,EAOJ,gBAPI,EAOY,A7D9BhB,EAGE,6DAHF,EAIE,+CAJF,EAKE,6EALF,EAME,+DANF,EAOE,iCAPF,EAQE,IARF,CAQO,EARP,CADgB,EAUhB,GAVgB,CAAlB;AdCA,AsFzCA,AWUA,A9D6BO,ArBaP,AORA,AoENM,ERKJ,AN8BA,A1BpCC,AjB3BA,AqEyCH,A1F1CA,AuDwCE,AfnBA,AhCjCA,AK8BA,AnBeA,AoDaA,AvBzBA,E2BdE,AUCA,AejBJ,A7CmBI,AhCNF,AiFJK,AvD8BM,ArBaP,A8CXD,AkCDD,CJpCE,CjB2CA,AQJA,AN8BE,ApBZF,AiCfA,AErCE,AvCqBA,A/BsBD,AIzBD,AnBeA,A6BZE,CyC2CC,ClE5DP,A0CiBQ,AjBAA,CuCiBD,AF9BD,A5DRR,AuDwCS,A/CpDA,AsC0DA,AgCjBO,CdmCJ,AJxDH,AhB4CC,A0CnDV,APNM,AIoCI,CnBiCG,AWzEb,A/B6DW,AiCfA,AErCE,AvCqBA,AjBAA,CuCiBD,AqBPA,CrF3BV,CwE8BA,AN8Bc,Aa3BV,ArDPiB,A9BGrB,CqFtCI,AxB6CJ,A/CpDA,C8D8Cc,AgBjChB,AxFII,AiFXA,AlEwBY,AiEWV,CdmCa,AJxDf,ApCsBuB,AsDDH,CQ5BxB,AH6BsB,EvBtBH,A5DRnB,AakBE,AiEWI,CtCRiB,AjBAA,CzBhBnB,A0CgBoB,A3BHF,AiEWK,AvDRH,CyC2CZ,AlE3DR,A0CgBmB,ArCsBE,AoBtBF,CuCiBjB,AF9Ba,ApBajB,AjBAA,EpBsB0B,C6DqBC,AlE3DzB,AKuCF,CyCQ0B,A9C/CxB,C8C+CyB,ApBtBF,GoBsBC,A9C/CxB,CkE2DF,ApBZI,AENJ,C3CH0B,CyCSO,CzCPjC,CLxCS,IADT,E8DIiB,EzDmCS,CyDnCxB,CzDsCF,QAH0B,EAI1B,MAJ0B,EAK1B,YAL0B,EAM1B,QAN0B,CAA5B;AwEpDA,AxDoBA,A8DDA,AGHA,ApF/BA,A4BiCA,A2BgCC,ApDWD,AK/DC,AsC0DA,C9CvED,C+D2EE,AFlDC,AxCED,AiEFoB,AtFzBW,A+E0B9B,AvD6BD,AgBRA,AsCOA,AvDRA,CwDnCA,CjBoDG,AQJD,AVzBA,AqBAJ,AJ4BK,AhDjCD,AEMA,AtCqBA,AgBQqD,AIrBrD,AsEaA,C1EQgB,C+BjBd,A/BiBF,AclBI,CwC6BD,CnBEC,Ab1CA,ASYA,A/CSA,A8BVE,CMjBF,AiDyBC,CGpBT,ApDLS,AsD2BC,CpBmBC,AuBlDW,A9CsBX,AjBDE,CwC6BD,AOhBA,AgBlCU,AR6BV,AKEA,CbGC,A9BZA,AsCOA,EfqBE,AzC7CA,AODX,CkC8CG,A/D3EP,AwC+CgB,A2CSJ,CbGR,AtE3DJ,C+D2EkB,AOhBA,AzC9BD,AWkBf,AsCOO,CQ7Ba,AvDUH,A+CmBA,CfqBC,CuBlDE,A/DqBC,CuDQd,AvDRe,CwC6BD,AlC9CnB,ANiBmB,C+CanB,AvCxBoB,A+CmBA,AvDRtB,CqB+BuB,C0BlBC,A1BkBA,C0BlBtB,AgBlCkB,AR6Bb,CQ7Ba,AvDUlB,A+CmBwB,CRKC,A1BkBJ,CAAjB,Ab1CsB,Ga0CG,AuCrBrB,CLFH,CAAP,AKEoB,CpBmBc,CAAC,IoBnBzB,EpBmBV,AoBnB4B,EpBmBe,AOhBzC,A1BkByC,CmBFC,AnBEA,CAAD,CAArC,CmBFyC,AoBnBrC,CAFU,CpBqBpB,EAAmD,EAAE,CAArD,EAAwD;AY5D1D,AMmBA,AzEnBA,AsC0DA,AgClBC,EdkCC,AH9DA,AzBCA,AEyBA,AgD3BA,ATqCC,AKTD,AQcF,AlEZE,AgBRA,A9CUA,A6BXA,CsDYA,CdiBE,AOhBA,AxE7BA,AWuCA,AI1BA,A2C4BA,ACbA,ARFA,AkCAA,EnBgCE,ApBXC,A8CVJM,A3DhCG,ASYE,A/CSF,A8BVE,CyC0CD,AtE/BA,CqEkBG,AvB5BA,A3BJF,AUGE,CeMD,AxCtBD,CkE0DE,AW1EV,A7EgBS,AWuCC,C6DVC,AN6BT,A5B7DA,A8C0BA,AnDlBQ,ASYG,A/CSF,AgBaA,AI1BA,AoCaA,A1BVE,CwC6BC,AhCxCH,AjCLP,CkE0DS,AxBzCE,C/CSD,A+DeA,ACbA,CMiBG,AlDhCF,AnBcb,AyFDa,CR1Cf,AeqDA,AlDpBkB,A3BJF,CsEaC,CR1CjB,ArCsCE,AoDgBF,A3DjCM,ASYJ,C8BYE,AYNF,AnDlBgB,ArCsBC,AuDDf,CiCHU,AzFGM,AoBbhB,CUGmB,C9BUjB,AgEEF,AlCZoB,CAAD,CiCyBnB,ACboB,AlCZtB,C7BWA,C8DcwB,C0BlBxB,AzEgBE,AfZuB,CeYC,A0EhBN,C/C1BpB,A8C0BmB,C9C1BP,ALQR,CtBkCF,EsBlC4B,AtBkCC,C2B1C/B,CoB4CE,CpB5CgB,AqB+BhB,ChDWA,A+CEiC,COIG,ANjBJ,CMkB9B,AtDPiC,E+CEnC,EAAuC,CzBpCrC,EtBkCF,QsDMoC,C3BhDtC,AoB4CE,COME,C3BlDiC,AoB4CgB,KOIf,EAGlC,aAAa,CAAC,CAAD,CAHqB,EAIlC,MAJkC,EAKlC,KAAK,CAAC,CAAD,CAL6B,CAApC;AMGE,A/BzBL,A2CpBD,AOMA,AViBA,ERIG,AK9CmB,A5BepB,A8BmCA,AhDnCC,AkDHH,AvD8BE,AXZC,AoCaA,A1BVD,C+CUA,AzDhBA,CiDsBE,ACmBA,ACOA,AkBnCA,AQeA/C,A3DjCC,AjCLC,AL0BD,AgBaD,AfZA,AyFDA,COYC,AjGdD,CqEQE,A4BMAiD,AjGZA,A+DeA,ACbA,AlCZE,EAAE,CuCgBD,AOeO,ANIP,AOtBA,ASlCT,AlEkBS,CkDsCC,AkBjDV,ASoCI,AjFCM,A+CEA,ACbA,CKIN,ACmBO,ACOA,AW3EW,AvCclB,AWCF,A2CwCS,AjFCA,AfZA,A6BXE,CoDjCS,AQ2CV,CpByBH,AtEzBI,CsEyBT,AoBzBU,EFxBd,AxFwBM,ACCF,CqEwBa,ACOA,A5B7Db,CAAA,A6CKJ,AFPA,AtF+BkB,CkF3CI,CX2EF,ARjBA,COUhB,AYpEkB,A5BepB,AxBkBqB,CanBnB,AWEA,AU6BE,AlCZkB,CyC0CpB,A5B7DA,AbmBmB,CkCYC,AlCZtB,CyC0CuB,ARjBA,EmB1DH,AvCclB,CuCdkB,CvCcZ,CiCkDJ,A5DRF,C4DSF,ALU6B,AvDnBA,CsCzC7B,EAEE,AtCuCA,A+CEE,CQiB6B,CvDnBC,A+CEA,I/CFhC,CuDmBA,CvDnBsC,CuDmBC,GKXrC,EAEJ,AtBnDA,CtCyCE,CsCtCA,IsB8CE,EAGJ,IAHI,AtBjDJ,EsBqDA,AtBjDE,MsB6CE,EAKJ,CALI,EAMJ,CANI,EAMH,AtBvDD,EAKE,SALF,EAME,gBANF,EAOE,UAPF,EAQE,MARF,EASE,eATF,EAUE,kBAVF,EAWE,eAXF,EAYE,eAZF,EAYiB;AdkBZ,A8CnEP,A9BkEC,C8BlED,CV8FE,AMvEA,AMkBmB,ApDFnB,AkDvCsB,A/B6EtB,ARrBA,A/BuBC,AfZA,AyFNmB,A5DLpB,CdcA,A0ETO,CrBWL,ACmBA,AOtBA,A3E/BA,AwELA,AlCkCS,Ac9BX,AhBSE,AjCNI,AWuCJ,AI1BA,AsEQF,ErBWI,AOsBA,ALIA,A5B7DA,AQiDA,A8CREC,AlDtBF,A/CUA,A8BVE,EwBnBN,APmBM,AgByBA,ACbA,AlCZE,CuCgBD,AnElCD,AwELA,AuB6CG,A5FtCC,CuEsDF,ANHA,ApErDD,AwELA,A/BIC,AtCGG,CgEgCT,AOsBO,ACzBA,AW5BU,ASqCTH,A1CDV,AvCES,AcvBE,C+CaD,AlChCA,A6CIS,AjCoCnB,AQIY,COUD,AhBtDX,AHiDW,AJ9BA,A/CUA,C+CVP,CiBYS,CrBhCL,AWeN,AtC4BA,C4DeE,ANHW,CAAC,AOtBP,AW5BU,AzCeH,A/BuBA,CwBZU,A8CnE5B,AtEgFI,C6DXgB,AW5BC,AnFHjB,AiFtCJ,AvCwDoB,A/CUA,C6EGT,AoBQA,A1CAT,AvDXmB,A8BVE,C8CsCD,ANHA,A9BxBS,AchB3B,AC0BF,AzBrBsB,C8CsCtB,ANHqB,AOtBA,AvBlBnB,AUiBI,AlCZe,CUWhB,AVXL,C8CsCuB,A7BtCA,AgByBE,C7D3CvB,AsC8BJ,AgD3BqB,AzCenB,C2BvBE,ApBkBA,AkCViB,AxFyBR,CsDfT,AC0BF,ARrB0B,A/CUA,A+DeE,COUZ,ApErDU,CwELC,AvBqDC,CoBYC,AGjED,AvBqDC,AIT7B,AvDXW,CsEyBmB,ACOA,AGjE5B,ApBkBA,AtDeE,CsEyBW,ApErDb,CoEqDA,AhBxCM,AHmCoB,CAAxB,I0BjBK,AdY8B,CcZrC,AdYsC,CRJjC,AQIgC,CAAjC,CT9BJ,EAAiB,GiB+C2B,EAAjB,AhBrB7B,CgBqBI,ChBrBY,EgBqBoC,SjB/CjC,CAAU,IAA3B,CiB+CiE,CAAC,AjB/CjC,MiB+CgC,CAA/D;A3EhCA,A8C5BN,AnCLA,AmFkCC,ErBME,ACmBA,AOtBA,AW5BD,AzDwBA,AfeC,AcxBD,E8CsCE,A5CnDA,A9BJA,AwCFJ,ASiDK,A9C5CD,AkDmCA,ARrBA,A/CUC,AoBbD,AwEaA,CzCcA,CoBkBE,A5B7DA,AWagC,A2C4B9BI,AlDtBF,AiBYC,AlCZC,EyBqBA,AnCxBA,A2C4BA,AjCzBE,CEbF,ApCsBQ,ASvBR,A0CcC,CfbA,A3BDA,A0CcL,C6BsCO,AjCzDA,AvBgBA,AUGE,CmEsBC,AlCGA,CpB5CD,CsDyCG,A5FpCZ,AuFwBU,EhB4BV,CtB5C6C,AC2BhC,CAAC,CvBlCd,AsBO+C,A2C0BxC,C3C1ByC,CAAC,AlCGhC,AUGE,CEbF,AUNrB,AawCQ,AnCxBG,AUGa,ClCSlB,AgGCF,A9DVmB,ClCSQ,AwBZT,AUGpB,CyBqBuB,AQIE,A6BfF,C5DvBrB,CpCsBE,A+C5BO,CAAM,AoB4CW,CnEhBI,C2DYJ,CgBqBC,CAAC,EhBrB5B,CZ1CM,AiD+BN,CrCWgC,CqCXC,E7BeI,CAAC,O6BftC,CrBgC4C,CqBhCD,CrBgChB,CAAzB,ARjB+C,CAAC,EQkB9C,IRlBkC,GAAqB,CAAtB,CAAjC,MQkBe,CAAC,MAAM,GAAG,CAAV,CADjB;AM5BL,AEqBK,ArCtDN,AzBgCM,AyEDN,Ed2BG,AhF7BD,AmDTC,A9CUD,A6BVA,EyC2CG,AvCvDD,AyBJA,AUGA,AOVA,ApBgBiC,AHsCjC,Ad5CA,AhCDE,CTuBD,A0DhBD,C1DgBE,A+C5BA,AsDyCEC,A1CDF,AnCxBA,AwEaA,A9DVE,E4CvBA,AXgDA,AjCzBE,CiDkCM,AtBlDR,AUGA,A9BAA,ApByBQ,AhBFP,CwD1BA,AUGA,AbM6D,AjBN7D,ApCuBC,A2FAA,CrCWC,AqCXA,A9DVE,CanBD,AoB4CE,CkCHC,A7EzBF,CuBhBC,AWFZ,AjBQE,C4DmCY,AX5CD,A/B2CT,ElBlCU,AjBUC,CsDpBC,AnB4CA,AnCxBA,AnBahB,ELDA,A+C/BQ,ANSN,ApByBE,A2EFA,C3EEsB,AGff,AUGU,CVHD,AwEaA,A9DVE,C2BhBpB,AiBPmB,AtDoBV,AUGU,CiCyBG,AjCzBxB,CqCbE,CVHqB,CFqCE,AnCxBA,A2C4BE,CItCF,AZkCC,AtCTtB,C8DsBA,AZ/CsB,CYgD1B,AtBnDE,AUGA,AlDyBiC,CGfN,CsDpBvB,AuB6CiBC,A1CDnB,AnCxB0B,IsDpBI,CAAC,AzDmC/B,AGfA,C6EyBU,ChFV4B,CgFUZ,AlCGU,EWhDA,CAAC,AXiD/B,EgBQN,EAEJ,GL3DmC,CAAc,EKyD7C,EAGJ,GAHI,EAIJ,EL7D4D,CAAC,CAAD,CAAzB,CKyD/B,ALzDF,EK8DF,AL9DkE,GXiD5B,CAC1B,EgBOR,EAKE,ShBbgC,EAE1B,aAF0B,EAG1B,IAH0B,EAI1B,kBAJ0B,CADE,GAO9B,aAPJ,CAH4B,CAY5B;AcnBR,AXQM,AtEbL,A4CCD,AE/BA,AzC+BC,AgDAK,EoBKJ,ACmBA,ASMA,Ac/DA,A5EmCA,ADWA,AcvBA,E2BfE,AUGA,A1ByBA,AanBA,AmCaA,ApDnBA,AhCFI,AkDmCH,AvDZD,AoBZC,CAFD,C2D6CE,AL/DA,A/BIA,A1B+BE,A+CAF,AlCZE,CwCkCD,CAAC,A2BZIC,AjGbJ,A4FCA,A9DVE,CuCeD,AHOO,AzBTP,AgDNA,ApFrBG,AWqCH,AiCbO,CP/BhB,ArCOa,A2D0BH,CUnCA,AmBAR,A/DuBW,CuCeX,AKtCS,AzDmCG,CjBHD,CsEyBX,AJZI,CACJ,A1Bba,AyDYI,AhFVF,A2EFF,CnDGX,ADHY,AE/BhB,A+C4BI,AQegBC,AjFClB,CsDWe,CAAf,A5BvDF,AmDFE,A7BmCgB,AfFZ,CRGa,AoDpCL,AJ8BK,AQeP,AhDZc,CgDYFF,CzDZH,AG7BA,AbmBE,CUUD,AnC1BlB,AY4BoB,AaZA,CanBD,A1B+BE,A+CAF,AlCZA,C8DUf,A9DVN,C9BSuB,C+E+BC,AtC3BA,AoDpCxB,AJ8BwB,AQed,ClBkBe,AtC3BA,AgDNA,AxCGrB,C4CjCe,CrDiCN,ASAqB,CiBY9B,AQ7CA,AlCiCN,CkChCQ,CR8CN,AlEfE,AgEGE,CvBCa,ADHc,AvBE/B,CwELiB,AzFEe,AgEGA,IEU5B,AzBTgC,CgDNC,CvBkBrC,AjBfI,CyBjCA,CK+DoB,ApC/DhB,AMiCqC,CiBYzC,CakBsC,AvC9BA,C0BgB1C,EzBbiB,CDH6B,AiDH7B,EViCO,AtC3BwB,CyBS5C,AuBf6C,CViCC,AvC9BA,C0BiBlD,A1BjBmD,EuC8B3B,AblBpB,A1BZ2B,CAAjC,CuC8ByD,AbZvD,AzBfuD,CAAC,AgDNA,CvBepD,AuBfqD,EvBsBzD,EaWwB,CtC3BP,CsC2B8C,CUjC9C,CvBeb,AzBT6D,EyBiBjE,AuBvBmE,CAAjE,CViCsB,AtC3BtB,CsC2BF,EAAwE,GblBpE,EAQI;AGdT,A7BLD,A9BmBO,AMNN,CAfsC,C4D6BrC,ANHA,AJHA,AStDA,AjCC+B,A0CqC/B,ArChBA,A3BFC,A6BaD,AnBVA,CdQK,C+DgCH,AREA,A9B5BA,AoDtCF,AJgCE,ApFpBA,AKyCS,EkEQP,AVNE,AQrDA,A/BGF,AIkBE,A/CUF,AiDCE,A2CAD,A9DVC,C8CqCD,AD5DL,A5BsBO,A6CSH,CjB/BJ,AkBDA,AI8CU,AlCWJ,ACrBA,AlCZE,CwCkCD,AjE9CD,C6D2CI,AkBhBV,A/E3BO,A0CWG,CgCyCD,AREA,A7BhEsB,A0CqC/B,AtDfW,CYtBoB,ACGrB,AsDyCMG,A5FlCd,A0D6CQ,ACrBA,CEmBG,A2BvDb,A7FiCW,AiDCE,A2CAF,CtBwBX,A3BrDY,AIkBE,CgCyCZ,AvC9BW,AOXE,CPWD,AqDjCZ,A7BmCY,AfFE,C0BjChB,AXmCe,CWnCf,AhCDQ,A3CiCJ,CiGamB,AlDvBb,CqCgBV,ArChBoB,AiBaV,CEmBW,A1BrBF,A4CKnB,A1Ec4B,AsDjBT,AlCZE,CUUD,AqDjClB,AI6CsBH,AlDvBF,AjBCA,C+DvBpB,A/DuBmB,CoC+BG,AxDFO,AqDIzB,AjCjCN,CiBDyB,CqCgBzB,ArBkBwB,CaIC,ALKvB,AsBjEA,A9CsBkB,AEWO,C2B2BD,AiB5DxB,AI6C4B,CzDZjB,A4CKb,AaO+BI,AjCVrB,CxBFZ,AEhCiC,AKqBD,CEWC,CiBqBV,AStDrB,AjCC+B,AmDD7B,A9CsB8B,CPWA,ASAhC,C4CjCQ,AnFoDiC,AsDjBT,CEmBG,AStDnC,A5BsBmC,EmBgCnC,A1BrBoC,AyDYZ,AlDvBd,CLrBqB,AuD4CS,AlDvBxC,CLrB+B,AuD4CP,CAAd,CzDZ8B,A4CKxC,C5CLyC,A9BmBV,CkEQN,AZzBnB,CxBF0B,A9BmBiB,CkEQN,AD5D5B,AXmC4B,CWnC3C,CnCiC8C,CmCjC5B,CAAlB,EC4DyB,AD5DJ,EC4D8B,CpC3BpB,GoC2BwB,ApC3BE,CoC2BD,CAAD,CAA9B,ApC3B3B,EoC2B8D,CD5D5D,EAAmC,GC4DV,EAA2C,CAA3C,EAA8C,CAA9C,CAAzB,EAA2E,MD5D3E,EAAqD;ANwCvD,ACkBC,AjDhDD,AmBwBA,AmDzBA,ANsBM,ENiCH,AREA,ALXD,AErDA,A1BAA,AdCA,AQEA,AL4BA,AgBTA,ArC6BA,AOlBA,AgCDA,AnBVA,E8CqCE,AD5DA,AgBQJ,AP8BI,A/E5BU,AkDiCV,AvDXC,EkEsBG,AQtD8B,A/BIhC,AkDJA,A9DgCE,AgBTA,ArC6BA,AOlBF,AgCDE,AnBVA,CiBAC,C4BvBC,ApB2CF,AqCVA,A9DVE,CsDeD,ACRO,CtCPJ,AgBiCF,ACrBA,CYyBC,AxCxDT,A1BgDW,AoB7BA,CMnBX,AWmBY,A9BWZ,AgCDY,A2CAA,C1BqBC,AmBxBT,AOGS,CDzBf,AjF4CgB,AOlBF,A8CsBE,AsB1BK,CzFEN,A4CCA,AZ/Bb,AwDoCE,ArCfc,AEUD,C2B2Bb,AVNc,AErDhB,A5BgCc,AZ/Bd,AmBqBiB,A6CUD,ClBnCZ,ANGJ,Ab0Ce,ASRA,C6BnCC,ATsCA,A7BKA,ASRR,CrB/BS,AyCkCf,ArCfkB,C8CvBF,A9DgCE,AgCwBA,A6BvBJ,CpDAG,AG7BA,APAnB,AWmBe,AjBAM,CoC+BC,A1BrBF,AJ7BpB,AmBuCM,A7CSgB,AuCnBA,AnBVA,CoC+BC,AStDA,A5CgCA,ArBoBA,AqDIA,AdvBA,AoCHnB,AvDPiB,CoC+BC,AnB/BI,AjBA1B,CoC+BA,AtCpDA,A2ByCuB,ARpBvB,AsCO4B,CV9BF,APC1B,A5BgCa,AZ/Bb,CwCDA,A5BgCF,AqDjC2B,A9DgCzB,C8DhC0B,AnFoDZ,C0BhDd,A1BgD6B,AuCnBd,CTAa,AeUA,CoB3CG,CvCI/B,C2BoDiC,AdvBA,CMU/B,CqCVc,CpDAlB,AGnCU,AY6C0B,C3BzClC,AgE+B8B,ClFmBhB,AqDIwB,CrDJtC,C0DnDA,AxCCA,AiEHQ,GzBER,ChCGA,EuCJE,AiBiCc,C7BuBO,AdvBvB,A2CAM,GhE/BM,AmCsDsC,GKvDpC,ExCCd,EAAiB,EwCDjB,CLuDuB,CKvDH,ELuD2C,IAAvD;AvBtBV,AmD1BA,EfqDG,ALKD,ALXA,AsBhDA,AzD2BA,AgBVA,A3BJA,A6BcA,AoCHA,AvDNA,E5BnBE,AwEJC,ACDD,APCA,AxCCA,AwDoCA,AhDlCA,AEOA,AjCFsD,AYyBtD,CyDtCA,CR0DI,AvBlDF,AkDJA,AtC2CA,ARpBE,AEUA,CFVC,C4BvBC,AsB4CE,AjCTH,A4BFD,C1F5BA,AkFiCC,AhDlCA,AEOD,AjCFsD,AeUrD,A4CcD,AqBHC,CnFzBA,AoCMA,AjCFsD,A0CcnD,A9BWF,AoEJA,CX7BC,ANAA,AxCCA,A4DIT,AjCqCS,AtCTA,CgFUID,AlDrBD,A6CUA,A9DTF,CoC8BG,A9CnCb,AUKW,CAAD,CsCvBD,A5BgCI,AZ/BJ,AiEFI,AtC2CT,ARpBY,AiBYH,AlCXb,CoC8BgB,A1BrBF,AOVG,AEUD,CN7BD,A6CEf,AKNe,ATsCb,AQLe,CJ3BL,AjCqCI,AzBnBA,CapBC,AsDwCP,A3DjCR,ASYkB,AEUD,AoCHF,CDQC,A/E7BhB,AgFqBgB,AOGE,A9DTF,CUSC,AyDWE,AlDrBN,AsCOE,CnBwBK,AhEjDpB,AsC4BkB,A4CKlB,AhDlCA,AEOiB,A+CmBX,CnBwBe,AStDA,AvCIF,AnB8BnB,AaVmB,CoC8BC,A2BtDA,A9CuBI,A9BWJ,A2EDF,C1BqBpB,AhEjDsB,AsFCtB,AKNuB,A9CuBvB,AjBCgB,C6CxBU,ArCWxB,AWsBwB,AoCHF,CGxBL,AjCqCM,ANVE,CTAd,AeUa,AzBnBA,C5BnBxB,AsC4BJ,AZ/BW,C+CFiB,A7CwBE,CbU1B,CuBD4B,AZ/B5B,A2ByCE,CfVN,AvBCiC,AaVA,C+D1BvB,CRgCyB,AvDNjC,CuDMkC,AOGd,C3CAD,AoCHc,CAA1B,AOGoB,CAAP,C3EClB,CmB9BmB,Aa6BoB,A2CAX,CxD7BC,AiD0BS,MjD1BtC,GuCJwB,AU8BuB,CpCGjD,AoCHkD,CV7B9C,AU6B6C,CV9BvB,AU8B1B,EV5BI,APDK,CODiB,AiBiCoB,CxB/B1C,AwB+B2C,CjB9B3C,IPDK,CwB+BW,CAAd,SjB9Ba,CAAC,CAAD,CAHO,CPCjB,COGL,CPDA,CAFK,EAGL,KAAK,MOAU,CAAC,CAAD,CAJO,CAAxB,KPIE,CAAqB,MAHhB,EAIL,KAAK,MAJA,EAKL,MALK,CAAP;A5BiCJ,AmD3BA,A5FuBA,AgBxCA,AK8BC,AiEWA,CjEzBmB,C2DyDlB,AbRA,AE/CC,AxCLA,AQEA,AWoBD,ArC2BA,AOjBC,AgCDD,AnBTA,CsCzBA,AxCCA,AQEA,AhBGK,CYKH,A9BJA,AyCVM,A6CSR,AJiCE,A9C1BA,AjCFA,AkDiCC,AvDZD,C2CnCA,CoCmEA,AbTE,AQrDA,AmBDA,AnFmDA,AuClBE,CiBqBD,AxDHA,C8E9CL,AI4BM,C5DvBA,AoD4BC,ArCdA,AhCnCA,CgE0EL,AbTM,AlC5CD,AWNH,AgDEN,AMwCY,AlDtBF,AgB+BA,ACpBA,AfFE,CiBqBV,AQrDQ,A3BuBD,A/COE,C0E9BA,AmBDC,AnFmDV,AoB3BU,C0DnBV,AzCmBW,AESE,AnBTF,C+DxBC,AI8CIE,AlDtBT,ArC2BK,AqDIA,AjC/BF,CUSG,AOTb,AgB+Ba,A6BtBA,A9DTb,CUSc,AgD3BZ,AGAJ,APgCI,CpBHa,C2B7BjB,A3FyBkB,A8BPA,CsDcC,ApFPA,C8BPC,CUSC,AqDjCA,A9BuDX,AdtBa,CTAD,AgD3BlB,AKNkB,A5CiCE,CuC3BpB,AJgCA,ArBiBmB,AjC/BA,EmEsBM,AjCXnB,AlCXQ,C4CvBZ,A1E8BK,CwFzBP,AzEjBJ,Af0C2B,CgCrBvB,AQuBW,AgD3BX,AKTM,AIiDoBF,AlFzDF,AemCA,CUS5B,ASAe,ClC5Cf,AemC8B,CmBS5B,A2CA6B,CpDAC,AgD3B5B,AzEjB4B,Af0CrB,A4FEqB,C5FF5B,A8BP6B,CfnCjC,CkFyDqC,AnEtBnC,CmEsBoCG,AlFzDF,CyEiBzB,AI2BoB,CAAhB,CpDAwB,AoDAA,Cb8BnC,CS1DF,CT2DI,CvC/BN,GyDa8B,AlFzD9B,CkFyDiDC,ClFzDH,A6E4C/B,EAAmC,Ob8B9C,AkBjBQ,ElBmBN,CahCS,EAA+C,Gb8B1D,EAGE,GAHF,EAIE,AalCS,CAAP,Kb8BJ,EAKE,MAAM,CAAC,CAAD,CALR,EAME,MAAM,CAAC,CAAD,CANR,CADF,EASE;AxEvEJ,AwCyBC,A9BUA,AGdD,AiEWA,ET4BE,ARnDA,AzBJC,AfDD,A+DEuB,AvDAvB,ArBhBA,Af0CC,A8BPD,EiD+CE,A/C5DA,AyBJA,AUGA,AQNA,AxBgDA,AqC7CA,AJ+BA,A/C5BA,A3ByCA,EgElDI,AmBDF,A9EXE,A6E4CD,ChB0BA,CDvDC,AX+BC,CP5BD,AUGA,AhB0CC,AiCdA,A/C5BD,CoBHC,AUGA,A8BoCG,A5DpCH,AtBrBG,C6DsED,AGYA,AYlEc,AjF8Cd,CkEQC,AetDa,A5BkDb,AjC/BA,CfnCG,AemCF,CmEsBKC,AnEtBN,C8CmCG,AGYX,AvCrCW,A9BiBX,AoB3BF,C8CmCK,AiB3DS,ATsCZ,A/C5BA,CtBrBe,C6DsED,AiB3DA,A9EXE,AemCF,CsDcC,A/C5BD,A0B6CC,CaIC,A9CnCA,CfnCL,C4EgBU,A5EhBD,C6DsED,ADvDA,ASkCnB,A/C5BkB,A0B6CH,AjC/BI,C6DnBE,ClCErB,AN6CA,A0CpDqB,A/DwBP,C6CpBQ,AkBJA,AI8CI,CrBaH,A7DtEZ,C6DsEa,AnBpDD,AN6CC,Ad1CV,AtBrBY,AemCF,CmEsBGL,CNzCN,AtDKrB,APc0B,C6DnBL,ClCErB,A1ClBW,CemCkB,C8CmC/B,A7DtEkC,AgDkEjB,CjC/BjB,C8CmCkC,AiB/D1B,AIkD4B,AlFzDvB,AgDkEU,CaIY,AqBbEG,AlFzDrC,G6DsEsC,EAAtC,CzBPE,CyBOwC,ADvDxC,ECuD0C,ADvDA,AZmD3B,CaIjB,AqBb6B,CAAmBG,AlCSb,CaIY,CTjD7C,GAAgD,CAAhD,I8BoCQ,GlCSO,EAAiC,YAAjC,CAAP;AkBfN,AlCdN,A9BUA,E8DoCG,ARRD,ALVA,AyBhDA,APiCC,A1EaA,AK9DD,AkC2CA,AnBRA,CsDSA,CR0BE,AnBnDA,AUGA,AbIA,AHsCA,AsCvBA,AlCYA,AqCTC,ErB8BG,AG9DE,ACGJ,AkBJA,A9EXE,AiD8CD,AfHD,CiBqBC,AFxBD,CY+BA,ArBlBE,C0BHQ,A3BxBR,AmCeC,Cd1BG,ArBWH,A2C+BG,AlFzDA,AgDkED,AdvBD,CiBqBC,A2BrDA,C3BqDC,ApC7BA,CyCuCG,AsB/DF,A9EXE,AiD8CF,AlCXA,CmEsBKC,AnEtBN,CoC6BG,AjBrBA,AnBRb,CyCuCgB,AI3DA,CDLZ,AnB2CW,AxCrDE,CwCqDD,AxCrDE,AemCF,C4CrBV,ACCa,CJ2DC,AsB/DF,A/DwBA,CoC6BlB,A2BrDmB,AJ8BjB,A1EzCW,CuC0BX,AC2BI,AxCrDgB,CmDgED,ApC7BA,CoC6BC,ASjDE,Ac0BF,ClBiCN,AjBhDM,A2C+BK,A1CJJ,AzBlBP,CyCuCU,AsBpElB,CtBoEQ,ALVS,AnDhEZ,C6DuEW,ALGxB,A0BjB4BP,AlFzDA,AemCF,C8CoCD,AF7DrB,CRsDJ,ASjDI,ApBsCwB,AzBlBA,C2DMC,CRSzB,Afc0B,AuBvBA,A1EzCjB,CkEmDb,Afa+B,ApC7BA,CyBkB7B,AxCrDgC,CkFyDC,AnEtBnC,CmEsBoCG,A1CJF,AxCrDrB,AkC2CA,CiBqBsB,AnDhEnC,AkC2C0B,GKjBW,GYsCrC,AuBvBE,Cb8BsB,CVPmB,AZtCD,CsB6CA,AqBdd,CAAmBK,ChBP3C,ELqB0C,AKnB9C,CLmB+C,CAAC,EtB7C1B,CsB6C6B,CAAL,AKrB1C,AhCPJ,C2B4BwB,AtB7C8B,A2C+B5C,ChBJV,AgBDqB,AhDT0B,C2B4BQ,AqBZ7C,IrBYiD,AKrBvD,CLqBwD,CAAD,AKjB3D,CLiBwB,EAAwC,GKrB5D,C3BxBkB,C2B6BtB,CLgBwB,CtB7CgD,CsB6CA,CAAhD,EAAmD,CAAnD,AtB7CtB,CsB4CA,CKpBE,CLsBA,CKjBK;AvD/BX,AFNA,ANEA,AiEaA,EFwBE,AVkBA,A7BhEA,ACIF,AyCoCE,ArDPA,AhB3CA,AfyCA,A4FbA,A9DOA,EoC6BE,AQjDC,AhDQL,A4BII,AmCcA,ApDrBA,AYuBA,E2B6BE,AiB7DA,AtC0CA,AxBVE,AhB3CA,CkEwDD,CfQG,AuBvBN,ApDrBI,A2B0BA,CO4BC,A5B5DT,A3C2BS,CuEiCC,AxD1EE,CkEwDD,AVkBF,A7BhEP,Aa2CS,AxBVE,CkDaD,AVkBV,AtB/BU,AnBRA,C8CqCC,A7DxEE,AemCF,CoC6BG,A2BrDF,A9DgCE,ADRJ,CmDqBG,AVkBA,AhBrBT,ASPS,AfHA,AnBRb,CmDqBK,AVkBL,AsB/Dc,A9DgCd,CmCqBiB,AxCzCnB,AXvBmB,C6DwEb,AKhBY,A1BHA,AxCrDE,AemCF,COfC,C4CoCC,AnDrBA,CfnCL,CAAS,AfyCF,CiFeC,AY7CA,AJ8BnB,AxCEmB,AnBRA,C+DxBC,AxDSA,ArCqBtB,AgEKM,AfHgB,CwCDlB,A3DPY,EarBlB,AYuC2B,AxCrDZ,CkEwDa,A5CpCxB,AkBiCwB,AxCrDE,AemCF,CmDqBC,AvC9C3B,A+CgCI,AxCCS,CPjCD,ALUgB,APeA,EoC6BI,A2B3DxB,AtCgDJ,AxCrDS,AkC2CiB,CiBqBG,ApC7BF,CoC6BC,AxBtDhC,A3BVkC,CkEwDlC,AfQiB,ApC7BD,CYzBA,A3BVH,CkEwDsB,AlExDnC,CkEwDoC,AfQE,ApC7BF,EAApC,CmDqBuC,AhCb1B,CAA2B,CgCaxC,CQdI,CRcuC,AfQzC,CuBrBI,CRauC,CAA7C,EAAgD,CQbrC,CxCAE,EAAuC,SwCDhD,EAEE,AxCDO,CAAX,SwCCc,CAAV,EAAa,CAAb,EAAc;A/DrBtB,AiBzBA,A3C4CC,A4FGA,CjD/CD,CoCoFE,ARPA,A5B7E+B,AZ+C/B,ArBiBA,AK7DA,AkC2CC,AnBRD,E8CqCG,AKhBD,AfQA,AXXC,EwB6BD,AJpEE,AkBHA,AJiCI,ApDxBJ,A3ByCE,AK7DA,AiD8CD,EiBUG,AfQA,CKUD,CQQL,ARRM,A0BhBErB,AlF1DA,AgDiEF,CQSC,AI5DA,AjCJP,ALUM,A3ByCG,CuELC,A5CpCH,APeC,C2DSK,A1E5CF,AemCF,CyCuCC,ALVE,AuBpBE,A3DTN,CmDqBK,AVkBR,AI5DM,A7CqBb,CyCuCA,AI5Dc,CTkDG,AxBtDf,A+CkCiB,A1E5CF,AgDiEF,CrBvDb,A+CkCM,ApDxBJ,AtBpBc,AemCF,CyCuCC,AI5DA,AtCMD,C4CoCI,AVkBpB,AI5DI,AkBHc,A/DwBA,CmDqBG,AtC3DvB,AsD6DuB,AlF1DR,CkEwDO,AN1CA,AjCJlB,ACbJ,AkDcsB,AI+CEC,AlF1DA,CkEwDpB,AN1CmB,AjCJnB,AZyBmB,EAAL,C6CrBQ,AsB4Cd,CvDhDR,A3BVW,CAAe,AemCF,CYzBlB,AmDCmB,CAAC,AxDSxB,APewB,EoC6BI,ASlD5B,A5DdS,CmDgEoB,A7B5CH,APeC,CoC6BG,ASlDF,A5DdE,CemClB,C6CrBkB,A5DdrB,CmDgEwB,ASlDjC,A5DdJ,CmDgEgC,ApC7BI,CoC6BnB,ASlDoB,CIoEnC,AjD/CF,EiDgDI,AbnBsC,CHCD,C8B7DjC,AxDgBJ,A0B8CM,KGFR,KHCuC,EAE/B,CgBeR,EAEE,MAFF,EAGE,ChBpBqC,EgBiBvC,AhBdQ,EgBkBN,MAJF,EAKE,GhBtBqC,CAAjC,EgBsBE,CAAC,CAAD,CALR,EAME,MAAM,CAAC,CAAD,CANR,CADF,EASE,KkB9BmBiB,YAFX,8CAGiBE,WAAW,CAACE,OAAZ,CAAoB,CAApB,CAHjB;AvEpCZ,AiBPA,AROA,A/ByBM,AiDYA,AuCbN,EhB2BG,ALED,A7Ddc,AK5Dd,AeoCA,EiDsDE,Ab1BA,AhEhDA,AuC+BA,AgDHK,ApDxBJ,ACED,AjCFA,A2D0BC,CyBNC,C/C9BA,AmDCA,CJkCE,CvBmBA,ASlDA,AZuDC,CGLA,AhEhDD,AuC+BC,AHzBD,AjCFA,AD0BQ,AW9CP,AsC0DO,AvBtBP,CoC4BC,AhEhDD,AwBKT,AgBXU,AuDmDEnB,A3DvCH,AjCFA,C0EsEE,Ac/EA,AJ6BL,CvBwBE,AxBtDI,A+C6BR,CvByBA,A2BrDS,CJoCP,CV2CF,Cb1BY,AxC3ChB,AgBZU,A+C8BN,E/DlBJ,A+DMqB,CAqBd,ApF5BH,AD0BE,A0BVJ,C5BpBE,AyEFgB,AkBHA,AIkDE,A7FfK,CuEhCN,AlCiCjB,AoDpCiB,AIkDEF,CtB/CH,AtEMC,C6D4CE,AhEhDD,AyEFd,AtEMJ,AUpBmB,C0BgDjB,A1BhDkB,CkF6DZ,C/BGc,ASlDA,AkBXhB,AI0DkB,A7FftB,CF9BF,AoCMA,C4B0CwB,A+BHhB,A7FfuB,AW9CZ,EuBsBM,AvBtBC,CmDgEC,AzBhBlB,CAAC,ArCFR,EAAmC,AW9ClB,AsC0DjB,CACJ,CtC3DkC,CmDgEhC,GnDhEmB,C4DckB,CAAC,AvEgCpC,AW9CoC,C4DcD,AlCkCnC,CkClCE,AvEgC2C,CiDY7C,CfpCF,AvBtBmB,CsC4DrB,CZZ4B,A1BhDkB,IX8C1C,EAAqD,GqCErD,AYUA,CtC1DiB,CAArB,AsC6DA,CZbwC,OAAO,CAAC,GYU5C,EAIJ,MZdI,GAA0D,IAD5D,GYWE,EAIY;AtC7DjB,AeoCA,EiDsDE,AL7EA,AQdD,AxDqB0B,AUN1B,A1B6C6C,ANb7C,AiDiBA,AWtCA,AfiBA,EgCaE,AfSA,AzBfA,AgDAA,ApD5BA,AkB+BA,EoBtCG,AjCJD,AmDCA,AxCoDE,AJrBF,EgCcA,AfQE,A+BHC,A1CTD,C0BID,AfQE,A9DlBA,C8DkBC,CgBjER,AxDqB0B,AgBVjB,ANIT,C8BkDM,AxC5CoB,AUN1B,Aa4BU,CiBsBR,AxBtDS,EtCoCE,A6CJA,CiBsBC,A2BrDA,AzFmCA,A6CJd,CMUe,C2BrDf,AWYgB,AtCyCA,AFWE,C6BhEN,E9CeZ,AiBiDqB,CjBjDrB,AmBsCM,AnDNO,C8DkBQ,C9DlBC,CsB1BI,AmETH,AtCyCA,AFWF,CaCG,A2BrDA,CnESE,AgBVf,CwBsDe,AxBtDT,AtCoCJ,E8E/Cb,A3BqD4B,AnDNA,C6EUD,AfQE,A9BlD7B,C6C0C4B,ACzDH,CxDqBC,CAAA,AgBZlB,ANMR,AmBsCE,EsClDM,AtCkD0B,CWYhC,C9DlBW,EAAyB,AiDiBjB,E6BhErB,A7BgE+B,E6BhEM,E9CerC,C6C0C2B,C7EVd,C6EUgC,C7EVG,E8E/ChD,EAA6C,A9E+ChC,AiDiBQ,C4BPM,A7EV3B,CiDiB6C,C4BPQ,IAA1B,EAAgC,G5BOtC,EAAoC,C4BP9B,EAAwC,O5BO9C,CAArB,C4BP2B,A5BKX,C4BNd,A5BUF,E4BRI;AJVA,AzEAL,AW7CD,AiD6CC,A0BDD,A5DRA,E8CkCE,ALEA,ArE1DC,AwEDD,ANGA,A1CGA,AERA,A+DEA,ArDOC,AjCFA,A4CuBD,EQxBE,AUGA,AevBF,A/BiEE,AqC/CA,ApDFA,A1B6CA,EuEFE,AVgBE,A7B/DF,AmDCA,AIkDG,A1CTH,ANVA,EiC5CJ,AnBuEM,CaEC,ACzBO,ApB5BR,AUGA,AhB0CC,AqC/CD,C/BEC,AUGA,AqBLA,CjByDI,AoB3DX,AvDAS,AmBsCA,Cb1CC,AqB2DE,CaEZ,AKdW,AC3DX,CX2Ec,A7B/DF,AhCiDA,C6DcG,A3C7Df,A2BwCI,C2BrDF,AdkBF,AxCLA,AQEc,A1B6CA,C0D1Cd,AyBNe,A5C+Bf,CgCeI,A1BLY,AQiBE,C8B1DD,A5C+BA,CPnCT,A8CSN,CjByDY,AoB3Dd,A5BuDqB,CmBtEnB,ASeU,AvDAV,CmC2DqB,AW1ErB,AMiBkB,C9E0CyB,CkB9C7C,AmCyDyB,Ad3BzB,CsB+B0B,AHxD1B,AxCLA,AiEDwB,A9B0DE,CmBtExB,AdkBF,AoBDoB,AKLK,AtCyCA,ANVA,CQxBvB,AyBnBA,A3BqDwB,ANV1B,CsB+B6B,AoB3D7B,A5BuDqB,CAAS,Ad3BF,CEqB1B,AwCjDiB,CTfjB,A3BqDE,ANVJ,CrB9BA,CuBmDgC,AFrBA,CsB+BlB,AtB/Bd,CsB+BA,AJpDE,AvCTF,A4DIoB,CNjBX,AjC2C0B,C4BI/B,AW9B8B,AKf1B,ChB8CR,AV1BoC,AlBqBpC,CkBrBE,CevBF,AdmBA,CLoDqB,EKpDrB,ALoD4C,CyBrDH,C5DJjC,A4DIkC,ErC+CI,GvBnD9C,AuBmDiD,EvBnDpC,CiDkCT,AduBiB,CAAf,CcrBN,AT/BA,AoBDoB,CAAlB,KX8BE,EAGJ,C1BcE,I0BjBE,EAIJ,MAJI,EAKJ,WALI,EAKO;ARFP,AOuBL,AvDnDD,AJwBM,AbGN,AiFPM,ERYJ,AEqCA,ARhBA,ArEzDA,AkCFC,AEQD,AjCFA,A0BuBA,AsBqBA,CjBpDA,C6C6CG,AfMD,AlC1CA,AyBFA,AUGA,AetBA,AdiBA,A/CGJ,AORI,A0BcA,AHsCA,AqC/CA,AGJF,AFmCE,AQRO,A1CYN,A7COD,CuFnBA,CpBYE,AEsCF,ARjBE,AI5DA,AjCHA,AmDCA,A9DgCA,AsBqBA,C4CzBN,CN1BE,AFmCM,AQeJ,AvFJI,AqDUA,CMrBQ,AHeP,AlC1CD,AsBKA,AuCfC,A5EiCO,AoEJA,CNkDZ,A/CrEK,AsBKA,A5CiCC,C6DcC,AHxDA,AxCLA,AiEDA,CnDDC,AqB2DE,CGND,A7C3Cb,AsEPE,A5BwDa,CQID,ALVA,AxBrDA,C6B+DZ,AHxDS,AxCLP,AG+BW,C4D7BX,A5BuDc,CGND,AxDN8B,CwDM7B,ASlDA,AjCPR,AmDKQ,AJqCd,A1DLc,C4C9BC,AkBFA,A9DgCjB,AdCI,C4DQc,A5DRO,A8CyBL,CGND,AZrCjB,AS2CmB,CGNnB,AyBjDA,AEdM,AxCgEY,CwBZC,A7C/BnB,A2DPA,CzBiDoB,AZrCD,ArCkBjB,C4DQJ,AXWuB,ASlDnB,AtBmDmB,AgCxBnB,CrDnBmB,AfuBM,A8CyBb,AsB7Be,CM1B7B,A5BuDyB,CGND,ASlDA,AgBCxB,CtBkCE,AHeuB,AE9ClB,Af+Cc,CgBfvB,ArC5BuB,C+BgDI,CGNG,AE9C5B,AuBHA,EhBDE,ArBaF,AqCZM,CN0BJ,EAAsC,CnBuBxC,Ea2BA,Ab3BoC,Ea4BlC,Ab5BoC,CAAtC,EGfE,AHeuC,AmBvBvC,EhBUJ,ArC7BuB,AqDmB2B,GrDnBhD,GqC2BE,AhBgBmB,EgBbvB,AhBcE,AUIyB,EgBqBzB,AhBrB2C,EMrBzC,AU4CA,EVxCJ,IUsCE,A1B1BqB,EgBhBnB,AU6CA,A1B3BF,CUGyB,CMhB3B,CUqCE,AhBrBwD,EMrBtD,AU8CA,EVzCD,ENgBwB,EgBqBzB,AhBrBgE,EgB0B9D,G1B/BmB,EAGrB,C0B4BQ,CAAC,AhB1BgB,CgB0BjB,AhB1BM,CgBqBd,AhBrBI,EgB2BF,MAAM,A1BhCa,C0BgCZ,A1BhCX,C0BgCU,CANR,CADF,EASE;AHzBJ,AvDrDA,A0EOA,E1B4BE,ADrCC,AxCLA,AwDoCD,AhDjCA,AmBqCC,AxBRD,AdAA,AoCyBA,AJ5BA,AoCDA,CjBzBA,AxCLA,A2B6BA,CwB2DE,A/C5EA,AsBKA,AyCDJ,AEqCI,AvFJA,EwDIE,ASlDA,AjCHA,AiDIA,AEHA,AxC0DE,AgC7BA,ChBcD,A0B5BP,AVcS,E3EmBA,AOfA,CiDmBC,AkBfR,AnCPQ,AoCDE,ChBcD,AU4CA,AbnCA,AkBfT,A1EWS,C2DLC,AHSA,CSlDC,A1D+BA,CiDmBH,AjBtBR,CoBaa,AU4CX,AbnCE,CGTC,C3B5CU,AzBkCA,CoDUC,AHSA,AyBjDA,CjDJC,AhC8C4B,A2EhB1B,ChBcD,AsBxCA,APkClB,ACRoB,CDQpB,AnEJmB,AoEJA,CpEIC,AoEJpB,ChBcqB,EhBeI,EgBfA,AsBxCA,CtBwCC,AMzCtB,AgBCsB,AtCuDE,CwC1DD,EnDNnB,AmDMqB,CTqC7B,AnEJO,CiDmBwB,CGT/B,AHSgC,CAAD,AkBf/B,AnEJiC,CoDUC,AHS9B,CGT+B,CwB3CC,AxC0DE,CwC1DD,A5EiCA,AoCyBE,CgBfD,AsBzC9B,A1E+B8B,EoDUtC,EAA0C,CeN9B,CfMgC,CAA5C,CeNA,CfM+C,CeNhC,AnEJkB,CAAgB,IoCyBrB,EAA5B,KwCtEQ,A5E6CyB,CAA4B,IAA5B,CAA1B,GAA8D,IAArE;AIzBF,A0EOA,AZOA,AlEYC,E4DOC,AE+CC,AR1BD,AHtDA,AxCLA,A2BwCA,A8BbA,EhBcE,AYEA,AfOC,ASlDA,ASmCD,AKDA,AQgBA,AlEnBA,ArBeA,AuClBA,C0BnCA,CjCIE,AiDIA,AEHA,AR6BE,CRWD,AQXE,ChBcC,AYEF,AQTA,A1BqBA,CQIC,AkBzBA,AxCNA,C5BvBT,AXyCU,A2EnBE,ChBcC,AQHF,AFtCA,ASmCA,CPGC,AIKA,AvEGA,AqDSA,CkBZC,CZFG,AEkBF,CMrBC,ANqBA,CMrBR,AxDjCP,AwEPgB,ATqCA,AKDA,CAAC,CpBOG,AQHF,AxDjClB,AwEPkB,CxB2CG,AYEjB,AIhBiB,ChBcD,AQHA,AnEI2B,A2EfzB,ChBclB,AYEiB,AVgBZ,AchCY,CAAnB,CRWqB,AdiBA,CQIC,A7B9DA,A0CsCb,AKDP,A1BqBoB,CQItB,AsB7DuB,ATqCA,ArBoBF,CrB1DG,AmDCA,AJoCA,A1BqBd,CQIe,CMrBC,CAAC,AcrCA,A5BsDA,Cd3BpB,C0C3BsB,A1C2BT,I4BUpB,CnCzCkC,AO+BhC,C4BUiC,CAAC,AcrCA,CAAC,APkC5B,CAA6B,CPGC,AdiB7B,EcjBV,AOHS,CAAP,CPGyC,AdiBA,CrB1DnB,AqB0DoB,CcjBC,CAA7C,AnCzC8C,CqB0DC,CcjBC,GnCzCxB,EAA2B,KqB0DO,CAAC,C4BxDnD,K5BwDuC,GAAqB,CAA9D,EAAiE;A+BpDzE,ACSA,AhGcM,AkBON,EiDkBG,A7C9CqB,A+D+BrB,A/BoBD,AgC5BA,CDMA,CfQE,AQHA,ANqBA,A9BxBA,AoDnDM,AIkEN,AvFJA,AuClBA,C4C5CA,CZ2DE,AN3CA,AgBCA,AFiCA,ApCqBA,AgC5BE,ChBcD,AgBdE,CRWC,ANqBA,A7B9DF,CDsCC,A1CVO,AkDGP,CoBaC,AwB3CJ,AEaN,AhC4CU,AsB5BE,ChEvBY,AoE8Bb,A/EYA,CmERG,AIKF,AVgBE,AlDvDU,CsDJX,AjE8CA,CmF/DX,ChBuDe,AIKF,AVgBE,A7B9DF,A+CqCA,CEjCC,AIUhB,ANuBgB,C1BqBC,C4BtDC,AIUlB,CdgCmB,AQTA,AJPE,CRWC,AIKF,AVgBE,AkBzBX,AJPW,CRWC,ANqBA,AlDvDC,AgEuBH,CRWC,AYJA,AJPpB,CRWE,AxDlCoB,C4DuCA,AVgBP,AkBzBO,CpBOC,AYEA,AxCRrB,ACtCqB,AiDIA,AtCsDA,CgBdC,AEkBtB,AoB1DsB,A5FwBpB,C0FSqB,A1FTO,C0CW5B,ACvCsB,AqB0DA,C1CnDJ,A0CmDK,C1CnDL,AtBqBlB,AsD8BwB,AUAA,Ad3BrB,CgCeW,AN3Cd,A1B4BgB,CP/BM,A+CqCI,A1FTO,CgE8BN,CkBZC,AlBYN,CkBZT,AxCPN,AsBmBH,CkBZJ,AxCPQ,AkDtCJ,E5F2BJ,CsD8BJ,CtD9B6C,CsEgBtB,AhBcgB,CX1Db,AO+BxB,CoBauC,C3B5CV,A+CqCN,CAAkB,IpBOpB,A3B5Ca,A3C4BhC,C2C5BiC,C2B4CY,A5BL7C,ACvCgC,A+CqCX,A1FT6B,C2C5BvB,E2B4CR,AoBP6B,C/CrCV,A+CqCtC,CpBOkD,A5BLtB,CgDFuB,CAAC,G/CrC9B,A+CqCiC,CpBOpC,A3B5CjB,C+CqCF,CpBO0D,C5BL1D,AgDF2D,EpBOxC,AoBP0C,CpBO/D,A5BL0C,AgDFxC,EAAgE,KhDEjB,CAAC,eAAhD,GAAkE,KADpE;AvB5BJ,E6D8EE,A1DhFA,AKCA,AqEKgB,AX0BhB,ArFXA,AWe6C,CAA7C,C2DCE,AQHA,AIKC,AVgBD,AI3DC,AlCqCD,AoDtCA,AImDA,A5D5CA,AgBiDA,E0B8BA,ArCxFG,AiDID,A5FwBE,AkDE2B,ClDF1B,CwEkCC,AkBzBF,A1BqBC,C1BjDD,CgCmCE,AU4CN,A1C/EK,AtCmBG,C2BpBV,AiEJS,AISO,CAAA,ANwBN,CpBOC,AEkBE,AoB1DF,AFiCA,A1FTE,CAAC,CgGfE,C1B+Bd,AEkBc,CwBjDA,ClB4BA,CxChCd,CsDLgB,A5FwBlB,AsD8BkB,CwBjBC,ANqBE,AoB1DF,CpB0DG,AlCrDH,C0DIH,ANwBV,C/D7BN,AqEKgB,A1C6CM,CkBIN,A7CtDJ,A+D6BW,CErCf,AtDSN,CkCqDA,S7CtDF,EAAuB,EqDgFrB,EACE,C1B/BF,CwBjBwC,CACtC,YE8CF,EAEE,CFjDsC,EAEtC,GE6CF,EAGE,CFlDsC,EAGtC,AE4CF,EAIE,EFnDsC,EAItC,EE2CF,EAKE,EFpDsC,EAKtC,EE+CM,CAAC,CAAD,CALR,EAME,IFrDsC,EAMtC,AE+CM,CAAC,CAAD,CANR,CFzCM,AEwCR,CF9C0C,CEuDxC,CFhDE,cAPsC,CAAxC;AlCtCG,AiD+BD,EvBWH,AYEA,AfMD,ASjDC,AoBUD,A1C6CC,AgC5BD,CV7CA,CEgEE,AE+CA,ARlCA,AdtDA,A/BDF,AgBhBQ,ACWG,AQmDT,AqC/CA,AS+CA,A5D3CA,CKnBA,CwB6DE,AyBhDA,AN0BA,EdgCE,A7CvDN,AuBuBI,CQtBE,AN6CC,AqC/CD,AI2BQ,CfgBN,ApBzCD,AfRH,A8CMG,AC+BC,CV2DC,AY5FA,Ed6CE,AnD1CX,AiEHW,CzBgDC,AmBtBA,CNkEV,ApC9FoB,A0C4BT,C3DvBb,CmD0Ce,CAAC,AXGA,AvBlDS,CACzB,AQkDE,CzB9CF,AiEHkB,AFiCA,CEjCC,Cd6CC,AXGA,AfCA,C0BJC,AXGA,AvBjDjB,A6CGF,AC+BmB,CtCgBnB,CkCvBE,CdgCoB,AiBxDD,AGPf,ElCSN,AgC6BwB,AGJtB,CfgBY,ANaW,ALVX,A0BnBkB,CrB6BhC,AchC0B,C5BtBA,A4BsBxB,CRmB0B,CAAf,AXGgB,CWH7B,AXGF,CT5CE,A4BsB+B,CnBsBC,AmBtBA,EOG9B,CPHiC,CIOhB,AGJwB,CjD9B7C,A8CkCuC,C9ClChB,A8CkCF,CD/BmB,CAAC,EC+BG,CJPC,CAAC,E1C3B9C,AiD8BI,CjD/BqB,A6CIuB,AC+BC,CD/BA,AI2BQ,CjD7BzD,IAAI,C0C0BiC,EAArC,EAA4D,AOGxD,CHIwC,CD/BJ,AC+BsB,AGJK,CJ3BjE,AC+B6D,GAAG,CAAtB,CAApC,K9CjCR,CAAuB,WAAvB,EAAoC,KAApC,CAFyB,EAGzB,IAAI,kBAAJ,CAAuB,+BAAvB,CAHyB,EAIzB,IAAI,kBAAJ,CAAuB,0BAAvB,CAJyB,EAKzB,IAAI,kBAAJ,CAAuB,8CAAvB,CALyB,EAMzB,IAAI,kBAAJ,CAAuB,8CAAvB,EAAuE,KAAvE,CANyB,EAOzB,IAAI,kBAAJ,CAAuB,4CAAvB,EAAqE,KAArE,CAPyB,CAApB;ARUP,E0CsCG,AE+CA,A7E5FD,AwEFA,ACEA,AjCJC,ArCQD,ANmBA,AWqBA,AkFfA,ErB6BE,ALVA,AT3CA,AyBrBA,A5B4BA,AHsCA,AqC/CA,AS8CA,AlEnBA,AsDJA,EM1BE,A5FuBA,AkDGD,CvCkBE,C6DcG,ALVF,AhEhDN,AuFiCO,A1BoBD,CGLC,AhEhDP,AgFhBM,A5B4BA,AmCmBA,A1FRC,A6FMA,CrB6BG,AW1EH,A5B4BA,AvDWC,CAAD,AWqBE,A2ElBA,CX5BT,ArEMA,ANmBI,AWqBM,C6DcG,AG5Db,ArEMA,C0B0BY,CmCkBV,AgBhEA,AOiDW,A1DHX,ArBcW,AqDSA,ChE9BC,AWqBT,A2ElBH,C/BdA,AqCZa,A5D8BF,CmCkBG,AhEhDhB,AgFhBe,AxE4DC,AkFfhB,C1BmBE,AhEhDF,AyFAiB,CThBf,A5B4Be,A5CgCC,EgE9ClB,ArEMA,ANmBA,C2EzBA,ArEMA,AKwCqB,CXrBC,EuDXpB,AqCZsB,A5BqDA,C4BrDC,A5BqDA,CQKG,AG5D5B,AXuDwB,CQKK,ARLvB,C1DjDN,CqENA,ErEMA,CkEsD4B,CAA1B,ArE1DF,GAAA,IQ4CwC,CgE9CxC,AhE8CyC,ELxCzC,GHJiB,CQ4CjB,EAAiD,CR5CjD,AQ4CkD,ER5C3B,CQ4C8B,EAArD,EAAyD,EAAE,CR5C3D,AQ4CA,ER5C+B,AQ4C+B;AgFd1D,AEAL,EvBUC,AYEA,AfOC,A9BjDD,AEOA,AiB+BA,AFgBA,AgC3BC,EdgCC,ArE1DA,AwEFA,AQbA,AxDiBA,A4BWA,AqCpBM,AMwDN,A5F7CA,ANmBA,AWqBA,CiFnDA,CtFWE,A0B0BA,AsBuBE,AUAD,CA/BD,CQoCI,ArE1DF,AwBEE,AhB0CA,C2DLD,AYEA,A/EzCA,AwF6BO,CnB6BJ,AoB1DN,AFiCI,A1DHA,C2ChCC,AtCCT,AEOA,AjCFS,AkDiCT,AxDdS,CsEgBT,AjCxCA,AEOA,AiB+BA,AxDdE,CkFkBF,AViBa,ArE1DP,AQ4CO,AqDSF,C4B7DX,AFyCY,CfnCC,AhDIE,AK4BX,CrBcY,CR5CD,CAAC,AwBEE,AgE2Bd,CDIa,ACJO,CrFzBtB,C+BLF,AEOA,AiB+BA,A7COqB,C0B7CrB,AEOA,AiB+BA,A7COsB,CAAC,EgE9Cd,ArBuDgB,CnDrDvB,AwEFsB,AhE8CE,CAAL,C6DcO,ArE1DF,AQ4CxB,A2CS0B,CkBKC,A7CxDA,CUH7B,AEOA,AoDuBI,ChB/ByB,AemCjB,AlCIZ,C7BnCgC,A+D+BF,ACJK,CDIvB,ArDlCZ,AEOA,CiCoDkC,AhBrBlC,GgBqBqC,AkBzBF,ClByBP,AlBLU,CkBKpC,AlBLqC,GoCpBC,C/D/BX,EUH7B,AEOA,CoCRwB,AhDIsB,A6BmC9C,CmBvC6C,ChDI3C,IgDJsB,EAAf,AemC0B,CAAkB,ApCoBzB,CqBvD0B,AemCA,CpCoBtD,EoCpByD,CAAtB,CfnCwB,AemC/C,KAAoD,CfnCvD,CAAP,QemCM,EAAoE;ApBO7E,AYEA,AlCrBK,A9BSA,AGhBA,AwEiBN,EfcE,AE+CA,AL7FC,AhCHH,A3C4BG,A2FMD,ChBjCA,A3EyBA,CwEqCE,AvCnDA,ANJA,AiEFA,AMgDA,A7DlDA,AEOA,AjCFA,AkDiCA,ANZA,E/CzBE,AwF6BE,EnB6BE,A7CvDA,AqCkDF,CcTC,AE+CA,A/CpFD,AUZR,ArCSS,ANmBA,AgDHO,A9BSA,AGhBA,A6BYP,CsBiCG,AvCnDH,CIRE,AEOA,AiB+BA,CkCJC,ClByBG,AxEnCF,CgFoEX,C3C5FS,A2BsDI,CzB/CC,AiB+BA,AmCRE,GhE1BG,A3BoBF,A2FME,CnCQV,E7BlCa,A+D8BF,AnD3BlB,AjCFA,CwEwCF,AxExCqB,AkDiCA,AxDdA,AkBMjB,CetBF,AfsB2B,A8CwBvB,C0BpBiB,A1CbnB,CrBjBkB,A3BoBE,AgDHO,CfbP,AUZ1B,A3C4B2B,CwEmCG,AhBrBF,AxDdA,AkBMtB,CsD6ByB,AnC3DpB,CnB8BwB,AgCJ1B,AyCIuB,C1DtBN,AjCgBK,AqBVzB,A6BYgB,Cb1BlB,AmBsCO,AxDde,AqBVa,CmD6CT,AxEnCrB,AqBVH,CmD6CF,AkBzBQ,ACJwB,CnCQD,AxDdA,AqBVO,CmCwBtC,ARjBE,A3BPA,AsEgBJ,ChE1BsB,CqBiBqB,A3BPA,CMVd,CNUzB,CMVkB,ArBCD,CAAU,AeSgB,A6BY7C,CvBtB+B,CNU7B,C2BOA,C3BP+C,C2BOD,Cfb1B,A3BHtB,AeSE,EMVkB,ANUiC,CYNrD,ANJA,CNUE,EAAqD;AiD4B3D,AQIC,AE+CA,AEjDD,AzDvCA,AkBzBA,A3BOM,C2BPN,CwBqEE,AQhDA,ANGA,A/CDA,AqBvB+B,ANqB9B,AEOA,AjCFA,AkDiCA,ARjBD,A9BSA,AGhBA,AiCuCA,AgC3BA,AKKA,CtDjCA,AEOA,AjCHA,AkDkCA,CgBuBE,AvClDA,A9BRC,AiEOD,AzCHA,Ae+BA,AwDcA,AlG1BA,AWoBA,AuClBA,ElBIE,AgBTE,A3BPA,AiCuCF,AUCC,AsB5BC,AKKA,EnB4BE,AxBtCA,ArCuBF,AU9BE,C8CkCD,ACxCD,A1B4BC,AxBNA,AF5CO,AkCwCP,CsBiCG,AJnDH,ApCsBC,CV5BR,AKGS,A3BmBA,AgDHE,A3BPA,CqEoBD,A1FVA,A2FOE,CnB4BC,ALXb,AxDJW,AOdA,AGhBE,CHgBD,ClBNC,AgCMA,AhB5CT,AsEwCW,AKKA,CtB5Bf,A3BiCE,A1CZA,AgCMY,AhB5CO,AK4BL,CgDXhB,C1DyCgB,AU9BhB,AiEYkB,C5CUD,CpBlCjB,CAAY,AqBvBd,AK0CuB,CrBhBD,AgB1BtB,AK0CwB,AhCnClB,CWmBiB,AqBgBA,A9BSrB,C8BTA,AhCnC6B,CE4CN,AoCuBA,AqCtBE,CtB5BzB,A3BiCwB,A4CVE,AKKA,CtB5B1B,A3BiCyB,A/BQvB,A2ElByB,CdiCC,AlDzD5B,CkDyD6B,A7DfF,AK1DvB,CMgBe,AKGjB,AKyBM,AsBuBoB,AJ3BrB,ClBIsB,AhB5CO,AkCwChB,ClBIZ,A2DCO,CnB4BkB,A9BvBhB,AVNb,EAA6B,CwC6BG,AmB5BA,CnB4BR,AJnD1B,CImDA,A9BvBkC,CYiBpC,Cc7CqC,AuBuBD,C3E7ChC,AsCmEmC,CJ3BrC,ClCxC4C,AsEwC5B,ClBlBmB,AkBkBO,CjBvB5C,AiBuBkB,CAAlB,C5CUiB,C2BjCjB,CsB4BoC,CjDKY,CiDLE,MjDKK,CAAC,E2BjCxD,EsB4BoC,EjDKnB,AiDL8C,CvBvB1B,EAAW,A1B4BiB,KAA/D,CiDLkC,EAApC,EvBtBI,QAD4C,EAE5C,gBAF4C,EAG5C,aAH4C,EAG/B;AYmFnB,Ab7CC,AxBpDD,AoDMA,ElEJE,AmEUA,A3DPA,AEOA,AjCFA,AkDiCA,AxDfC,AgDHD,AhCnCA,AK4BA,AsEkBA,C3FVO,CqEnBL,A/CFF,AKIE,AegCA,AqDnCJ,ADLI,AIqDA,A5D5CA,ApBwBA,AoCuBA,AUCC,EI1CC,ApBSE,ArCuBF,AK1DA,AK4BE,A6BW2B,AyCO3B,ErE/BN,AU6BM,AgBTE,A9BSF,AGhBE,CyEjBF,AxDSA,AtCkBC,AkBMA,CkDlBC,A0BfD,AJqCE,ApD5BF,C8BME,ACTA,A1CEA,AqEGT,AhDaW,ArCuBF,AU9BE,CV8BD,CW3CV,AyECF,A/D4Ba,AXhBE,C2ENb,CnEVA,AmEUY,A1DFV,C+BHY,A/CDZ,AOJF,AGgCc,AhB5Cd,AK4BgB,CsEkBC,CrD1BF,AtBpBC,AK4BhB,EHgBE,AoCuBgB,AqCrBE,C3DFD,AgBTE,A9BSF,CI5BjB,AKGkB,AKyBA,AgBTE,C1BnBpB,AKGmB,AKyBF,AgBTE,CoBTjB,ApCkBE,AgBTN,AMgCsB,CzBvDtB,AXgCuB,CkDlBC,AvCdxB,AmEUA,A9EsBwB,CI5BtB,CAAA,A0EMqB,G3BLd,A1DyCoB,C0DzCC,A/CD5B,AX0C4B,CAAD,CmF/C3B,AnF+CO,CAAL,AOdF,EmD3BO,A/CDA,AwEJL,AxDQW,C+BHqB,AxCLpC,ASQ0B,A3BsCU,C0DzC3B,EAA8B,A/CFvC,AOHA,CiEAQ,AxDQN,CwDRO,AnF8CL,A2CSF,E3BhDA,C0CF0C,KxCL/B,CwCKJ,CAAP,KyBLE,GjEAJ,EAAuB,AiEAM,OAAO,CAAC,SAAR,CAAkB,eAD7C;A3BqDJ,A4BhDA,A5EKA,Ad0BM,EgE7BH,ArBkBD,A9BSC,AoCuBA,AU3CD,AsBeA,CjBxBA,AfkCgB,CkBuBd,AdrDA,AvDLA,AmBGA,AOLA,A4DKA,AKJA,AESA,AE0CA,A5D3CA,AtCiBA,AWoBC,AK1DD,AsCqEF,AqCvBE,E3DFG,AgBTC,AsCIF,CtDGA,AsDHC,CnFzBG,AiEYF,A4BJE,AN0BD,A1FVD,AkDCF,CsBiCG,AdrDD,A+BFA,AzFqBC,AKQO,CqD3BP,A+BFA,AE6BC,C9DlCC,AmBuBE,CrBhBT,A3BmBK,A2FQG,CnB0BC,AxC5BA,CwC4BC,AxBrCE,AhCnCF,CoD0BC,AvCdJ,AmEUM,AhFtBF,CAAD,AsEuCZ,CdiCe,ArE1DE,AHwBV,AgBtCL,CWmBA,AqEGgB,AhGgBhB,AsFCc,AKMI,ChE1BlB,AuBoBa,C/CzBK,AiEYF,ApD1BA,CgCmCG,CwBqCD,AxBrCE,A3CWlB,CsB3BF,AqBgBmB,A3CWO,CsB3B1B,AqBgBF,CwBqCuB,ArE1DE,CuDKvB,ArD2BE,AW9CoB,CAAC,CWmBvB,AtB2B6B,AW9CP,CaYf,AmEUoB,AhFtBX,CWmBV,C6CqDN,C3C5DA,AbZ4B,CwDwEC,AwBlDE,CxBkDD,AiBvD9B,CtFHkB,A6FQlB,ExBkDiC,AiBtD/B,AzElBF,GbcsC,CqE0DtC,AJ9CW,AzCPX,CyCOsC,CI8CC,CAAC,AiBtD/B,CtFJkC,AsFIjC,C9DCQ,E6CqD0B,MAA5C,CrE1DsC,CqE0Dc,ErE1DI,AiEY7C,CAAP,CjEZc,CAAlB,OsFIE,KAAoC,SAApC,GACI,OAAO,CAAC,uBADZ,GAEI,IAHN;AZuDE,AkBzDN,A3DQA,AlBsBC,A8CwBA,AjChCK,EsClBJ,AxCNC,AwDoCD,ArCbA,ArCuBC,ANZD,AgBnBA,AiC0CA,CzB3DA,C6BUE,AvDNA,AgFfA,AxDqBA,A4BOA,AHqCA,AqC3CA,AOEA,AEyCA,A9D1CJ,ApBtBI,AsEuCA,AKOA,EnB0BE,AJ9CC,AsBsBA,A1CbC,A3CWF,AgBnBA,ElBbI,A6FSF,A5DDR,AJsBQ,AXjBA,A6BWY,C2BiCJ,AMxER,A5B4BA,AHqCC,AJ7BE,A3CWF,A0BVO,CyCoCJ,AWzEH,A5B4BA,AwCbT,AVkCE,CbwBW,AaxBX,ACTS,AKOA,C3DFC,AgBTE,AjBCR,C1BUO,AgBnBA,AsEmBA,A5DVO,CyCoCJ,AxDxEF,AK2BR,CL3BS,AsEuCX,CSzBJ,A1FgCgB,AW9CF,CuC2BV,AlDmBa,AW9Cb,C+EcJ,A1EakB,C2EJC,AhDYE,CORF,A8BqBjB,ArCboB,AhCnCF,AK2BA,CgEqBlB,ArDJmB,AgBTA,CgDXf,AhDWJ,AjBCI,C1BUJ,AsFAqB,CxFhCG,AoDatB,AHqCA,AuClBoB,A5DVO,CCQN,A3BEA,AgBnBA,AUSnB,CfpCoB,AK2BxB,ClBb2B,AiDkDF,ApChEA,AeoCO,CsDYhC,ArEhDwB,AK2BE,AUStB,CyCoCyB,AwBhDlB,AhFxBO,CwDwEY,AwBhDlB,AjEYuB,C8CmC/B,ALCyB,AaxB7B,AMJoB,A5DRhB,C8CoCJ,ALAI,ApBRF,ApChE4B,CeoCQ,CAAlC,E5BtBgC,AgFflC,ApDqCuC,C5BtBJ,AadnC,AeoCE,EoDrCgC,AnD6C9B,ADRsC,CoDrCP,ApDqCjC,C5BtBgC,AgFflC,AEiDM,ArDJ+B,C7B9BZ,AkFkC3B,AtDZ6C,EiEZzC,AXwBK,GRuBL,A1EzD2C,E0E2D/C,AmBjD+B,MnB+C3B,C1EzDoD,C0E4DxD,A1E5DyD,C6FUrD,G7FVoD,A6FUb,CnB+CvC,A1EzD2C,E0E6D/C,C1E7DiE,EAAtC,CAAzB,A6FUgD,CAAC,CnB+C/C,EAKJ,CALI,EAMJ,CANI,EAMH,KmBrDG,GAAgE,IADlE;A5DDJ,AlBwBA,A8CwBA,EaSE,ADjEA,A/CAA,AkEAsB,A/CsBtB,AMkCA,AgC9BC,AvDHD,CuDCA,CHrCE,A5B4BA,AHqCA,AwCnDA,APkCA,AKAC,AQgBD,AlG3BA,AKSA,AW9CA,AK2BA,AsEmBA,EdgCE,ALNA,AxBrCE,C4BtBN,AvEiCK,CuEjCL,ASmCM,ArFXA,AgDFE,A3CWF,AgBnBE,A6BWF,C0CxBA,AvEaG,AiEYF,CdiCG,AoB1DH,A5D8BC,C6CkCC,ALNE,AuB3DW,A/CsBX,AjBCF,C8C0CC,AehER,AGDoB,A1EcV,AsEmBF,A5DVA,CsDYC,AhErBE,AUSJ,CyCoCK,AxC5BF,A3BEV,AW9CU,AK2BE,AsEmBF,A5DVZ,CCQa,A3BEA,AW9CA,AK2BE,CgEqBD,ArCbE,AhCnCJ,AkCqCgE,C0BxB5E,A5EwBe,AgDFE,AhCnCf,AkCuCI,AnBHS,C8C0CX,ADjEJ,A5C+BgB,AgBTA,A3BRE,AUSlB,CCQQ,AgBTR,ChDEkB,AgBrCA,AK2BL,C0EdS,AVmCH,ArFXjB,E6EyCmB,AkBjEC,A/FwBD,C6EyCrB,AxDnDwB,AsEmBF,CAAC,CdgCC,A7D9EA,AK2BX,CL3BY,CqEgDvB,ArEhDsB,CwDwEK,AuB3DP,A/EbJ,AK2BW,CmD6CC,AuB3DR,A1EcQ,CmD6CC,AnD7CA,A6BU6C,C0BxB5E,A5Db8B,CkCqC1B,AyCMgB,CnB6Bc,AnE1BhC,AgBnBgC,CmD6CL,AI3D7B,AvEiCiC,CmE0B7B,AnD7CyB,CL3B3B,CX8CkC,CAAC,CgBnBG,EAA5B,ChBmBV,EAAyC,EuEjC3C,AvDc+C,ChBmBD,CAAC,AgBnBE,GAAG,EAAL,GhBmB7C,AgBnBuD,EAAE,GAAG,EAAlD,CAAV;AeNJ,AyDuBM,EE9BJ,A/CsBA,ArCsBA,AoBrBA,E8C0CE,A1EjEA,AyEAA,AgBEA,AIQA,AN0BA,AQeA,A7FlBA,AW9CA,AsEuCA,AKOA,EnB0BE,AJ/CA,ApEYA,AgDFE,CrCsBD,CR5CC,A6FUA,AhDYE,ArCsBF,ANXJ,A6CPE,C2CIU,CrB6BJ,AJ/CA,AhCLZ,CyC0DW,ADjEA,A5EwBA,AgDFE,AsCIF,AvDHA,C6CvBC,A5EwBA,A+BDA,CAAD,CfpCG,AkCuCF,AnBHV,CqCXe,A4BFF,AhGcA,AgBrCA,A2E8CA,CdgCX,AmBvDY,A5DHhB,ApCiBM,AgDFY,ArCsBhB,AKzDY,C4DaG,A5BsBE,AhCnCf,AkCuCW,AyCOE,A5DVA,CqCXG,AhCLpB,ApCiBkB,AgDFA,A3CWd,AwFHE,A9DPJ,C/BCiB,AgDFjB,ArCsBiB,AkFdO,CxFGhB,AW9CU,AsEuCA,CAAC,CtFFC,A6FMhB,CzBlBmB,ApEYnB,AKSF,CFjCoB,AQ4CA,AkFdK,C1F9BJ,AHwBA,AWoBA,CKzDC,CwDwEC,AwBjDnB,AhGcmB,AgBrCA,CoDyBP,ApEYd,AgBrCoB,CAAN,CwDwEU,AJ/CxB,ApEYwB,CWoBX,A2ElBR,CnF1BH,AyEAG,AoBUqB,ArFkCA,AKzDA,AsEuCA,CnF1BC,AmF0BtB,CdiCmB,AtBjCE,C0B1BG,A1B0BF,AoCAE,CAAxB,CV1BA,AjE4CQ,AKzDf,AsEuCA,C3EkBkC,AgFXA,CAChC,CflCkC,CzEAhC,A6FUJ,EAAuC,CrFkCxB,CiE5C0B,AjE4C3C,AgFXoC,CzCPN,C/C1Be,AwFmCzC,CxFnC0C,A+C0BF,C/C1B1C,EAA+C,G+C0BnB,CAA1B,EyCSU,CAAC,EfnCuB,CAAqB,CJ2D/B,EAAuB,CAAvB,AmB1BQ,CfjCE,CJ2DgB,AmBvBlD,CnBuBwB,AI3D1B,EJ2DuD,EAA7B,EAAiC,EAAjC,CmBvBd,CnBuBmD,AmBvBlD,EnBuBa,EAAyC,EAAzC,CAAxB,CmB1BgC,EAIhC,UAAU,CAAC,aAJqB;AxEzBtC,E0D0DG,ADjEA,AvCAD,ADMiB,AoBgCjB,ARhBA,ArCsBA,ANXC,AiFPA,AKEmB,AEEpB,A9DPA,C6CzBA,Ae8BA,CjDSE,A2CHA,AaiBA,A/E5CE,AHpBF,AK0BA,ElBbE,AiEYA,A4BFA,AhDYE,A6CQA,E7FNA,AgDFE,A3BTF,A6BaF,CRWG,A/BOA,AU/BA,CWiBC,A6DAE,CzBlBD,AiBsBA,AhDlCT,ADMiB,AoBgCjB,ARhBW,AhCnCF,AeoCA,CqCXC,A/BZV,AlBOY,AiBDK,AoBgCjB,AxDdU,AqBXA,AUUA,CVVR,AwEiBW,A9DPJ,CiBDK,ArCsBd,AoBrBA,CZhBe,AnBiBF,AgCMA,AgBRE,A3BTF,AwEiBb,CRIE,AjD5Be,ApCkBH,AgDFA,CgDZC,AhGcF,AgDFb,AjBCe,CWcb,A2CHc,AjD5BC,ApCkBP,A+BDV,CCOmB,CgEpBD,CtD2BC,ALrCnB,AmBsCA,AxDdmB,AgBrCjB,CbakB,AuCqCA,ALrCpB,AmBsCA,AxBRQ,C7B9Ba,CuCqCC,AN/BL,CAAA,CgCMb,ApCkBsB,C7B9BtB,AiEYqB,A4BFA,AhGcnB,CGxBoB,A6FUA,CtD2BC,AcC3B,AxDd2B,EgCMnB,CwBQR,CxBRiC,EK9BjC,ClCAI,AuCqCkB,ELrCtB,C2DUI,C5BEA,A1ByBkC,IcCtC,CdD2C,KLrC3C,EKqCoB,CAAlB;A/BQH,ANXA,AiFPA,C3EFM,CiEvBL,ArCMA,ApBAA,AiBDA,AYgBA,AhCnCC,AsCoED,AqCjBA,AERA,A9DPA,Cf1CA,CiB4BE,A9BTC,AmBED,AKIA,AegCA,AoDvCA,AEWC,AEyCD,A5D5CA,ADPA,AmBsCA,EgBoBE,AJ9CA,AiBsBA,ArCZE,A3BTF,AiC0CE,AJ7BH,A2CIC,CRIC,CAAC,ArCZE,A3BTF,CYJA,AXPA,AKIA,AmEPA,AxDQA,AnBAC,AHpBA,A2EmDA,CnBoBC,AvCjDD,AXPA,AKIA,AmEPA,AxDQA,AtCiBC,CqCxBC,AEOT,ApBAS,AqC+BA,ARhBE,A3BTF,AwEiBA,A9DPA,CTrBP,AKIA,AYCF,AiB+BU,AxBRA,ADPA,CqCXC,AiBsBA,AhErBP,AsEyBO,A5DfF,CsDWG,ArCZE,A6CQF,A9DPZ,CiBDe,CXtBD,AL8BA,AgBRA,CQgBC,AxDdA,AgCMA,AgBRf,AjBCe,CqCXC,ApEYA,AgCMA,AsByBE,AvBhClB,CqCXiB,CiBsBZ,AlE5BU,CoBCf,AvCiBmB,AsD+BE,C+BrBD,A9C3BpB,AvCiBQ,CgCMa,CAAP,CwBQJ,CsCvCR,CtB2DqB,AaxBE,AhDlCvB,AmBsCO,C6BJiB,A/C3BxB,CwDRwB,AtCuCC,CgBoBD,AjCnD1B,APuB4B,A2DQrB,C1D7BL,AKF0B,ANuBlB,AsByBqB,AqCjBX,CNJf,A/BqB2B,CfhDhC,APuB+B,CCrBA,AoDyBC,A7BIA,EsCvCC,AD+BC,CC/BA,C7DUH,AoDyB1B,CAAD,CjBtBO,AyBkBC,CzBlB2B,Ad2ClB,AuCzBkB,CFQhC,CpD/BE,AiB+BkB,AFiB3B,AqCjBA,CERY,CrCQH,AqCRT,CrCQE,EgBoBE,AlCnDF,EkCmD4C,AjCnD9C,EAAgB,CuDRd,E7DU6B,EmCGpB,CnCHT,AmCGE;AzDkCN,AgFPC,Ed0BC,A1EhEC,AkEGD,AhCHC,AlBOD,AqC+BC,ARhBD,AjBCA,C5BhCA,AkCOA,AmBsCA,CvB1BE,AyBJA,AUMC,A9CTD,AKIA,AuE4CA,A3D5CA,AvBpBA,CoDcmC,AjDMlC,CiDND,AiBiCE,ArCZE,A3BTF,CwDmDC,A1DzDA,CqDmDC,AxElCC,AgDFC,A3BTF,CqCPA,AnBCC,CmBDA,CmB0DE,AQ9BA,ArCZE,AhCnCF,AK0BA,AUUA,C8CyCC,A1D3DK,AHjBX,AemCM,CyCmCC,AxBpCE,A3BTT,AUUK,CsDWG,ArDJA,ADPZ,C8CyCa,AtCzDX,CsCyDG,ALNS,AHvDd,ArBmBgB,CwBoCV,AHvDN,AtCoBe,C8CyCC,AtCzDA,ASehB,AhClCU,AemCV,CsDWiB,ArE9CN,C6D4EO,AQ9BA,ArE9CR,CgB0CS,AhB1Cf,E6D4EiB,AnB1DnB,C1ClBc,CqE8CZ,A9C3BF,CmBDqB,AWHvB,ArC2BwB,CqC3BxB,ArC2ByB,C6CkCC,AnB1DxB,CmB0DyB,A7D7ElB,CgB2Ce,CAAZ,AhBzCR,I6D2EJ,EAAmC,A7D3EzB,C6D2E0B,A7D3EzB,CAAD,CAAN,C6D2EmC,EAAvC,A7D3EgB,E6D2E2B,AR7D3C,EQ6D6C,CAA7C,AR7DA,ArDhBS,E6D6EuC,A7D1E5C,MAAM,CAAC,CAAD,CAAN,CqDaJ,ErDbgB,KAHP,EAIL,MAAM,CAAC,CAAD,CAAN,GAAY,KAJP,CAAP;A2BSG,AgD4CP,ExFtCE,AwEFA,ArCOC,ADLD,A/BIA,AaEA,AqCgCA,ARjBA,AhC9BC,AsC8DD,AuCzBA,A9DNA,E8CyCE,AnBzDA,AyBrBA,AdiBA,A1BRS,AYmBT,AHqCA,AqC5CA,AGNA,AEFA,AEWA,AXwBC,AaiBD,A3D5CA,AlBMC,A6BYD,C7BfA,CrBcG,AgDFC,AMgCF,AuCzBA,CvCyBC,CuBUG,ALNF,AsB3DA,AEWE,A7EHF,A6BeE,CmCpCF,A5B4BA,AHqCC,AqC5CD,AGNA,ArDMC,AWkBA,CiCvCA,A5B4BA,AkCPA,AGNA,AzEMC,CkDJC,ArBmBE,A3BTF,AwEgBT,A9DNS,C8CyCG,AFjEZ,ArEMA,AyBkBU,C4CxBV,ArEMA,A0CiBa,A6COF,A9DNF,C6DtBP,ArDMA,APuBU,ADPZ,C8CyCe,AlCrEO,AmDIT,AzEcA,CgDVC,AyBJA,A9D+BA,AgBRE,A3BTF,CoENZ,AlDAa,ARgBA,CY5BU,AqDeP,A7ENH,A6BkBf,AjBCA,CY3BA,AtBiBiB,AiCyCb,CuBUgB,AYzDH,ApEMR,CwDmDY,AmBrDjB,CnBqDgB,AFjEpB,ArEMA,AeQoB,CwDmDlB,AFjEF,AhCHI,ArCSJ,AgDiDqB,ECxCnB,AkCPA,AzDuBU,CwC4BY,ApBPtB,CEGmB,C6BpEnB,A5B4BuB,AyCHd,CxB+CgB,ApBNvB,A4CzCQ,C9CcL,CiCvCqB,AdiB1B,AyBJA,A5C0BkB,E4C1BW,C1CqDtB,A9C/CT,C6EnBE,A5CqBa,CAAU,CoCRzB,ArEMA,E0FMI,CrBZJ,ChCHA,CAAuB,AYkBrB,AhBPA,EyDIyB,C5CyCvB,CoBME,ApBNe,EF3BnB,C5CpBF,CqENe,CAAf,EAAkB,AhCHlB,AqDeI,A1C2CiB,CqBvDrB,AhCJyB,ASyDrB,CEEoC,CqBvDnB,AhCFrB,AqDcuC,IrDdnC,ASwDA,CAAC,CAAC,C4C1CwC,CAAC,G1C2C1B,CqBvDrB,CrBuDsD,CqBvDnB,IqBY/B,G5CyCA,A4CzCwD,CrDd5D,CAAuB,ESyDnB,AEAiB,CFAhB,AEAL,CFAM,CEA+D,IqBvDrE,AvBuDW,A4C5CT,ErBXmD,EhCFrD,CAFyB,EAGzB,IAAI,ASwDE,CAAiB,SAAjB,EAFF,IAGA,ETzDJ,CAAuB,CSyDnB,YTzDJ,CAHyB,EAIzB,CSwDI,EAAS,CTxDT,cSwDA,ITxDJ,CAAuB,ASwDU,IAAA,STxDjC,CAJyB,EAKzB,IAAI,ASuD6B,EAAS,KAAK,WTvD/C,ASuD0C,CTvDnB,ASuDoC,SAAjB,EAAT,CAJ/B,gCTnDF,CALyB,EAMzB,IAAI,kBAAJ,CAAuB,8CAAvB,CANyB,CAApB;A2B8CD,A3BrCN,A3BXC,EoDmBE,ACRA,A0BLD,AVoCC,A/C3BD,AnBAA,A6BeA,AjBCA,CsCtBA,AgB2BA,CV7BE,AQZA,A5B4BA,AHyCA,AqChDA,AGNA,AIUA,AEuCA,A3D5CA,AjCFA,ANmBC,AsD8BD,AJ7BA,A2CIA,C7FXA,CwEwCG,AsB3DD,A9CuBE,A3BTF,EsDdE,AqBaE,A3ECF,AiCyCE,CgBdM,A/BjCP,AWkBA,AnBFA,CZhBC,C4ETR,ADCQ,AxFMC,ANmBA,AgDFE,C8CvBF,A3EQC,AauBC,AXjBD,E2BUR,A3BVU,CrBWC,CgGZG,A1FPF,A0CkBV,C3BVW,CAAX,AUUJ,CiEVI,CDfJ,CAAY,A/CyBH,C7BpBM,A6BoBb,CThBA,CvCiBoB,CMnBpB,CqENsB,AqBcb,AhDUG,AM+BY,CwCvDtB,AEcQ,AhGWa,C+F1BzB,A/F0BS,AgDDO,C2BxBW,ArBwDvB,CyCzDe,ADCQ,A9FyBC,AkDCrB,CAAa,EyB1BO,A3BwBN,AMgCjB,CgBfA,AtBjBF,CsBkBF,A0B5BI,EFd8B,A9CyB5B,C8CzB6B,A9CwBjC,AEEA,E8CZuB,ChDYnB,CAAC,EAAE,IAAI,CgDZT,C1B2BA,AtBfW,EsBiBf,A0B5BQ,CFfJ,A9C0Bc,EAAT,CAAF,CM8BH,CgBfA,C0B1BW,AhDWS,AM8BD,CgBZvB,A0B7BgB,ChDWU,IsBetB,AKzCuB,A3B0BG,EsBmB9B,AK7CoD,A3B0BpB,CgDZ5B,C1C0CA,CN9B+B,CgDV3B,A1CwC2B,CqBxDsB,A3B0B/B,CsBetB,AtBfE,EsBoBN,A0B9BQ,G1ByBJ,AtBfuC,EsBoBxC,AtBpB0C,C2B1BO,EAAzB,A3B0BqB,E2B1BsB,A3B0B3B,C2B1BhB,CrBwDvB,CqBxDqE,A3B0BpB,C2B1B1B,ArBwD0B,CqBxDnD,A3B0BqD,E2B1BsB,C3B0BnB,CgDVlD,ChDUmC,CgDVzB,GhDU8C,CAA1D,CAHN,AMiCI,IACA,gBAFF;A0BuCE,AhEnGN,Ae8BC,EuCuBC,AFlCA,ACRA,AgB+BA,A/E9BC,AaED,A6BkBA,C1CtBA,CuE4DE,ALLC,AuB7DH,ADEG,AJmCD,AQiBA,A3D5CA,AsDsBA,ElB9BE,AqBgBM,AhGSN,AgDCA,A3BZA,A6BWyB,CoBsBxB,AtBrBL,C6BsCM,AkBlEN,A1EgBM,AwEgBE,Cb+DM,AU1DP,AnD3BA,ASkBA,ChBKE,AgBLT,CsBqBS,AtEtBA,CsEsBC,A0B/BM,AhGSN,AqBXA,CsDdC,AoBFX,A5EUW,C6EQO,A3EFN,CiDiCC,AnDvCA,AnBiBA,CsEsBR,AyBjDL,AxDUE,AvCiBE,CqBXW,CiDiCC,A0B/BE,AhGSF,AqBXZ,CrBWa,CsEsBC,AyBjDlB,ALqCE,CGLmB,C7FLD,CsEsBC,AoBZA,A1FVjB,C6FKoB,C7FLD,EAAE,CsEsBC,AtEtBtB,CsEsBuB,AOiBA,AgBlCE,ChBkCD,A7EvCA,A6FKE,ClB9B1B,AkB8ByB,CAAL,CHKtB,AGL+B,Cb+D7B,CV9CJ,AU+CA,EV/CmC,CAAC,GAAG,EAAvC,AuBjBwB,CAAoB,CvBiBD,AOiBhB,AgBlCH,CAAtB,CvBiB2C,AOiBA,CPjB7C,A0B/BkB,E1B+B8B,AU8C5C,AgB7EmC,EhB+EvC,CH/B2B,EAA0B,GG6BjD,CH7BuB,CGgC3B,AgBhFkB,CnBgDyC,AmBjDzC,GhB8Ed,EAIJ,CHjC2B,EAAwC,CAAxC,EAA2C,AG6BlE,CH7BuB,CAAzB,AGkCF,EHlC0E,IG6BtE,EAKE;A7D/FS,AYuBjB,CZvBA,C6DiGE,AzC3FC,AjCDD,CiCJA,C+B4CE,ArCrCA,A0CVC,ArDGD,AKIA,Ae+BA,AoDrCA,AJmCA,AQgBA,A7EtCC,AiC0CD,AuC1BA,EhBkCE,AGmCA,AgBnFM,ChBmFL,CVpDG,AtEtBF,AgCMC,AsByBD,AJ/BF,A2CKI,C5DpBF,AXPA,AKIA,Ae+BC,CT5BA,AXPA,AKIA,E2CwCK,AtEtBF,C6EuCC,CvD7DT,AKIA,C2CwCa,AtEtBF,CAAC,AsD+BA,CuBQV,A5CtDF,AjCeW,AsD+BE,CtD/BL,CgGTa,A9CSR,CoBsBK,ArCrCH,A4DoBG,CvBiBC,A0B/BI,C1B+BL,AtEtBA,CsEsBlB,AuBjBqB,C5DpBrB,G+CyFuB,CAAC,AgBnFM,AhGS1B,A6FKsB,CGdK,AHcJ,C7FLD,A6FKA,CAAL,CnDQrB,AmDR8B,GnDQC,AYkBnB,CAAR,IAAgC,EZlBE,AsDxBtB,AHgBK,CbqEE,AtC7DgB,AmDRE,CAApB,CbqEoB,AarEzC,MbqEuB,EAA0B,IAAI,CAAC,A1B3CA,C0B2CD,CAA9B,CtC7DvB,AYkByD,C0B2CC,A1B3C1D,EAA4D,I0B2CrC,EAA2C,MAA3C,CAAzB,EAA6E;A7DzF/E,EUVE,AUUA,ASgBA,A3BXC,EiDiCC,AOiBC,AGmCD,ARzCA,AvC/CA,AXPA,AKIA,Ae+BA,AqD1CA,AGuDA,ALtBA,EGdQ,AhDSN,AM+BA,CgBTC,CEWC,AuB7DA,A7C2BY,A2CMZ,EvBiBE,AtEtBA,CgF0EC,AhC1EA,EgDTQ,EnEjBjB,AmEiBmB,AhDSN,CgC0EX,AnDpGF,AmB0BA,A6CKc,C7FLC,CAAP,AgDAQ,C+C5BC,AFiCH,GEhCV,ACkBsB,A1CwCN,C0CxCO,CHcb,ChE/Bd,AgE+BE,CrB4BsB,A3C3DxB,AyByDwB,GkBEG,AuB5DhB,CzBiDiB,AyBjDhB,ACeM,C1BkCW,MzChD7B,GAAA,IkEDI,AzC0DA,CkBEF,CFX0B,CEWiB,CFXC,CyBjDf,ClECnB,IyCgDgB,EAA0B,EyBjDlD,EzBiDwB,AzChD5B,CkED2C,CzBiDiB,AzChDpC,MyCgDI,AzChD5B,AkEDkD,CAAC,CzBiDiB,AzChDtC,GyCgDF,CAA1B,SyBjDE,GAAgE,IADlE;A5BqDE,AjDlBA,E8DoEH,AJnGD,AvCAA,ADKA,AoBiCA,EcSE,AZxCA,AiBRA,A9CAA,A+DGA,AMkDA,AlD3BA,AM+BC,CN/BA,CwBiCC,AwB1CM,CpBhBV,CDDM,ACCN,A5EyBO,AgCKD,AgBLA,AEDA,CiByBQ,AT1CR,AkCLA,A1E6BQ,CoDgBN,AZxCD,AkCLA,A5CuBL,CnB1BO,AQCT,ADKA,AoBiCA,CoCpCE,AvDFF,AmBsCA,CcSW,AEWA,AG3DA,AqBiBM,AhEcN,CwC4BC,CAAC,A3C3DJ,AmEiBU,A5DXnB,CAAY,AJyBE,AkBP8D,CoBwB7D,AM/Cf,A1ByBM,CoBsBU,AHEZ,ASjDJ,CTkDA,AT3CE,CcmDgB,CnC1DlB,AmBsCA,CcSoB,AZxCD,AsCSO,A3DhB1B,AmBsCA,CcSqB,AEWA,AwB1CM,C9EevB,CkB1BJ,AlB0B8B,EwCxB5B,AtBFqB,EkC0CP,AEWJ,A3C3DH,AXgCL,CyDhCE,AqBaY,AxC0BlB,CoBtCA,A1D+BoC,AgCRwC,CoBwB9C,AzChD5B,AOMF,CkC0Ce,AEWgB,AhBpB/B,ANfI,CoBwBF,AHEE,AQlD4B,ACChC,AxCK8B,CCL9B,AL8BiC,CmCqBjC,AnCrBkC,CAAD,CK9BjC,AL8BM,CwC4BK,AG3D0B,AzDgCjC,CsD2BA,CtD3BwC,CiDkBxC,CKSqC,CAArC,ALNJ,ASpDc,CxCKd,AoBiCA,EWWI,A/B5CqC,E+BgDzC,CQtDgC,ACChC,AvCAA,EsCDE,ACCkB,EDDgC,CRkDhD,EAKJ,MALI,EAMJ,MANI,EAOJ,QAPI,EAOI;AeZJ,AlBYA,EMRH,AHUD,AtC1DC,AqEyDF,AhFzBC,AGlBA,AiC2CC,CzB3DD,CgDkEE,AnBvDA,AkBRA,AObA,A5B4BA,AHyCA,AqChDA,AGLA,AGNA,A1DGA,ADIF,AoBkCE,ARbA,A6CIA,C7CJC,CmBgCG,AQ1DF,AqBiBM,AhGSL,AkBMC,E6ElCA,A3DON,AJ0BM,AgBLA,CkCkBQ,ACxDR,A5B4BA,AHyCC,AqChDD,ApEKC,A2C0CO,A6B1BP,ChBkCC,AVNE,AgBtEH,A5B4BA,AkCPA,AzCiBL,C2B1BO,ACCA,ApBsCA,EqByBE,AVNE,A/BrDb,AJ0BW,CgEdO,AhEcN,C4C9BH,AmBHI,A/DiCF,CyDtBT,AMXY,ACmBM,A5DXlB,AoBiCY,AxBRR,C6CiCS,A3DhCE,A2EFF,ChBkCC,CM5Ed,AMsBE,AzDqBa,C2C/Bb,AnBuCK,AtCPW,A2EFF,C1B4BG,CUMD,AM5ED,A/CkBjB,CyC0DmB,AFhEA,AQZD,Aa6BO,A5DXzB,AoBiCmB,CWmBG,AgBtEtB,Aa6B0B,AhEctB,AdCkB,AGlBF,CkCEpB,ArCgBuB,AGlBF,C6D8BnB,A9BaF,AqC/CS,ApEIW,A2C0ClB,CkBXJ,AP7CyB,AcUb,AMZN,A3DQJ,A4BmDF,CWzD0B,ApBgBD,AnBVvB,AoBiCwB,AnCzBA,CwDkDV,AzBPW,A/B3CL,EAAO,CwDkDC,AVNT,AQ1DA,AcUjB,AMZ0B,A3DQ5B,AoBiCO,AQiBL,CaQW,AF/DT,AtDagB,AwEgBpB,ChBkCA,AzBP8B,AYChC,CGAmC,AXnBF,AtCPjC,AGlBiC,AwEgBA,CrCS/B,CWmBF,AQzDM,AcSgB,ArDJb,AfQa,CAAtB,G0EhBE,A3DOF,C8CuCI,A3B5BF,CwClBuC,AFgCA,CXgBzC,C9BW2B,CAAiB,AqC/CxC,CzB8CA,A6B1ByC,EJpBX,AzBiDlC,CkBfI,CN3CK,CM8CT,CN9CsC,ExBwDX,C8BbvB,AOlCqC,CAAC,CPsC1C,AN/C2C,CiB6BzC,CzC4BI,CuBzDA,AkB6BqD,CJpBvD,CdRI,AkB4BqD,CXczD,A9BcE,CqChD4C,CPuClD,AlBOI,EWtDS,AX0Db,G6B9BE,EjB7BO,AiB6B8D,EXcnE,AN3CwD,EMgDnD,ClBOL,CyB9C8C,CrCgD5C,AqChDwD,AzBmD9D,CY5DS,CAAP,AxByDa,CuBzDT,EAEE,AcMN,CdRI,CvByDc,CuBtDZ,KAAK,AXoDT,EAMJ,GZJe,CAAiB,SuBtDxB,AvBsDO,CuBtDc,CvBsDvB,CADqB,EYDvB,CZGE,CuB1DA,AX6DY,EWzDV,CvBoDN,IuBpDW,MAJP,EAKE,CALF,CADe,CAAjB;AhE4CA,AU7BL,EwDkDE,AGmCD,AEjDA,AfQA,ASzDC,A/CAD,ASMA,AkBgCC,ARbA,AgBqCD,CYhEA,ApBsCA,ARdA,CmClCE,A5B4BA,AH2CA,AqCjDA,AOAgB,AhGef,CgGfK,AhGSC,CgF+EL,AEjDE,AVQF,ALAA,AQlDA,AoBVA,ACUF,A3DRO,AwD8BL,C1B4BC,CnC3BC,AkBNF,CFCG,ArCiBO,CqEwDN,ARzCA,ALAA,AnC3BA,A6DDA,CbqEC,AEjDE,AfQX,AQlDS,A3EkBA,A6FIA,E7CJE,AEDF,CgCyBK,A5C3Cd,AYkBU,CsBiCG,AlCnDb,AuDuBI,CAAU,CbqEV,AerGW,A7C2BF,CsBiCG,AxBhCA,AEDP,ClBMH,ArBYF,AkFba,CEhCC,ApF6CO,AuClBT,A2CKE,EbqEE,AhCzEA,AEDF,C8B0ElB,AEjDuB,AlCxBhB,CwBgCC,AlCnDR,C0C4FuB,A1C5FvB,AUmBuB,AEDF,EsBiCI,AuB5DA,ApF6CrB,AkFbU,CXoBc,AP1CxB,AoBVsB,AFgCA,ClFaM,EgEnCH,CHkDzB,ClCnDJ,AuDuB+B,CrB4BC,AqB5BA,CAAD,ClBtBG,ArCDlC,AYkBgC,A2CKlB,CXoBA,AhCzBmB,C2CKG,CEhChC,CboDoC,GhCzBpC,C2CKsC,C3CLD,A2CKE,C3CLD,CyBjBb,CrCD7B,C4C2Cc,AP1CV,AzBiByC,EAAzC,CgCyBgD,ChCzBH,EAAE,CAA/C,CgCyBJ,AWpBoC,C3CLkB,A2CKE,QAApB,CAAtB,CAAV;AxEdN,EiDgCE,AM7CA,AsBsDF,A1ChBE,A7CGA,AOXA,AoCyBA,C4CKD,ClBqCG,A/CxFA,A0CHC,ArDJD,AKIA,AoEVC,ALsCD,AQjEiC,A5DoCjC,AFDA,AYoBA,AgBqCA,A6BjCC,CKiCL,AlDrCK,CX3B6B,ArC2B5B,AgCKC,CdCA,CsD0BC,ApCpDE,AYoBF,CsBqBC,ArCpCD,AXPA,AKIA,A+D4BC,A/EOA,A2CcA,CrB9CA,AXPA,AKIA,AqBkBL,AEDI,C8B0EG,AgBjFP,A1DXO,ADR4B,ArC2B5B,AkBMA,CoDeT,AhD3CE,AKIA,A3BkBQ,AkBMA,CsD0BC,CAAC,CQyCV,A5C7Fa,ApCoBF,AkBMA,CwEIX,ApD7BY,AtCmBV,AWiBU,AOXd,AgCPY,C8CPV,CxBwCI,AwBxCJ,A5DZgB,ApCoBF,AkBMA,CsD0BC,AkBtBA,A1FVA,CkDDD,CvCkBG,CqFzBjB,A1DXA,AtCmBkB,AWiBb,AOXP,C8EdE,AhGQE,CwEgCE,AkBtBgB,AxEJA,CerBpB,AjCeqB,AWiBA,A2CcvB,CkBCwB,AtD1BA,C8EdtB,AhGQuB,AWiBlB,AOXP,CerByB,AjCerB,CgGRI,A5DZqB,AlB0BF,ClBNC,AWiBA,C6DetB,CpCpD0B,CHK9B,GyDyBe,A/EOiB,C+EPC,A/EOA,AuClBF,CAAC,GvCkBK,CAAC,C+EPvB,AtD9BY,GsD8Be,AtD9BE,CsD8B5C,A/EOiC,CyBrCjC,AzBqC4C,CuClBD,CAAC,CAAD,CAAZ,EAAiB,CvCkBG,GAAG,EuClBvB,CvCkBE,AuClB7B,IvCkByD,GAA7B,CAAlC;A2DKD,AnDrCD,AiEYA,AzEqBC,A2CcA,EuBMC,AGoCC,AElDD,AfQA,AErDA,AgB+BA,A/C5BC,CAFD,CLOE,AXPA,AoBkCA,AoDvCA,AJqCA,ArDvCA,ADSA,AYmBA,A9BMA,C8BNC,CwBgCE,AwBxCD,Cd+BC,AfQA,CnE/BC,AgDAA,A9BME,AgCPH,C2BsCE,AnCxBA,AoDvCD,CAAC,ATmCP,ArCTE,CkCuBO,AfQA,AkBtBT,CHcU,AfQA,AnE/BA,E6EqCV,AiB/DE,CZiDW,AfQA,AnE/BA,CkFuBR,Ab7CL,ArEsBc,AkBME,CmD5BhB,AyBJc,A9F0BD,CkFuBG,Ac/BA,AhGQN,CkBMS,CgEiBD,Ac/BA,AXiBlB,ClBsBA,A2BzDE,ATmCF,CrFToB,CkFuBC,AfQA,CAAC,AkBtBtB,C3CIE,C2BnCF,Ca6CyB,AfQA,AErDzB,A2BcyB,AXiBzB,CHc0B,AxCVA,AsDrBA,AhGQpB,EmE+BN,AnE/B4B,AkBME,CAAC,CiDyBD,AzBlB5B,AxBP4B,CiDyBC,AjDzB7B,CgEiBF,EAAkC,CAAC,AfQA,AkBtB/B,GHckC,AchC9B,AXkBR,EHcA,AGdS,ClBsBT,CeR0C,Ab7C1C,CFqD2C,CeRC,CAA5C,Ab7CA,Ea6C+C,IGd/C,EAAoB,IhB/BpB;AC6CF,AOeC,AvBLD,E4CIE7B,A5DtDA,ADVC,AW4BA,CX9BD,AW2BO,CkC0BL,AfQA,AQlDA,ANHA,A1CIA,AegCA,A2CLA,AnEHA,A2EHA,EGXE,AhEYA,EkDmBI,AfQF,AkBtBE,AnEHA,CiDyBD,AxCjDD,AuEsDC,AlDpCA,CmB+BC,AxCjDD,AuEsDCO,AlGpCA,CkFuBG,AP1CF,ANHA,AwByBA,C1B4BH,A4B3DJ,C5B2DA,AkBtBW,ArDLF,CkDmBG,CP1CL,AqBWI,AHWX,C1B4BY,AErDA,AgB+BE,AnEHA,C8EdD,AhGQA,CkFuBG,AanDhB,A/F4BM,AgCIJ,CkDmBe,AanDjB,A7EkCiB,CgEiBD,AvDzChB,CuDyCA,AvDzCgB,A0D2BG,Aa2BrB,CAAoBQ,CHhElB,CAAA,ACoBoB,CAAC,E9EcI,CSxBF,AoEVvB,A7EkC0B,CSxBF,A0D2BV,AnEHW,C6ElCnB,AVqCsB,AnEH5B,CiDyB2B,AErDpB,AnD0BkB,CiD2BG,AErDA,A6B0D9B,AhF5BE,CiDuB2B,AkBtBb,ClBsBF,A6BzCN,AXmBN,E1D3BgB,CwCiDiB,AErD1B,CACL,G1CGkC,CgDD7B,CRkDP,AEpDO,CMGL,KAAK,ChDAS,GAAgC,K0CH9C,CAAqB,C1CGgC,CAAC,GgDDjD,CNFL,CMIA,CAFK,CNFyB,A1CGhB,CgDEd,EhDFgE,CAAlE,C0CHqC,CMK9B,KNNA,CAAP,SMME,CAAqB,MAHhB,EAIL,KAAK,MAJA,EAKL,KAAK,SALA,EAML,IANK,EAOL,CAPK,EAQL,CARK,EASL,YATK,EAUL,kBAVK,CAAP;AuBwDH,AlFrEK,Ae+BA,CmExDN,ClBkIE,AZtFA,AOMC,ANZA,AhCPD,AESA,AjCFA,AuFuBC,ClBvCD,ANYA,Ca+CE,AfQA,ATjDA,AkCLA,AEHA,ATmCA,ArDLC,AgBJD,CAAC,CwB+BC,AuB3DA,ACoBA,ChBgFC,CEjDG,AfQF,A2BzDA,ATmCJ,ArFTK,AgDAD,AEFF,CiBiCG,ATjDD,AkCLA,A5FqBA,AgB/BQ,Ae+BA,CyCiCN,ALAA,ATjDD,AUIP,AwBTO,A5CuBC,CgCwEC,AZtFT,A7BJA,CyC0FU,AbzCJ,A5BjDN,AjCFA,C6DmDE,A7DnDF,A0CoBW,ChCjCP,CgEyGS,ARzCA,AsBzDA,A9F0BA,AgBjCO,CgEyGf,AbzCS,A2BzDA,CFGZ,AIea,ChBgFC,ARzCA,AuB3DA,A/C4BA,CkCuBG,AxBzCjB,AsCUe,AhGQA,CgFwEC,AZtFlB,AwBTiB,AGLC,ADEhB,C1BYF,A7BJA,ASkBmB,AhCjCf,Ae+BA,CmDyBkB,AxBzCH,AoCRC,AvDQpB,AjCFA,ANoBoB,A+BFO,CiD0EN,AK/DnB,A/E7BF,ANoBqB,AgDAnB,AhCjC0B,CwDgEpB,AxE/BY,CqFSX,ArFTQ,C0DlBE,AsCUK,ChBgFC,ARzCA,AoBtDD,AGLC,ACoBA,ChBgFC,AY/FD,AGLC,A/F4BA,EqFSZ,CbsBV,ALAyB,CAAC,ApCjC1B,CyCiC2B,ALAA,A7DnD/B,AUbI,CgEyGJ,AY/FiB,A5FuBJ,A+BF0B,CsDWpB,ArE1CmB,CgEyGJ,AbzCA,A7DnDlC,ANoBkC,CgFwEC,AbzCN,CAAf,A6B1CN,CJZ4B,ArDKpC,CyC0FsC,AZtFtC,A2BfQ,C5B4D+B,CayCvC,AzC1FA,C2CyC2C,AdrC3C,CYsF0C,AEhDtC,AGfF,AtDXE,C2BhBe,CsB0FyB,AK/Dd,A/E7BnB,AyBkBsC,CiD0EjD,AbzCE,CTjDA,AkCLe,APgCf,CL+D6C,CKjE3B,A/E3BpB,CsFHgD,APgCb,C/E7BlB,C8DMG,C7BJpB,IqDLuD,CV8CZ,AU9Ca,CtFGxD,C4E6CI,C5E7CqB,GsFHR,EV8C0B,CU9CsB,CViD7D,AdxCJ,EAAsC,CcqCK,CU9CzC,CVkDE,MAJuC,CAAzC,GdrCF,EAAmD;AzBT/C,AQPN,AwC4CA,ExFtCE,AwEkBA,ANZA,ArCFA,AhBZA,Ae+BA,EiD0EE,AE5CA,AxB7CA,AUGA,AexBA,AxDmBA,A4BSA,AH2CA,AqCjDA,AGNA,ArDIA,AjCFA,A0CoBA,A9BOA,C8BPC,C+C5BC,ADEA,AEkBA,AhFzBA,AkC+BD,E8B2EC,AE7CI,AVGF,ArExDN,AGKM,A0CoBA,A9BOA,CfhCN,AgFbM,AxDmBA,AgBLQ,AYcR,AH2CC,AqCjDD,AlDFC,ArByBA,AyEMA,CRnDA,AxDmBA,A4BSA,AkCNA,AzFgBC,AgDAA,CoBdC,A0BZD,CdmGJ,AcnGK,A/DwBC,CyCiCC,AlEnDA,A0CoBA,AjBFA,CyCiCC,AjCjDV,AjCFU,ANoBA,A+BFF,CmD8BK,AaxDF,AhE0Bb,CqCZc,AqBFZ,AzEjBF,C+EKe,ACoBA,AzDVA,ArByBT,CgEsBF,AVEE,ArExDN,A6CyBgB,AhCjCA,Ae+BA,CmD+BX,AVEY,ArExDjB,AsFSgB,AKVZ,AEkBa,CFlBA,CnDEb,ArCIE,ANoBa,AgDAA,A9BOA,CyB/BQ,ArCIP,AY2BA,C8BPlB,CkC6BQ,AVEJ,AuB3DgB,CbyDlB,AazDmB,CvB2DC,ApBEtB,AqCjDqB,AnFJjB,C6ElBJ,AxCcE,AYcF,AkCNsB,AKVA,AxFMtB,C4EkDO,AYxDgB,A/DwBC,CYtBQ,ASyDP,A9CrDA,AyBkBA,CyCiCrB,AWrEqB,A5B4BA,AyCFnB,AhGYI,AkBOV,AyEMJ,A5Df4B,CoDpCE,AQoD5B,A5DhBA,C5BvBA,AgFbE,AMsBc,AKVZ,A5EiC0B,CgEuBhB,C9BGkB,A2C/DxB,C5FKR,AwBME,AYCa,AvCkBkB,C2BlB7B,AYAqB,C2CgDP,AO9CgB,AE6BpC,EhDrCM,AgDuCJ,EhDvC8C,AJM5C,E6BIO,AzCJE,CyCKP,AzCLQ,CxBPE,AiD0Da,ApDjCnB,CgFyEJ,AzBnFuC,AH2CC,AqCjD5B,CzFgB6B,CgF0EvC,AE5CE,Cd3CC,AbGqC,AkCNA,CtFT9C,AwFsCF,ETiBqC,A/EvDhB,AwFyCnB,CTcoC,CvCtDhC,CSyDuB,CTzDgC,A8CQN,CAAC,CP8CnB,Ed3C/B,AhB+CE,E8BJuC,Ad5CpC,AqBFO,CTyFZ,AE3C0C,Cd1C1C,AhB8CE,AuCrBR,CX8DQ,AzBrFqC,AkCNmB,C9DF1D,AgEmCJ,EpC3BiE,CyBqFvD,CAAC,AS3FT,CT2FU,ArD7F2B,GqD6FxB,AE9CX,CF8CM,CAFN,CE1CK,A3BzCP,CyBsFI,EZ1FG,AzCJL,AyBoDE,E4B0CI,AE7CI,Ad1CV,AhB6CW,C4B0CJ,ArD7FH,AgE8BV,CX+DY,CAHN,AWxDa,CTcC,CF8CZ,AE9Ca,A9BGC,GzBnDL,CAAC,EqD0FZ,EAKE,AZ5FG,CAAP,Ec6CM,A9BGO,CAAiB,E4BuC5B,CADF,AEzCkC,CAAC,CFiDjC,IEjDgC,A9BGrB,EAAT,CADqB,C8BFmB,CvDjD1C,CyBqDE,EzBnDE,EyBiDN,EzBpDA,GuD+CA;AlDvBH,CA/CyB,CoCiCvB,AzBdD,AKwBC,A2CkBD,AEhBA,A9DJA,CqCdA,ApC3BK,CmCyEH,AhEvDA,AgFZA,A5B4BA,AH6CA,AqCnDA,AKXC,ATkCD,A9C1BA,AHFA,ApBbA,C8EKA,Cd4GE,ARjDC,A7BvDC,AoDJF,ACoBA,A1FZA,AY2BA,AyEWE,CEhBD,C1F3BG,AiD6DA,AiC5BF,ClBsBC,A5BhDA,AHFD,C4CqGA,A1ErGI,A8BAH,AyDsBC,Cb+ED,Ac3GE,CnDEG,AoDJF,ACoBA,AhGQA,A+BFA,CoCgCC,AkBtBA,A/E5BE,AqFsCA,A5DpBF,CoCgCC,A4B1DA,ACoBA,AhFzBA,Ae+BF,CYtBK,AmDFF,A9EPA,Ae+Bb,C5BvBgB,AGKA,ANoBF,AgBjCF,A2EmDI,CxBYD,AnD/Db,CmD+Dc,AkBtBA,AtDVA,C5BvBG,AiCKjB,COJkB,ArCIA,AUbF,CmD+DC,AxBtDE,AoDJF,ACoBA,A1FZE,C6DkDnB,A4B1DkB,ADEA,AEkBA,A5DZD,C0DNE,ATkCA,A9C1BnB,C4BgDoB,CAAC,AnE9BA,CGzBG,AiD6DA,A0C9DjB,A9F0Be,AgBjCA,C2BSxB,ArCII,AUbqB,A2EmDE,CxBYD,A4B7DlB,ADKkB,AEalB,AhFpBgB,A6EmCE,A9DJA,CoCgCC,AfME,ApCrE3B,Ae+ByB,CsDUzB,AtDVwB,CiDmFC,A7E1GR,AiCKjB,ALkBF,CiDoFQ,AbpDsB,AkBtBA,ArFRP,A2FkBS,AEhBxB,CzCkCqB,AyClCE,C7FFC,EGzBI,A0F2B5B,C7FF2B,A6FEnC,C1B4BE,AnE9BkC,CAAC,CmE8BC,CwBZtB,CxBYwB,AnE9BA,CmE8BtC,AnE9BiC,CGzBjC,AHyBqB,A2FkBqB,CxBYD,CnE9BC,CgFiFjB,EAEnB,AhFnFuC,CAAC,CoDoCnB,ApDpCkB,CAAxB,CgFmFX,A5B/C4B,ApDpC1B,CgFmFD,CAAC,AWjEE,C3FlBsC,CAA5C,CgFmFO,AWjEyC,CXiE9C,AhFnF6C,CgFiF9B,EAGnB,G5BhDqB,C4BgDjB,A5BhDV,C4BgDW,CAAD,CAHe,EAInB,MAJmB,EAKnB,GWpER,GX+D2B,CADvB,EAQE;AhDlFR,EoCdE,AzBfA,AaoCA,AmCOA,A5DrBA,EmDgCE,AVCC,AvC9CD,A9BVA,AmBGA,A8B0DA,AsC1BA,AnD5BA,AHDA,AlB0BC,AFxCD,AkC8BA,ChCGyB,CiD8BvB,AxBtDE,AoDJF,ADEA,AEkBA,AXgBA,A/E5BA,AY6BF,AyEUI,EXqEA,AE1DA,A/EvDE,AiD6DA,CnBnDF,AXPA,AoEgCC,AnD5BA,AWeA,CiBiCC,AlC7CD,AXPA,AhBEG,C6DkDD,A2BxDD,AtCsCR,CWkBU,AhEvDE,A2FDH,AtCsCT,AmCOY,A5DrBF,CsDUC,AtDVA,CoCgCH,A7DlDM,ANoBF,AgBjCA,Ae+BF,CiD0FG,AE1DX,AfAE,AhEvDW,AwCCA,AJMb,AvBfW,A2EoDE,A5DrBf,CgE1Bc,ACoBA,ANkBZ,A1E3CU,CkE+DG,A5ElDE,AUbf,CmD+Dc,AxBtDE,AoDJF,ADEZ,AEkBY,AXgBA,A9C1BA,ARgBA,C+DxBA,ATkCC,AKEA,ACSF,CXqET,AhEzHY,CMWhB,AhBEmB,AkDgCrB,AxDZmB,CwDYnB,AxDZoB,CiCflB,A9BVqB,CmBGF,CyENE,AVoCnB,ArFRmB,CiCfA,A9BVG,A4FHF,ADED,AJoCC,ApF9BP,ANoBL,AgBjCY,CoCqEG,A0C9DH,AJoCC,ApF9BE,AUbF,CgFmBjB,AhFnBgB,Ae+BE,Cf/BxB,Ae+ByB,CEbzB,AmBmD4B,A0C9D1B,AxFMa,A4CiBV,AnBCmB,C5BvBH,AmBGK,AqBFG,AJMF,AjCFzB,A4CiBgB,AnBCpB,CTpB6B,AkCkC7B,CWkB+B,AuBpBd,AnD5Bf,C4BgD8B,AhEvDE,AwCCA,AS4DJ,CeNC,AxBtDb,AaoClB,CWkBI,A4B9DI,AJmDO,EhD3CuB,A+CkCF,ACSX,CxF5Cc,CAAC,EmBGtC,EnBHA,A+CsBA,AyCsBa,CnCPJ,AmCOX,EDTiB,GAA+B,C/ClC9B,ES4DY,CT5DwB,AaoCtD,CbpCA,AS4D0C,CIxBtB,CkCFmC,CAAC,MAAvC,GtC0Ba,AsC1BmC,CtC0B/D,GsC1BA;ElBsBD,AIzDD,AjDSC,AgBPD,AdHA,AmB0BA,A2CoBA,AElBA,A9DHA,EoCgCG,AlC5CD,A9BXA,AmBIA,AoBkCA,AUuBA,A0C9DC,ATkCA,AKGD,AnD7BA,AiB8BA,AxC7CA,AgDsEA,CqB/BA,CLkFG,AE1DD,AvCtDA,AoDJA,ACoBA,A9CI+B,AyCuB7B,AElBF,CjB3BJ,CzECQ,AyEDR,AxB8DQ,CVvBD,AH/BA,ASiBA,CkC+BH,AlC/BI,C+C3BC,AVoCA,A7BKL,ARdG,A2CoBI,AElBX,ClDzBU,A3CwBC,A+BFD,CgE1BC,A/F0BD,AgDCC,A6CEA,A9DHA,CiBCJ,AhChCK,AgDsEA,A2BlBE,A5DrBJ,CYtBG,AdHb,AwDmCa,ArCTb,AhChCa,Ae+Bb,CFzBA,AUSE,AiB+BO,AxC9CG,CbQK,AyEDjB,A5DPE,C4DOF,Ae6Cc,A5DrBE,C/BEC,CGzBG,A4FHF,AVoCA,A7BKd,AxC9Cc,C+EKC,ErDyCjB,CcAe,AQwBf,C7D9DuB,AyEDzB,AjCEA,AdHA,AwDmCuB,C3CKC,AbxCxB,AkENQ,A/EAgB,AgDsEA,ChDtEC,C4DOzB,A5DPwB,Ae+BE,Cf/BxB,Ae+ByB,CmDgCvB,A9BM0B,AiC5BF,AtDVF,CAA1B,CmDgCuB,ActCO,CtDqBC,AUuBE,AIvBP,CdAM,AsDrBA,AxCqBL,AmCMb,CxF5CM,A6D8DlB,C2BlBqB,CvCiBU,AiC5BxB,ArB6B0B,CRxB/B,CrDtCmC,AkFiCF,CTlCrC,CoBkBuC,AhC6CrC,CgC7CsC,AxCsBpC,AmCKU,C3BkB2B,A2BlBzC,CxF5C4C,A0BF5C,GqDyDI,AxCjBF,AbxCF,A2ByCS,E0BgB+B,E1BhBpC,GrDvCmC,C+EuDnC,A/EvDmD,AqDuCtC,AQuBf,EkBP8C,ArDzD7B,AmCgEkC,E7D9Dd,AiD6DN,C8BN7B,A/EvDF,CiD6D8C,C8BNK,ArDzDrD,EAA0B,A2ByCA,CAAC,G0BgBvB,ArDzDJ,AmEYQ,CxC4BJ,C3BxC4B,GuB+DC,AIrB7B,C3B1CJ,AuB+DE,EvB/DkC,E2B0C3B,IAAL,IAAa,SAAS,CAAC,IAFvB,IAGA,KAAK,IAAL,IAAa,SAAS,CAAC,IAJzB;ArC3BJ,A6BeC,EmB+BE,AxC9CD,Ae6BC,AL1CD,AEWC,AiBmCA,AmCGD,A5DtBA,CQrBA,AiBiCA,CwB8EG,AE1DA,ANxDD,A/CDA,AuB+DA,A0C7DA,A9ERA,A6EkCA,EE7BE,ACoBA,AXgBA,A/E7BA,A0D0DA,A2BjBE,E9D/CA,AuB+DE,AFxCJ,CrBvBG,CmCgEC,CY/DC,ASkCA,AhDrCT,A/BQS,C+BRT,AN2BU,CAAC,CFzBC,AkEDA,ACoBA,AhGQA,AgBjCA,A2EqDE,A5DtBJ,CFzBG,AvBMA,AUZA,Ae+Bb,CgE1Bc,ACoBA,A1FbA,AUZF,CAAV,A2EqDe,CNZb,AtDVY,CFzBJ,AvBMK,A4CiBF,CrBvBb,AvBME,AUZc,AgDsEA,C3BlElB,ArC6BmB,A2FoBF,C9D/CG,AQFpB,A/BQoB,ANqBR,C+F5BS,AzFOA,CyFPC,ACYd,ChCqDe,C1D1DC,AUZA,CAAC,CAAD,Ae+BE,CqBsCG,A9CzDzB,AUZF,Ae+ByB,CM3B3B,AN2B0B,CzBnBG,AyBmB7B,C6CxBS,AxB8DuB,A2CtExB,CnBQc,AvCHtB,A/BQ+B,AqFyCd,CrFzCb,A0D0DA,C2BhBF,CvCe8B,A9CzDE,A0D0DA,EY/DhC,OvCHF,EsDkDc,KAAK,KvCea,EAAc,EuCf5C,GAA6B,OvCeC,CAA9B,IuCfA,GAA4C,yBAD7B,CAAjB;A3CnBF,EgCwFG,AR1DD,AIxDC,AlCwCD,ACvCA,ALKA,ACGA,AoDuCA,A5DxBA,C6C1BA,ClBUE,AvDRA,AiD8DA,AwC3DA,AvDNA,AnBoCA,AFxCA,A6EkCA,ElD1BE,AdFA,AkEDA,ACoBA,AXee,AMeb,CnBQD,CrExDC,AiD8DE,A9CzDF,AY4BA,A8C8BA,Ad1CY,A2CMV,CnCnBF,AvDRC,AyFGD,ClCKC,AkCLA,CpBqDE,A3CzDA,AQFA,ArBJA,CwD+DC,A7BvDA,AdFA,AvBMA,ANqBC,AgEqCC,AjCvCF,CzBnBC,AyBmBA,COlBX,AhCDU,AuFsBE,A9DHF,CyCgCG,AlClDb,AhCDM,AyBmBN,CyCgCA,A3CzDS,AQFK,AnBoCA,CyBhCC,AdFX,AgE4BW,CrB6BC,ArExDd,AGKc,AyBmBA,CyCgCC,AmBRE,CxFhDD,A0BDA,CuB+DG,AfjEnB,AnBoCiB,AFxCjB,CwD+DkB,A3CzDhB,AkEDgB,ACoBA,A1FbJ,AqF4Cd,CnBOF,AdhDE,CNsDsB,A2ChEF,ACoBA,A1DZtB,A0ByDwB,CQPD,AoBrDrB,AtDGF,AuDqBuB,CnCnBA,AfPvB,AkD0BwB,CrB6BC,AROE,CQP3B,A7BvD0B,AiDGtB,A7DoBsB,CqBsCG,AlC7B3B,AaTyB,CyCgCC,AdhDD,A3BgBD,CgE1BG,ACoBA,A9EeA,A2ENA,A9DH7B,CgE1B8B,ACoBA,AHSA,CAAD,CAAN,CDvBZ,CAAC,AtFCI,AuFsBkB,EvFtBX,AuFsBA,CFsBJ,AEtBjB,C7BoCsC,EZDhB,AdxDxB,AhCDgB,AqF4CM,CvCaqB,AYEjC,A2BfR,CrF5C2B,CgCC7B,CqD4CM,EjC1CiB,AqCVD,ACWd,A1FJyB,CoDGI,ApDHH,CoDGX,AkCJnB,AtFC6B,CyFNzB,AzFMQ,CoDGwB,CAAjB,ApDHe,EoDGK,AkCJZ,ClCIR,CpBFvB,CoBE8C,AqCT/B,CrCSQ,AqCTP,CrCSd,CNsDsB,A9CzDR,C8CyDd,A9CzDI,CqF4CJ,CC7CE,ED+CE,CC/CqC,GD+CjC,C3Ba4B,A2Bb3B,C3BcC,E4B7DsC,AD+C5C,CC/C6C,AGN7B,AJqDP,GInDP,EJmDY,GAAG,E3Bae,EAE1B,E4B9DR,ED+C2B,CC/CqC,AD+CpC,CChD9B,ADgD6B,CAAzB,EAA8B,I3BaE,C+BzE9B,C/B4EI,A2BhB8B,GAAG,C3BaP,EAI1B,K2BjByC,CAAC,CAAD,CAA/C,CAHN,S3BgBsC,CADE,GAO9B,aAPJ;AxD9DR,AaaM,E8C0CJ,AStDA,AvCJC,AmB6CH,AxCjDG,A2E2DD,A5D5BA,CM7BA,ArBRA,CkEoEE,AVCA,AWpEA,AxCaA,AdFC,A0BiBD,AH8CA,AqCpDA,AGLA,AtDCA,A9BNJ,E2DuDM,AhEvDA,A4FAA,ACkBA,AXcqC,A/E3BpC,AY4BD,AyEmBE,EnBIA,A7BvDA,AS6DE,AYQF,AdjDA,CiCjCA,A5B4BA,AkCNA,AnDJC,AkBoCT,AxCjDS,AKoBO,AUWP,CmD+BC,ACnED,A5B4BA,AkCNA,AzFgBE,CqFMqC,ArFZtC,CgEkDI,A2BlBA,CTGD,CfAC,A7BjDV,A9BNJ,CgEwDe,AmBJE,CTGb,AVCY,AtBpC8D,CsBoC/D,A7BvDE,ALKA,AtCoBA,AkDJT,CsBkCJ,ALDc,AkBvByB,A7BU3C,C6BVwD,AtDRtD,CyCgCkB,A7BvDA,AoDDA,ACkBA,CrDjBhB,A3CyBiB,CmE6BC,AZvClB,AH8CoB,AqCpDpB,AMVkB,ACkBA,ALkCE,CxBGD,AxBtDA,C0C+BjB,ArFNkB,AqBblB,CkCGkB,AH8CG,AqCpDH,AzFgBC,AqBbO,A2CyDL,A2BlBA,CF1CF,AzFgBC,A2F0BxB,CRhEE,A5B4BA,AkCNsB,ApEGpB,C2C0DI,CGhBQ,A4BvDW,ACkBA,AhGQA,AqBbO,C8DzBP,A/B0EG,A2C9DF,ACkBA,AhGQN,CmFtCM,AnFsCT,AqBbf,A6BOwE,CiChC1E,ChBmE6B,A9C1CO,A6BOlC,CiBmCJ,AsB7C+B,AzFgBC,CyFhBA,ApEG5B,C8C0C8B,A7BjDnB,CAAW,AjBOgB,EAAtC,CrBae,CqBbyB,CiBP1C,CcwDuB,ApDpCgB,CoDoCG,A2CxEpC,ACkBA,ChC+DiB,CyB7DvB,GzFgB6C,CgE6CjB,EhE7CoB,GAAG,CAAC,CAAD,CAAtC,CgE6CP,ChE7CkD,EgE6ChB,CZTjB,CAAvB,eYSM,GAAsD,CADxD,CAT4B,CAY5B;AxDzER,AgDjFA,AL6EA,ApB6BC,CyB1GD,CwBmME,AE1DC,AxBhDA,AiBUD,ANZA,AhCPA,AhBeA,AsEuCA,CnCtIF,CWyII,AhEvDC,AgFXD,A7DeA,AiCaA,AH6CA,AqCnDA,AnDLA,AFAA,AlB2BC,AFxCD,A6EiCA,C3ELyB,CsDmCvB,A7BvDA,AoDDA,ACkBA,AXcA,AnEGF,AGtBI,AsEuCA,ExBGA,A7CnDE,A8B0DA,A/BjDA,C2DoGD,Ab1DA,A7BjDA,AFAD,AyDoBC,CzDpBA,CiD0BE,ArEvCA,AKoBE,CsDIX,A3ESU,CgFuFV,ALhGA,AtDJa,AwEaF,CAAC,C1B6BV,A/BjDA,CiCDF,AhDQgB,CgDRhB,ArDZe,A2E2DE,AE1BF,C1B6BC,A7CnDE,A+D4Bd,AjD1BW,ApBbC,AKoBhB,C8C0CE,AkBvBe,ArFNA,CAAC,A2F0BE,CrEhDC,AyEJF,ACkBA,CrBDnB,CAAA,AoBjBqB,ACkBA,A1DZnB,AFAA,ApCoBmB,AgBjCZ,CqEuCL,ArFNM,A2F0Bc,CrEhDH,A8B0DI,ApCrEvB,A6EiCqB,CxBrBvB,AwBqBwB,CxBrBxB,AgB2ByB,CjC8BG,CuCVR,ChBnCpB,AoBjB4B,ACkBA,ALkCE,CnBID,AuBxDA,ACkBA,AXczB,AQNyB,CrB8BC,AqB9BA,ClBT9B,AvB6CiC,AyCpCJ,CAAN,ExBrBvB,A/CDqB,AqEgDD,AE1Bc,CF0BlC,CrEhD4B,AuEsBL,CxBrBvB,AwBqBE,CvEtBmB,CuEsBkB,CvEtBP,AuEsBQ,GlBTxC,CvB6C4B,A2CzEpB,ACkBA,AHmBoC,CzCoCG,CoBND,ClDpDzB,CkDoDQ,AlDpD3B,CkDoDE,AHnDJ,CwBqBE,ErB+BI,AqB/B4C,CAAC,EAAjD,EAAqD,UrB+BlC,ApBKO,CoBLN,ApBKpB,MoBL0B,GAAG,CAAC,GAAG,MAAd,CADjB;AQ0DL,AvD1GD,AjBTA,AgD4CA,AzBjBA,EoC8BG,AT/CD,A1CfC,AKoBD,EYFE,A0CMA,ANZA,A5CEJ,AITI,AuBgEA,AiC9BC,AKID,ApD9BA,AFCA,CiDsBO,Cb4BL,A7BxDA,AoDDA,ACkBA,A1FdA,AeSE,AwEaF,EzCoCI,A/BjDA,A2C2DF,AdnDF,CjBVE,ARJR,AITS,AkEEA,ACkBA,ANkBA,ApD9BA,CLKA,AJbC,ArBAV,AR4BW,A6FAD,ClBTC,ANZA,A0BLA,ACkBA,AXcA,ArFRM,AqBXJ,AwEaF,ClDzBC,AqBuEA,C1DpEC,AeSE,A6BQJ,CrBvBF,AqBuBG,CyBJD,AhChBI,AdHX,AgE4BE,CxBrBU,AxCPA,ASQZ,A9BRJ,AaekB,AwEaF,CHUZ,ApFhCE,ANsBW,AkDLF,C6CrBG,ACkBA,AxFpBlB,AaeE,A6BQS,C6CrBQ,ACkBA,AHQA,C5Dff,AUVgB,AdHA,A6DsCA,AxCfF,A2CKE,ClDzBC,AdHA,CwCOjB,A0BjBM,ACkBA,A9CeU,CjBVE,CmBmDI,AsC1BtB,A1BoCI,CdnDe,CPpBR,AqBuEW,C/B7DtB,AmBmDyB,AyCpCb,ClDzBV,AkDyBsB,EhE5BZ,C2C2De,AGxCpB,A9CnBoB,C2C2DC,ApBKE,CuB5C5B,AkBQ2B,CAAC,CAAD,C3CLC,A2CKlB,C3CLmB,CyBHxB,AkBQ2B,ChE5BtB,AgE4BuB,CAAC,ChE5BpC,EqBuBE,ErBvBuC,AuBgEhB,AFzCc,CEyCK,AFzCJ,EsBoCI,AqB/BV,ChE5BlC,AqBuB2C,CsBoChB,AqB/Bf,CrB+BV,AtBpCA,A2CKA,ElBTK,AzBIwC,CsBqC3C,CGvCF,AzBE+C,CyBJ1C,AzBIL,EyBDA,AzBCkD,KyBD7C,IvB0CkB,CAAzB,CoBJmB,CAAC,MAAM,EGtCxB,CHsC2B,AGtCN,CHsCO,GAAG,EGzC1B,EAIL,EHqCkB,GAAsB,AGrCnC,CHqCY,CADjB,IGxCK,CAAP;AKkGJ,AvD5GA,ATbC,EkE6DC,AdvCA,AOOC,ANjBA,A/BCA,A9BTsB,AagBvB,AsEsCA,ChBpCA,ANZA,A/BDA,CkCwDG,ArE1DD,AmBGA,AqBFC,AdHD,AuBiEA,A9C3DC,AuFsBA,ClD5BD,ArCDA,CyFGE,ACkBA,AXcA,CMmBC,CxFnDG,AmBGF,C4DmDC,A7DzCA,C+CEP,A2BfQ,ACkBA,AhCsDA,AdnDF,C/CrBK,AiEeX,AzBdS,AdHA,AwDkCA,A7EnCc,AFOd,AeSA,AsEsCA,CInDC,ACkBA,AXcA,A7EnCa,AR6Bb,A2FyBA,ExFnDI,AkBaF,A2C2DE,CkBlBd,A5DnDa,AqEgDA,CtEtCN,A6BQK,AyC8BZ,CNnBI,CAAY,AMmBA,CInDC,ACkBA,AhGQA,AqBbA,A6BQF,AyC8BE,CvBpCjB,AvCjBE,AkEEgB,ACkBA,AhGQR,AgE8CU,CIzDpB,A/CFmB,ClBbG,AmBGF,AdNG,AmFsDH,CrEhDC,A+D6BjB,ArBwCmB,C+BrFf,ACkBA,AxFRe,AagBD,ClBbG,CiEezB,AiBiBwB,AhEnBxB,EsEsCA,CxFnD6B,AiEe7B,C5DlBuB,A0CwBG,AyC8BE,CNnBC,A7EnCN,A0CwBI,CmCWG,AnCXJ,AyC8BI,CrEhDxB,A0CqE2B,AdnD3B,AyC8BN,EAAiC,ENnB7B,C/D7BgC,A0CqEE,GIzDtC,EjEfyB,CAAU,EmBGjC,C0CqEqB,C1CrEuB,CnBHrB,CAAH,A6DwE4B,UAA3B,GAAwC,IAAvD;AkBjBT,AzDjDD,ATXA,AKmBC,EmD6CE,ALJD,AlC5CC,A0CaD,ANjBA,A3BgCA,AbxCC,ASSD,A9BVA,CqBLA,C1BO4C,AiEgB1C,AwBXA,AELA,AJoCA,AxEFA,AyEkBA,ErEhDE,AqBFA,AoDDA,ACkBA,AXcA,A/E5BA,EoF+BE,AxEFA,CiDqBC,AyBlDD,AELA,A5EkCC,CO5BT,AmEDS,AELA,A9F2BE,CoEXA,A2BfA,ACkBA,AXcA,C3CMT,ACrCU,A0C+BA,ClBsBV,A7CnDW,AoBmCX,AqDtCW,ACkBA,A1FdA,E8DWF,AzBdI,A+CkCA,ACgBA,ClE9Cf,AiE8BgB,ACgBA,CNnBV,A/E5BO,AY6BT,AyEkBW,ClE9Cf,AmEDI,AP4Bc,AMmBd,ChDlDe,AzBgCA,C6EjCC,ACkBA,CJdA,AGJC,ACkBA,ALiCA,CjDbnB,CpBnCqB,AoBmCrB,A2CNI,AKGE,CpEhCgB,AqBFT,CAAU,CoDff,ADaN,AEmBS,AXca,EO5BC,AF+BC,CtBpBjB,AwBXiB,AELA,EpDuC1B,ACrCa,AmDFX,AEmB2B,AXcA,A/E5BlB,C8DWT,AzBdE,A0C+B0B,C/E5BZ,CgBDd,AoBmCJ,AiDagC,GC/Cd,AP4Bd,AKGF,ApF/BS,AqF+CwB,EDhBE,CMjB1B,CLiC4B,CC/CA,AD+CC,CKjCC,ELiCN,CjDbnC,AiDa4C,CAAT,EAAY,CKjCC,ALiCb,CC/CjB,AIc+B,ALiC/C,GC/CiD,EIcxC,GAA8C,EJdC,CAAC,CIAnD,OJAU,GAAoD,IAApE;AVoDJ,AfDC,A9CxCD,EYHE,AmCIC,A3CXiB,AILlB,A8DoDC,CvBtCD,CjEfkE,AuCwChE,ACrCC,AiDID,AP2BC,AQPD,EvEtBE,AyEHA,ACkBA,ANiBA,ApFhCoB,AY8BpB,E0E5BI,A5FqBD,CG5BL,CmBKE,AJ8BI,A8CsCA,AdnDF,CzBhBY,AiBkCT,AgDHA,AxEFA,A2ERA,CpErBS,EuCmEN,CAAC,AdnDF,A2CKT,CnDaY,AkDjCE,AGLF,ACkBA,A9CEF,CzBhBM,CsEJF,ACkBA,CvEdE,AmECC,AF8Bf,AxCfW,C0CfK,A1CeT,C5BjBP,A0CoEI,C0BpCY,AxEFhB,AgCbc,C5BjBP,AsEEQ,A1E4BE,A8CsCA,CdnDD,CzBhBF,AiBkChB,AkDjCuB,AGLF,ACkBA,CvEdL,AsEJM,ACkBA,C9CED,C0CfJ,CAAjB,AF8ByB,CAAC,CxEFxB,EI9BA,A4BiByB,CAAC,C5BjBP,CyElBf,ACkBA,CNgCJ,GxCfE,E5BjBwB,A4BiBQ,C5BjBP,A4BiBQ,GAAG,EAApC,EAAwC,EAAE,C5BjB5C,A4BiBE,EAA6C;AIqC/C,EkBCJ,AJzCA,AzCRA,AFJA,AiBkCC,ACrCA,AmDHA,AvDSD,AsDkBC,CnDWD,CyChDE,A7DeC,AiCaD,AkCNA,EMVE,ACkBA,ANiBA,ApFjC2C,ANwB1C,AkBOD,GsDwBG,AWrED,A5B4BA,AkCNA,AnC8CQ,C6BpEP,A5B4BA,AkCNA,ACyBH,ApFjCO,CiCKX,CAAA,AjCLsD,A0DqE5C,AdnDF,GvBZR,CAAA,CoERe,C7CoBD,C6CpBG,A/BuEA,C1DrEN,CiCKX,AjCLI,CmFQF,AlDHF,AWakB,CcmDD,EQdjB,A7CjDA,A8DEsB,ACyBlB,C/D3BJ,C+D2BW,EDzBT,AOQyB,CzCFzB,AwChCM,CCkCqB,CNiBb,CnCnBc,C4B5B5B,AnBmFe,ErC/DjB,AqC+DuB,CmBnFW,A5B4BhC,CyCEkC,AzDXpC,CZCA,AqEUqC,A9CEF,CwCexB,ApCqBP,AJpCgC,CiChClC,AO+CuB,AnD5BzB,AekDA,KUciB,AdnDyB,CwCe/B,AxCfgC,CcmDR,AdnDO,CAAP,EvBZnC,A+D2BmC,ApCqB/B,AJpC2C,EXb/C,AemDA,GoCvBwC,CxCfL,CAA3B,GcmDS,CgCrET,C1CsDJ,AUe8C,EVZlD,GoCxBmC,CAAkB,MAAjD,A1BoCa,CAAP,C0BpCmD,ApCqBzD,EoCrBA,ApCyBJ,EoC3BqC,CAE6B,apCqB9D,EAIY;AkBFjB,AxC9BK,EUYJ,AoDxCA,AzDHA,AiBiEA,AqCXA,ExFrDE,AwBWA,A4BSA,AkCNA,AGPA,AP2BA,AKIC,AnD5BD,AjCLC,ANwBA,AkBOA,CAlBwB,C6EfvB,ACkBA,A9EiBF,AoC0BI,EnDhEA,AyFOA,ArDGE,CpCVD,A4FGA,AV+BA,ArDJO,A2DuBP,CNnBC,ArBwCC,AdnDF,C6CpBE,A1DJT,ClCCU,AkCDV,ClCCW,AyFOD,ArDGG,CqDHF,CP2BT,CWbY,AhESV,CAAkB,C+D3BN,ACkBA,AXaA,A/B8BE,CnDhEhB,A4FGe,CJkDjB,CxFrDmB,AkCDnB,AiBiEqB,CsCzDnB,AGrBM,AVgDN,AhDnCF,AL+BI,E4DvBiB,A5DuBM,CgETJ,A1C2CF,C0C3CG,A3DtBxB,GAAA,YAAA,CiBiEqB,EAAU,YAAV,CAArB;AgBdI,AEYN,AmBRC,EfnDC,AjCCA,ArCEC,A0ByBD,AsBkCA,AuCrCA,CvFjCA,C6EHE,A7DeA,A0EHM,AX+BN,AhDnCA,AEUc,CyDNd,C7FHE,AwBUK,AiEHL,AGJA,A/D2BA,AsBkCA,AuCrCA,CjBzBJ,AjCCK,AkDwBA,CjBzBL,AOXM,A9CQJ,AawBG,CoB0BS,AnEjDP,AkFkCA,ClFlCC,AyFOJ,AIcA,AXaI,C1C/BC,AX2BA,A6DHT,ClDxBU,AX2BA,A6DHA,EvErBE,CAAC,AqBHA,A0C+BX,AQPF,C1F3BI,AwCGJ,CiCDA,CAAA,AOXgB,AxCYA,A0C+BA,ClFlCC,AwCGA,AX2Bb,CAAc,EW3BE,AiDIhB,AvDRF,AiBiEkB,C6BzEC,AE2CA,ClFlCC,AyFOX,C5DuBP,AsBkCmB,CtBlCvB,CsCmBI,CACJ,A3B/CA,AX2B0B,C4DvBX,AGJY,CpDAC,AiDIZ,AP2Bd,C1C/B2B,AoDAA,CZZvB,A7DeO,CAAc,CsDJ3B,CjCCiC,CxCHhB,AgFTiB,CPWlC,CgBKW,AGJyB,CHIX,AGJY,C5FHC,AmBM1B,CAAV,EgD2CE,CnEjDA,AgFTF,A7DgBE,AqBJJ,C2BgDA,Ca5D4C,AxCYA,CiCD3B,GgBKN,AtCyDqC,CgBf5C,AhD1CO,AsEA0B,AtC0DnC,ChC1DU,CgD6CZ,AMlDA,EAAuB,CN+CnB,AsB1CqC,CAAC,CtB8C1C,ChD9CI,EgCyD4C,CyC/ExC,CzCiFN,CgBjBE,AhD1CoB,CsEAa,CtB+CrC,AsB/CmD,OtEA/C,AgCyD4C,CgBf5C,ChBkBF,CgBZF,AhDhDoC,AsEAC,EAA1B,CAAP,EAA8D,CtB0C9D,ChD1CuC,CgDiD3C,AhDjD4C,CgD0CxC,EAQJ,AhBOgD,CgBf5C,CsB1CA,AtC6DF,CgBVF,ChDnDI,GAAkD,CADpD,OgD2CE,EAUJ,ChBKgD,CAAhD,gBgBfI,EAWJ,YAXI,EAWQ;AqBLd,ErBOE,AZpDA,AsCYC,A3DtBA,A7BDD,AFQA,AuFqBA,CxD9BA,ClCGG,AyEED,AtDKA,AqBJA,AiDIC,AP2BD,AKIA,AnD9B+C,AHC/C,ApCmBA,AgCEA,EsC+BE,AatEA,AxDkB4B,AoEN5B,EzEIF,AoE+BM,CLJD,A9C1B+C,AHChD,AyDkBC,ClDxBC,APMD,A4BgEC,CYvEC,AOXD,AxDkB6B,AgBN5B,AnCLT,AR8BS,AgCEA,CsC+BC,AatED,AxCYD,A3CyBE,C2CzBR,AkDwBF,ClElBgC,A+D6BlB,CdpCL,AjDOgC,AYDvC,AvCoBW,CsEiCC,A3B1DC,AoDAD,AV+BZ,ArFNA,AgCEA,CqDIa,AKIE,A1BmCF,C+BtEC,CzB0DhB,EAAmB,A9D/DnB,A4BWE,CiDyBA,A7EpCU,CcSV,CoE+BsB,AtD7BH,CsBArB,ApCFS,AqBJe,AoDAD,AV+BA,AKIE,ChC7BzB,AqCNwB,EpDAG,APMzB,E+ClBE,AE2CF,CF1CI,AO8CJ,CpE/Bc,AdThB,CoEIS,AjCCuB,CAAC,AnCLX,CkDWtB,AkBPoB,AjCCY,CeMhC,A/BAyC,AgBN3B,ChBMwC,EgBNf,EiCD9B,AOXL,C7DgBsB,AqBJxB,CiCD0B,AtDKD,A0CkEc,CrChET,AqCiEtB,IYxEuB,ElBOjC,GAAA,CMgEyC,EAE/B,I1CpEiB,CAAc,EoCE1B,AkBPa,CAAqB,CAArB,CAAnB,ClBOT,CkBPqD,AtDK3B,A0CkEe,CNhEtB,ApCFV,C0CqEC,GY1EgD,CtDKJ,QAApD,C0CkEuC,C1ClEuB,A0CkExD,E1ClEN,EsDLmD,AtD9BlC,CsD8BuD,AtDKL,CsDLhB,CAA5C,CAAP;AzBEJ,A0CwBC,EjBzBE,A5E0BA,AgCEA,AsBuCD,CsBrEA,A5C4BA,CsCiCE,AZpDA,A/BDA,AgBLA,AiDKA,AGzBM,AVmDN,A7ErCF,A4BaE,AlB0BA,AiCjCA,C4CpBA,CZSI,A7B6EF,CAAC,CI5DG,AfNF,AnCNN,AUuCM,A8CyCC,AdvDH,CPnBG,A0C+BA,ArDJA,AdMA,C6EjCH,CzB0DK,C3B1DC,CnCNV,E8CwEa,C+BnCX,A7EpCA,A8CuEY,CI5DG,AxC2Bf,CyBjCc,C0C+BC,AnEEA,CwC3BG,CfND,CnCLjB,CAAA,C6EoCA,C3BzBuB,AfNF,AQAA,CRAC,CnCLtB,CAAA,A2CKwB,CmB0DxB,A3B1DiB,CAAS,EnCL1B,A2CKJ,AGkEe,CI5DO,AJ4DhB,CXlE4B,CeM9B,AfN+B,EnCLxB,A8CuE0B,CXlEP,CAAU,EnCNtC,EmCM0C,CAAC,EAAL,IAAW,CAAC,EWkEC,GXlEI,CAAC,AWkED,CXlEE,AWkEzD,EAA0D,CXlEE,CAAL,CAAN,GAAgB,EAA3B,CAAD,GAAmC,GAA5C,CAAT,CAAjB;A3C0BH,AmDxBD,EmByDG,AKrCD,ACrBA,APIA,A1CCC,AFHD,AuEeF,A1DZE,ADVF,CVQE,C+BGE,AvDVA,AmBQA,AyEHA,AV8BA,AKIA,AnD/BA,A/BRA,AwB+BA,AsBuCA,E6B9EkC,AjE6ChC,AgCdD,EQbK,AvDVA,AuFuCF,AnD/BA,Ae8DJ,C0CjDJ,A3DtBA,CnBsCU,CO/BR,A4D6BS,ArDJA,AdMA,CyDZT,AqBJF,CrBIE,ApCjBW,CjBAC,AoE+BA,ApD9BZ,ACDY,CjBAC,AgBCb,C+BDA,A5CFA,A4D6Bc,C3BzBG,AyBpBb,AdkBJ,A5CFY,A4D6BG,ChDpCjB,ClCCqB,AuFuCF,ChC7BG,C1BqBD,C7B/BG,AwEyBtB,A3CMoB,AdMhB,CyDZJ,AUUE,AnEEmB,CwC3BG,AjCJxB,AaGA,CoBCyB,ApBDzB,C+BDA,A5CFmB,AcEb,CpCRqB,AkEQ3B,ArCuBmB,C0DQb,A1DRJ,CsBuCA,Cf9D0B,CrB6BxB,AoCiCY,ChC9DH,AoE+BiB,ChC7BV,ApCFO,AoE+BI,EhC7B7B,AnBF+B,CAAC,CoCiBlC,CecoC,CvFvCd,CwEyBtB,ArDjBY,CAAV,AgBCF,EgB6DE,CnDtE0C,AmBSxC,AgBAJ,CoD8BM,ApC+BwB,Ge9D9B,ClERiD,AuFuCF,AnD/B7C,CmD+B8C,CrB/BhD,A/CCW,AiBDsC,CoCiBjD,ArDhBY,GoE8ByC,ApC+Bb,ChB7DxC,GhBAI,EnBTwC,AkEQtB,Af8DQ,EoC/B5B,ApC+B4C,CnDtEkB,AmBSxC,CoE8BuC,CvFvCzC,CAApB,MmBSE,GAAgC,C+CDpC,EAAsC,I/CCK,CAAC,OAAxC,GAAkD,IADpD;A0ElCJ,A3D5DA,AmBmIM,AxDdN,AgBlCM,CgFvBN,A3D5DA,CViGE,AqErCgB,AX8Df,AhD1HqB,ALsHrB,CqDbD,C3BRE,AvDVA,AwEyBA,ANjBA,A/CCA,AGJF,AkBFE,AYiBA,AkCNA,AnDLA,EoD8BE,AnD/BA,ArB6BA,AoCiCA,EI5DI,AvDVA,AkEQF,A5CHN,AkBFM,ALMA,ApB4BA,A8CyCA,CrB3EC,AYiBD,AkCNA,AjC8BQ,AtCPV,AFzCU,CuCwBP,AkCNA,CdWE,AecA,AnD/BA,CILC,AqB2EE,CKtED,A5CHX,AaIW,ChBAC,CqDgBH,ArDhBI,CGJb,AcGI,CF/FN,CkB2GI,AmCmBE,ArD9HN,CE+FmB,CdHjB,AuEhCF,CzC+CoB,AyC/CpB,ANkEqB,A1BuCE,CrB3EnB,AYiBA,AkCNA,AnCwDkB,CnDtEG,AmCSjB,AkBmCF,CbzCkB,AayCO,AQkCL,CyBhEF,ACyBH,ApC+BI,CnDrEnB,EmCQsB,AkBmCtB,AQkCE,CyBhEJ,C/BJ4B,AFkCK,CrD3C1B,CmBQI,CoCCoB,ApCDN,ANbvB,CwCgDA,AxChDmC,EwCgDE,ClBnCvC,ACDe,CAAU,C8BArB,A/BC+B,ChBAzB,AkCmCR,AxChDA,CMaF,CoCCwC,AiBejC,AnBmBsC,AxChDA,C0CcJ,AgC6BxB,A1E3Cf,C2D8BA,ANlBsC,A/CCJ,AiBDlC,CmD+B0B,A1E3CoB,CwCgD9C,AxChDA,CbKA,CqD2CiD,AxChDF,C2D8B1C,ANlBsC,Cf8DC,ChC7DH,AoE8B1B,ApCgCb,CnDtEwB,AmBQgB,AoE8B1C,KvFtC+B,AqD2C/B,ClCnCF,CkCmC4D,CapCpB,Cf8DM,Ce9D9C,CfgEI,CqB/CG,ANjBqD,EMmB1D,CAFK,CjBfwB,CiBkB7B,CjBlBF,GvDT4B,AmDqEkB,CqB1CvC,CrB6CH,CnDxEgD,EAAlD,CADF,EmDsE8C,EAI1C,MqB9CF,CAAqB,MAHhB,EAIL,CrByC4C,CAA5C,GqBzCK,MAJA,CAAP;AK4FE,AhDrFL,ADJK,EuCkCJ,ArChDA,A0CiBC,AUMD,A7BQA,AxChDA,C2D2BA,CjBbE,ApCDA,AiCYA,AkCNA,ACwBC,AnD/BA,AWcD,CXhBA,C+BuDE,AarEA,AdgBA,A1BLA,ALMA,AkBmCA,AtCPA,AFzCA,AsC+EA,CgBdJ,A3B1DK,CYkBG,AkCNA,AzEnBR,AgDkFM,CMjBC,AUuDO,A9B9FP,AnBKO,CYxBN,A3BPA,C0CeJ,AyBnBI,AdgBC,A/BCA,ACDA,C4ChBA,AMuBG,AzEnBZ,AgDkFY,CVHD,ChClEC,ASkBR,CTlBS,AmEME,AjC6BF,AzBjBO,EoDnChB,GzBmBS,AyBnBI,AxCWb,AYkBgB,AkCNlB,AjC6BgB,CvB/BlB,AKJI,AgBkEe,CrB9DnB,AqB8DoB,CCtDG,CewCvB,AZlDiB,ApBFK,A0BqEE,AjCnDpB,EAA2B,CiCmDJ,CmBtFvB,A7CiBkB,CkBmCtB,CNtBO,CjBTP,AuB+B6B,AQkCE,AdxDX,CjBTpB,AXJa,A0CqEmB,C1CrEL,G0CqEA,AjCnDvB,CwBNiC,AS0D7B,CT1D8B,ADsDnB,AvBhDsB,CiDyFrC,A1BzCO,C0B0CX,ChBtCY,CNpEK,AMoEJ,CNpEc,AJgEc,CrB9DzC,CKJsB,A0BsEd,CAAS,C/BlEjB,AXJY,AgBAoB,ChBA9B,CoCEE,CRWF,CmBdE,A/CEA,CgBDiC,CoBGjC,CWJgD,CW4GhD,AX5GA,CdamB,CyBiGvB,A/CzGa,AsBST,CjCZO,AgBDW,ChBCV,AgCiE6C,AUI3B,G/BlE9B,AyBDa,AHUL,AjBbuC,AgBkEa,AUI3B,CgBqC7B,AzB9FK,ADqDL,CrB9DgB,C+C0GpB,CtB3GiB,CzBCjB,AKJoD,ELI3B,C+CuGrB,EAIJ,A/C3GA,AXHI,CgBD2C,CLInB,AKJ+B,A0BsEnD,G1CrEsB,C0D0G1B,AhBrC6C,EgB0CjD,AzBpGuB,AjBZnB,CiBYF,CS0DmD,CAAC,CNnErC,CAAU,CsBwGvB,A1D1GA,A0CqE6C,CAAS,CgB0CpD,C1D/GoC,CoCCtC,EMoE6C,CAAzC,CNlEH,EpCH4C,A0CqEkB,C1CrEjB,MoCGpC,EMiEa,CAArB,CNjEY,GpCHd,GAA8D,QADhE,IoCIgB,CAAU,KAAvB,IAAgC,CAAC,sBAHpC;A1BuBJ,AXhBM,E2D0GJ,AtB5GC,AiBiBD,AjCUA,AoDxCA,A/D0BA,C2BtBA,CzBQE,A9BbA,AgFRC,A7DkBD,AGNA,AkBDC,AS+DD,AqCnDA,AnDNC,AkBmCD,AtCPC,AoCsCA,C6BzFD,AxCeA,AzBWyB,AoCuDzB,Ce3DE,A9BAA,ArB+BF,AgClBuC,AnBMnC,CiD+FD,AjD/FE,CEdD,A9BbA,AsBIE,A2B8DA,AYcF,C/BnEC,A6DZP,AzEec,ClBhBN,A2FCR,A/D0BU,CiD+FD,AGlIA,AdgBA,A1BLA,AJKA,CyCkHC,AtCjFV,AsBuCY,CtBvCZ,AcGW,CrD5CC,AmBUA,AkCkCA,CwB8EC,A1DhHA,AqBPA,AqDiBA,A3DtBA,C2C4HR,ArCvHS,AJKV,EyCkHY,A7E1HA,AqD4Cd,AQoCgB,CvC5EC,AkBDF,AmDFjB,AvDOiB,CyCkHC,ArCvHA,AmDFlB,A/D0BoB,CEdlB,AuB+BiB,AQoCE,AjCrDA,CNvBC,AiBqCtB,AUyBsB,AYcA,AjCrDF,CiD+FC,A/C7GA,AS4BrB,AXdA,EqBwCI,AIvBF,C/BxCoB,AJYlB,CAA4B,C2D0GN,CAAC,A7E1HrB,CAAJ,AuCyCF,ACtCS,AtBaL,C2CgEiB,C7DhFS,AmBUjB,AqBPiB,AtBaK,CCNR,AoB+B3B,EsCiFA,AhB1CmC,EgB0CA,AXlH/B,A5CJkB,AcIL,CyCkHmB,AzClHT,CdJE,AqEH7B,CzBOsC,AjB2DnB,C4BuDoB,AvDtHjB,AuC4EmB,C8B/EzC,CdyHA,AvDtHiC,AcI7B,Ca4DC,C4BsDsC,AXlHA,A3BiC3C,EsCiF6C,A1DhHjC,C0DgHZ,A1DhHE,E0DgH8C,AvDtH1B,AuC4ED,C1CrEjB,AGPF,GqEHF,A9B+EsD,EKxEhB,CLwEhC,CKxEF,A/CGO,CAAC,U8ByDkB,G9BzD1B,A8B0DI,IAAI,C9B1DkB,A8B0DjB,GAAL,CACE,CADF,EAEE,E9B5DN,E8B4DU,C9B5D4B,A8B4D3B,IAAL,CACE,E9B7DqC,CAAC,C8B6DtC,UAAA,E9B7DR,A8B8DU,G9B9DoD,CADhE,A8B+DY,eAAA,EAAQ,YAAR,KACG,yBAAyB,GACxB,yBADD,GAEC,GAFD,GAGC,GAJJ,CADF,CADF,CAFF,CADsB,GAatB,CAdW,CADjB;AD7DE,EmBwDJ,AZ7CA,A1CpBA,AKqBA,AiC2DC,AvBhDD,EiD+FE,AXlHC,A/CGD,AGPA,AiBqCA,AanBA,AH4DA,A0CjFA,AJsCA,AnD/BC,AiBoCD,CaxCoC,CCwDlC,ArC/CA,A9BbA,AgFRA,AdiBF,A1BNE,A3BRA,AKqBE,AUWA,CYxBD,A3BRA,AKqBE,AUWA,CiD+FC,AzBpGA,AmCiBN,A1ByCI,Ad3DF,CE6DG,AD9EO,CRDN,A3BRA,AKqBE,AUWA,CoDnCF,A1DYC,AiBqCA,ACtCA,AmDFA,CdyHG,AGlIH,AnBwFG,Ad3DF,CMuBC,AnC5BE,CiD4CD,AhDjDA,AkCiCA,AnC5BE,C2D0GC,A1D/GF,CoB8BC,AoDxCA,A9ENA,CbKC,AiDkFb,ApCvFa,CbKC,AiDmFZ,AIvCF,AxCjDY,AgDqFI,CMpBD,AtDjEjB,CsDiEA,AU8DoB,A3D1GpB,AUWoB,CiD+FC,AtCjFnB,ACtCE,AayCe,AxCjDA,AgDqFE,AjCrDA,CuCiCD,AU8DA,A7E1HL,AsBIK,AyBiBA,AnBMA,CiD+FlB,A7E1HE,AsBIiB,A8BkBE,AmCiBrB,A3DZF,CEdsB,CyD2BjB,AlCIH,AQoCuB,C7DhFD,AgFRpB,A5B8BsB,AmCkBpB,A1BwCoB,C7DhFtB,EsBIF,AuC4EmB,CAAS,CT1DA,AmCkBnB,CpE7BE,AiCWkB,AuCrB7B,CxEUyB,A6BPvB,CAAmC,EC8ErC,EAEE,AsC5CC,GpE7BO,CAAV,AoE6BoB,A1BwCD,EAAuB,C1CpExC,A6BRA,EIkBsB,AmCkBC,AvCpCuB,CIkBH,IjCVpC,CAAC,C0CoES,C0BxCjB,A1BwCE,ET1DoB,AH4DxB,EG5DA,AH+DE,AsC7CqC,CpE5BrC,IoE4B0C,CpE5BtB,MoE4BiB,GpE5BrC,CoE4BqD,CAAC,CpE5BtB,I8BsElC,AsC1C6D,EtC8C3D,C9B1EuC,CAAC,IoE2B1C,EAEE,CpE7BA,CoE2BF,EpE3BoD,AoE7CnC,CpE6CoC,AoE8BlD,QpE/BH,A8BuEA,EAKE,aALF,EAME,cANF,EAOE,iBAPF,EAQE,gBARF,EASE,cATF;EgB/DF,A1BuBC,AbxCD,AiEAC,A3CGD,ApBuBA,CWYA,AoDxCA,CxB6DE,ArC/CC,AoCJD,A/CGA,AqBTC,AiDID,AGHA,AzDIA,A9BVA,AgD8CA,AxCjDA,EbKE,AgFRE,AnEGF,AmCSE,Ea4EA,Ad3DA,C0CdA,AGHA,AzDIC,A9BVD,AQHC,CoDuBP,AwBXO,AGHA,AvFNA,A2CMG,CiBcV,C3CbE,AjBPA,AwDkFU,AjCrDF,CyBiBC,ALxCE,ApBuBF,CTfC,AgBJV,AkBoCU,AzBjBF,CTfG,AOXb,AbNa,AegCb,CF1BA,AbNc,CsBaC,AtBbF,CSUX,A+BuCA,AxCjDK,AegCS,CNtBd,AmEEA,CxBWF,CjElBmB,AiEkBnB,A2BdE,AvCwCiB,AxCjDA,CbKC,AyFOD,A5EZjB,CSUA,CAAA,AsEAE,A5CDoB,CtBHxB,A2B2CE,CrD5CiB,A0BCnB,A+DMuB,CzFPnB,A6DgFuB,AjCrDF,CNtBvB,AMsBwB,CoBvBG,ApBuBJ,C5B3BG,AsBKpB,AuC2EsB,AjCrDd,C5B3BZ,A4FKO,CzEOE,AyEPD,CzEOe,ASeI,CiCqDG,AjCrDlB,CqCThB,AJ8DmC,C1BxEpB,CAAW,APmBS,CqCTnC,AjBda,Ea4EiB,C1CpElB,AGPV,A0BDuC,Aa6EjC,C1CrEN,CyEPE,AzDGF,CsDDiB,CtEMf,AsEN6B,AzCHpB,Aa6ED,CvC5EQ,AuC4EP,AjCtD+B,CAAC,CqCT9B,AvCjBf,AkEI4B,A5CDoB,ApBuBJ,CqCT5C,AJ+DQ,AjCtD2B,CiCsDlB,CI/DC,AvCjBlB,CuCiBA,A9CLW,AsEN6B,A7DoBU,CTdtC,AsEN6B,A7DoBzB,CqCTK,ErCSiC,CgEtBlD,E5CDJ,C7BSI,AyERoC,ClEJjB,C+DMU,C5B0EH,E1CpEN,AScuC,CqCT/D,AwBXsD,A5B0ErB,AjCtD+B,CF1BhE,A+DMmB,AGF4B,AhEsBgB,CqCT5B,AwBXjC,AGF8C,AhEsBhD,CF1B+B,GmCgFvB,E1CpEJ,E0CoEuC,C1CpEP,EOZpC,AkEII,C/B4E2C,CnChFJ,AmCgFK,C+B5Ec,EzEQnB,A0CoEA,C1CpEC,A0CoEQ,CI/DpD,AvCjBA,AkEGE,E3BcmD,AvCjBL,EmCgFL,CAAnC,C1CpEJ,E0CoEyD,C1CpEP,K0CmExB,CAAxB,E1CpEJ;EoB+BF,AoDxCA,AxFGA,AUVC,AKqBD,A8BZA,AGuEA,AvBhDA,CflCA,CsDmEE,AU6DA,A7EzHC,AiEkBD,A9CJA,AGRA,AILA,A0BoBA,AHuEA,AwCpFA,AGFA,ALoCA,ApDlCA,ACDA,A/BRA,A4BWA,AoBkCA,AtCPA,EiE7CM,C9DwBH,C2D0GD,AzBrGE,AHuEA,AlCvDA,A8C6CA,Ad7DE,CZbD,ACDA,AHGD,AlB2BC,AF1CA,AsCgFA,ClBjEA,CgCQE,A/CFA,CfXT,AeWU,A2CkEE,AjCvDF,CqBiEC,A9CvFX,A8BKE,AoBkCS,AxCjDA,AegCA,CyBiBC,AzBjBF,CqCTD,A/CFI,AUWb,CKjBa,AfMb,A6BIoE,CiC9BhE,AjCgCI,CdZN,AoBkCA,AnC5Bc,AUWA,CuCiCC,AalEX,AnECW,AKqBA,CLrBC,CwCiDC,AtCPjB,AF1Ce,AgDuFI,CMtBD,AhEvDpB,AYgCoB,AF1CT,AKqBS,CkCKC,AjBbnB,ACDA,AjCFF,AeWA,A8BZqB,Ca8EG,CRtCtB,AxCjDqB,AKqBA,AiC2DvB,CgBfoB,AfvCI,AvC1BjB,AKqBiB,A8BZA,CAAC,ApBuBA,CqBiEvB,ApCjGwB,AKqB1B,A2CkE4B,AjCvDF,CqCTjB,Ae5BL,AnB4FyB,AjCvDJ,CqBiEG,AlCvD1B,AGrB0B,A6BIwC,AnBOpD,CwBNY,AJjB5B,CiBcE,AbG2B,ArCgBC,A8C6CN,Ad/DpB,C8BuGyB,AhBxCI,AjCvDF,CiD+FD,AjD/Fd,CzBtBhB,EyBsBmC,CzBtBnC,EYgCE,K8C6CsB,CjCvDoB,CuCiCxB,AfvCI,AS6DuB,AjCvDF,CwBNA,AjDhBhC,AyBsB+B,CuCkCxC,AU6DyB,AjD/FM,CuCiCf,CU8D2B,CV5D3C,AhEzDJ,AyBsBkD,CuCiC9B,AvCjCJ,CzBtBG,CgE0Df,CvCpCkD,CiD+FzB,AzBrGL,EyBqG+B,AzBrGrD,GjDhBF,A0D6EwB,CgBwCK,AhBxCvB,C1D7EqB,C0EqHkC,AjD/FE,CAAC,CAAD,CAA/D,EuCoCmB,CAAC,AU2DS,EAAwC,IV3DlD,CAHC,CU8DS,CV1DzB,AUyDF,EAEE,aV3De,CAAC,MAAM,GAAG,CAAV,CAJC,CAAlB;AnBvDH,AGuEA,EczDE,AQhBD,A1DmCC,AaVD,CqCXA,CnCJE,AkDjBC,AxCOD,ALMA,ACDA,AjCFA,A8BMA,AoBiCA,AxCjDA,AKqBA,E2D2GE,AnD1HA,AuB2FA,ApCjGA,C4DOJ,CAAA,AtEGM,A0D6EA,C1B1EC,ACDA,AvBZA,AegCA,CYzBC,AS0FA,ApCjGA,C2BOC,ArCGP,AkDuCO,Cb1CC,AqBgFE,CgByCD,AhEhIA,E2BOE,CVUC,AUVN,ALMN,ACDA,CyCoHE,A/C/GW,A2CVf,AjCAE,CiCAF,C5DPiB,AegCjB,CYzBkB,Aa0ChB,AxCjDgB,C2BOhB,AS0Fe,ApCjGA,CAAf,EoCiGkB,CYVK,C/BtEvB,CAAuB,CAAvB,A+BsE0B,E/BtEA,CAA1B,C2CVF,AxB0FI,CnBhF2B,CAA7B,C2CVF,C3CUkC,CAAhC,I+BsEuC,GAAG,CYhF7B,GZgFiC,CAAC,GAAL,CAAS,GYhFrD,EAA4B,AZgFgB,EAAgB,QYhF5D,CZgF4C,CYhFN,AZgFhC;A7CpER,AnBeM,AkBSL,AiChCD,AGuEA,AvBjDC,EqCRC,AzBjBC,ALMA,ACDA,AiBqCA,AxCjDA,CsBMD,ACHA,AiBwCA,AxC7CO,CsDuEL,AU2DC,A/C9GD,A9BdA,AyEGA,APKA,AdcA,AkCPA,AtEDJ,AEGI,ElBjBE,AiD6FA,EkB5BE,ArCnDA,AoCLF,AdaI,AlCLF,A2CkEA,Ad7DF,C0BnBG,AaYD,AjC8BC,AxDhBO,AgBjCP,CyEmBA,CrC8EE,AjC/EX,CcAI,CiBQO,C7BLG,A6BKF,Cc6DG,E7DnFE,AkBiBA,A6BKF,C/CtBG,AyEGd,AvDcA,A6BKO,C0BnBQ,AZgFJ,Cd7DG,CEuEZ,CjD7FW,AiD6FK,AqC9ElB,AvCOgB,CoB2CG,AnEjEnB,CkESkB,ArEoBhB,CyFdkB,AzFcQ,AkDPT,CoB2CG,CDxDD,AdaI,CcbvB,ArEoBA,C4E1BF,AxB0FE,AqC9EsB,ClCOI,AHuEF,ApDhEO,AgEsDtB,CYhFgB,CPOxB,ALyEc,GhEtDf,AkDP2B,CuCPT,AvCOU,CmBZtB,AoBKwB,AzFcQ,GoDgEJ,ApDhElC,E4E1BF,A5E0B2C,AkDPzC,EoB2CF,AM9DwC,A1BmBF,C0BnBtC,ArBmB2C,AS6DhC,Ad7D4B,CoB2CG,CmBlDA,AzBoEV,CT5D5B,AHsEsB,AFvEgB,EEuEI,AFvE5C,CEuEwB,CGtEtB,ALD0C,CEuEG,CqC9EjB,AvCOgB,CAA9C,CEuEwB,AqC9EyB,CvCOA,CEuEC,EYVzC,EyBpEqB,AzBoEe,EyBpEU,UzBoE9C,CT5DP,AS4DA,EKzED,AdaiB,KcbiC,CAAlD,IACC,EdYA,EAA8B,YcZd,GdYhB,CcZoB,AdWmB,GAEvC,EcbyB,UdW7B,8BcdA,EAIE;Aa+CA,A/D7CN,AwEyCM,A5DzBN,EJpBE,A0D0BA,A/CzBA,ACDA,AvCoBA,EG7BE,AGKA,AkDwCA,AxCjDA,AKqBA,EiDgDE,ADrDA,AoBGA,AzEnBA,AgDuFC,CArCD,C7D9CE,AiD6FA,A9CxFA,AeYA,C6DyCQ,AlF7BP,AgBjCA,A2E0DO,CFvCN,AJoBR,ArEvCE,AkC0BI,CoB2CG,AmBlDA,AJoBT,A7BUS,CcoBC,CDrDC,A/DPA,AeYA,A2CkEA,C1D9EC,ANwBA,CsEoCC,A3CxDb,A6BoCa,CcoBT,A3CxDJ,ANQc,A6BKF,C/CtBV,AkEYE,ArEiBW,CsEoCC,CAAC,AlB4BF,CiC1Df,ArFNA,AqBZkB,A6BKF,CmCahB,A/E9BM,AeYa,CiDgDC,AlB4BF,A9CxFE,ANwBA,CyFdhB,CjC8BK,AnC5BK,CMRd,A6BoCuB,AnC5BA,CMRvB,AyBoFsB,AqC9EE,AnFVlB,C8CwFiB,AiC1DvB,A/E9BE,CgE4DE,AjDhDsB,AsEqCtB,CrFjDuB,AkDwClB,AnC5BkB,A6BKF,AyCiCzB,CrBU4B,AlB4BV,AiC1DlB,AhElB0B,A6BKA,CgCoCtB,A9BoCI,AIjDqB,AnC5BN,CiDgDO,AYN9B,A7D1C8B,CiDgD1B,AmBlDA,ApEEmB,CAAT,CiDgDmB,AdpBxB,AnC5BP,CMRF,C6BoCmC,E7BpCnC,AgE6CI,CNnBG,AnCb6B,CMuB3B,ANvB4B,AyCkCrC,CvCqCkB,AFvEkB,CmCapC,A7BUyC,ANvBhB,CEyEjB,CiC5DE,AnCb+B,EgCoCrC,A1BbK,CAAP,C0BeF,AvDnDW,GyBsFK,AuCzCZ,CvCyCa,CuCtCjB,CTCI,CvDjDJ,AuBayB,CgCuCzB,AhCvCM,CvBbY,CyBsFV,CAAgB,CAAhB,C8BrCJ,C9BqCuB,C8BjC3B,A9BiCQ,CAFU,CuCvCd,CvC0CI,CuCtCR,ETAI,EAKJ,G9BiCgB,CAAC,EuC1Cb,EAIM,CTAN,C9BsCI,C8BjCC,A9BiCe,CAAhB,EAAmB,CAAnB,CAHU,EAIV,QAAQ,CAAC,MAAT,CAAgB,CAAhB,EAAmB,CAAnB,CAJU,CAAZ;AjChFR,AamBA,EkDiCE,APlCA,AQpCC,AxCQD,Aa2CC,AxCjDA,A2E+DD,EXgEE,A/C9GA,A2CXA,APUC,A1CHD,AFHA,A8BkBA,A8BWA,A7EpCA,AR8BA,EoDqEG,AqCnFD,AnFVA,AqFsDE,CTKD,A9B2BD,CkB1BE,ArCpDA,A2CXA,ArBsBA,A8BWE,ArFNA,AgEsDF,Ad7DD,C0BpBE,AjDOA,AFHD,AkBJC,ASuFqB,A5C1FtB,AwBgCC,CgD4FC,AvDrHD,A2B8FH,AqCrFI,AjFhBD,AFMG,AaOZ,C+DoDW,AOjDA,AzFcE,CkFmCD,APlCV,AhDrBE,AFHA,A8BkBI,AoCmCM,CXgED,AL7FX,AhDrBW,A0D0BE,A/E9BA,CsEHD,ApEHV,AR8BY,CkFmCD,AvC9Db,AqBiFa,A2BxBE,CTKV,AG7BW,A/E9BA,AaOlB,C6D+GiB,AhF9FE,CgF8FD,AE3DA,A/DpDlB,AnBiBoB,EsEoCA,AYDA,A5E3DE,CgE4DD,Ae9BE,A/E9BA,CgE4DH,AU0DE,AL7FpB,CLmCM,AU0De,AE3DA,APlCrB,AcfI,AzFca,CAAf,AgEsDI,EMlBkB,AmBlDA,ClCSlB,AjDnBF,C4E2DsB,AlDjC5B,CgD4FkB,AE3DW,AN9DzB,ArBsBY,A8BWE,ArDJW,CqDIG,ArDJhC,C4C7B+B,CIyHC,AS5G1B,AzDgBwB,CgD4Fb,AKxFC,CLwFd,ArDlHS,A0D0BT,CH6BF,AvDvDwB,AgEkDW,CAAC,CTKD,CAAC,GZCG,AYDA,CZCC,A3CxDtC,CuDuDF,CvDvDiC,CuDuDU,CSLR,CTKU,ASL7C,CrBM8C,AYD9C,A3BxCM,E2BwC0C,CZCC,A3CxD/C,C2CwDqC,AKnCvC,CLmCM,CfzCiC,CoBMvC,ApBNE,EAAwC,QoBMZ,gBAA9B,EAA8C;AHgC1C,A7B3DL,Aa2CA,EwB8EE,AGhID,AxDcC,AREmB,AaoBpB,A2D4BA,ChEpDA,CuDyDE,A/EjEA,AwE+BA,ArDhBA,AGPA,AgEQC,AGPD,AGFA,AV6BA,AKOA,AlF1CA,AR6BA,AqBbA,CoEJoB,CnBqDjB,ArCpDD,A2CXA,ArBsBA,AH4EA,AqCxFF,AnFPE,A0B0BA,AgCoDC,ChEtDA,AgCEL,C2CDQ,AUKN,ArFNI,CwEgCQ,ArE9DP,AmBeD,AsENA,AGFA,ALoCC,ApFrCA,A0B0BA,AXfA,AsE2CA,CTKC,A5DlDD,AsENA,AGFA,A/DyBP,C4C7BS,AzDSW,CbNV,AaMU,AaoBV,CkDiCC,A/EjEA,AH8BN,AgCEL,AXfW,ClBjBC,AH8BV,AqBbU,CWeC,C1B1BC,A0B0Bd,C7BhCe,AyFSb,A5FqBa,AqBbA,CYHC,A9BdT,A6BgCS,AXfA,CYHC,A8DPf,ALoCA,AvE/BkB,ChBZF,AmBehB,AsENe,A5FqBC,C4FrBA,AtFHR,AaMU,AnBkBD,AqBbA,ClBjBC,AyFSH,AGDb,ALmCgB,ApFrCA,AeWlB,CCDE,A+DoBF,ArDJF,C4DvBqB,A5FqBH,AqBbI,AsE2CA,CxF5DC,AyFSN,AP2BR,A/E9BC,ANwBR,AqBbqB,AsE2CA,CfzDnB,AgBMF,AFkCA,ApFrCE,CaMgB,CqDkDhB,AvChDA,AdFgB,AEKM,CmD8C1B,AvCjD2B,A2CXA,AmBKhB,A1EST,C6DgD0B,AazDhB,AV4BE,CH8BV,AN/DA,AvDcyB,AsE2CP,CtE3CQ,CsDcG,ArDfnB,AqE4CiB,C1D9C3B,A9Bd4B,AmBgBjB,ADCb,ClBjB+B,AkFoCd,CpDtBe,A0CiBE,AtDdF,EsDchC,C1CjBE,A8DNA,E9DMmC,A9BdrC,EAAuC,AmBgBrC,CkD8CA,AvChDA,A9BdsC,A4FQhB,AV4BxB,AMwBoB,ETKM,AVD5B,AvClD4C,AoDsBd,AMwBc,C1D9CxC,A9BdyC,C+EmEzC,A5DnDyB,A+DoB3B,CpDtB6C,A9Bd7C,C8BcE,AoDoBM,ClFlCuC,AkFoCd,Cb0B/B,AvChD8C,CAA9C,A9Bd+C,A4FQ/C,CbyDwB,AVA5B,ArEjEE,C8BcmD,CiDsDjD,AjDtDA,A9BdkD,A4FQhB,CzEQlC,CkD8CA,AvChDoD,A0D8ClC,C1D9ClB,CuCoDJ,AlDlDyC,AqE4CiB,CTQjD,AjDtDkD,CiDsDjD,AjDtDN,CiDsDK,Aa5DoC,CbyDjB,AazDkB,Eb6D1C,AVPA,EAKJ,ElDnDmD,AqE4C7B,CrE5C8B,AqE4CpD,CTK4B,CazDxB,Cb8DA,Ea9DsD,IzEQtD,G4DiDwB,A5DjDoC,C4DiD9D,AVHE,EAMJ,OlDrDE,CyERA,iBvBuDE,EAOJ,gBAPI,EAQJ,cARI,EAQU;A7BjEhB,AgDwDC,ETWE,AVAD,A7C5DA,ARCA,AHhBA,E2DmCE,AC5BC,APUD,A/CGA,AsENA,AGDA,A3DGA,ApCkBA,AgEsDC,E/BtEC,A9BdA,AoDyBA,AvC7BA,AKqBA,CmDsDC,AxEzCA,AgBlCA,CqDiBG,ArEiBF,AkDRF,CdVE,CHEE,A9BdA,AiCYD,ApBhBC,AKqBE,CmDsDD,AlDvDA,AtBcJ,CwEyCK,AxEzCR,CiChBS,EuCyDE,AxEzCA,CwEyCR,AxD3ES,CAAC,CwD2EC,AxEzCd,AgBlCY,AKqBI,CLrBlB,CwD2EkB,ClDvDC,AcJjB,ApBhBiB,AKqBE,CCDD,CkDuDC,CpC1DjB,CHCmB,AZGE,CYHD,AoCDE,AhDIA,CmDsDD,ArEvEA,CqEuEC,CGxCC,ANjBvB,AhDGiB,CsDcO,AtDdE,CCD5B,AcHS,CAAC,CfIqB,CmDsDjC,AHzDS,AhDGyB,CAAD,CmDsDC,ArEvEA,AwE+BhC,AtDd4B,CmDsDK,ArEvEA,AkBiBE,CYH1B,A9BduB,AkBiBJ,CYHO,A9BdjC,AwE+BiC,AtDdhB,CmDsDiB,AvCzD3B,AZGP,ClBjBmC,CqEuEvC,AvCzDwC,AGDpC,CHCO,A0CiB0B,CHwCK,CvCzDC,CuCyDC,AvCzDjC,CuCyDX,ApC1D2B,CHCmB,CuCyDC,AvCzDpC,EAAsC,IAA7C,CGDA,GAAmC,GAAnC,CiCCA,CAAmC,CjCDM,EuCkBR,EACjC,GvCnBgD,CAAC,CuCmB5C,MNlBL,CADF,EjCDA,MuCmBmC,EAEjC,CAFiC,EAGjC,KAAK,eAAL,CAAqB,MAHY,EAIjC,KAAK,MAJ4B,EAKjC,gBALiC,EAMjC,yBANiC,EAOjC,CAPiC,CAAnC;AgB+BJ,EX8DE,AtB5GA,AhB2BA,A+C3BC,AKbD,A9D8BA,AgCEA,EQqCE,AvCzDC,A0CyBD,ANzBA,AgBqBA,AKOA,AtD5BA,ApCgBA,AgBlCA,CiBeA,CqCsDE,ArCnDA,AJXA,A0BsBA,AH2EA,A9C/FA,ANyBA,AgCEA,AhBpCA,AkC0BD,EsBiDK,ArEvEF,AkEcE,AgBqBF,AKOA,CViFC,AczHP,A9ENO,C8EMP,CtBqEW,AGhCF,ApBdD,AH2EC,A9C/FA,ANyBP,C0CYF,AajBS,CtBXE,AS4BX,A2CPW,CLwFX,ARpDc,CGhCD,AeGA,ApFrCA,AkDyCA,AxClDA,CiBkBT,AJXU,A6DuCA,ApFrCA,AUTA,CbIC,AoDyBX,AvC7BS,CsDqEG,AEME,AvCzDF,AoDqBA,ArEvCT,CsDqEU,AEME,AsBrEnB,AxFGiB,CkEkEC,A3CpEd,A0BsBa,AuCvBjB,AxFGI,CkEkEF,ApB6BE,ApBpEe,AhBpCA,C0B8CnB,AbvCoB,AuBiGA,A9C/FA,A0B2BA,AhBpClB,C0B8CF,A2CPqB,A/E9BA,EgE4DjB,AZlDJ,AiBwBS,AeGH,ChC3BN,AiBwBwB,ArElCA,A0B2BpB,CAAqB,CsCiCC,AtCjCtB,CoBoEA,A9C/FA,A0B2BJ,CoBqEM,AiClEJ,AKO0B,C7DvCxB,AvBEyB,A0B2BA,CUU7B,A2CP8B,ChBrBG,AxCXJ,AvBEE,CgE4D3B,AhE5DA,CoDUJ,AhB2BA,CgB3BA,AWDoC,A/DTF,EiDoBjB,AuCvBjB,CvCuB2B,AmCiBzB,CtC2Dc,C0CnGhB,AJwCuC,EhC3BvC,CHUI,EGVJ,ChB2BA,CU2DM,EAAkB,CuB9Df,EAA0C,AmBrCnD,CzBYsD,CAAC,CXC/C,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,QWDmB,EXCpC,AWDE,CMyBiD,CjBxBxB,AiBwBuC,EAAzD,CAAP;AKqFH,A1B7CD,AUMC,EkBdC,AP/BC,AcvBD,AzEpBC,C2D+BD,A3DjCA,CwD6EE,AdxDA,AkBbA,AtDcA,AoB0BA,AoDxCA,A9F4BA,AgCEA,CAAC,CsCiCC,ArCnDA,AoDqBA,AKOA,A1FZA,AqBdA,EqCDI,AvDhBU,A0BIZ,AuBkGE,A9ChGF,A0B2BA,CkDsCC,ANpEA,AtDcD,AtBcJ,AgBlCK,CMoBA,ADAC,CqB0BC,AoDxCA,ATiCA,AKOA,ApFrCA,CuBFG,AuBmGF,A9CjGA,CgE4DC,ArCnDA,A3BTF,AUTE,CVSL,C4EiEN,CxC5Bc,AU4DA,CnBxFV,AmBwFW,A0CpGA,AxFGA,A0B2BA,C0BjBG,AoCbF,ATiCZ,ArDHY,AXhBA,CWgBD,AhBpCE,CwD2EC,A3CpEE,AuBmGV,ApBtER,AhBpCgB,C0CmBG,ANwFT,AsC7DR,ApFrCW,AUTE,AKoBE,CLpBR,CwD2EU,AlDvDnB,AoB0BA,AbvCqB,C+CDrB,AtDcmB,AoE0BC,CdxCC,A5DNA,CAAhB,AKoBH,EiDiDA,AzC9DwB,AbPF,AKoBA,C+BuFN,CAAC,CMxFU,AkBb7B,AcwC2B,ChC3BG,AoCbvB,AJwCqB,CIxCC,ClBAC,AtDc9B,E8BuFU,CoBhCuB,ApBgCP,A0CrGnB,CtBsEL,AItE4B,AxBqGpB,C0CrGyB,AxFGtB,C8CkGgB,CAAnB,AsC7DR,ApFrCsB,CoDUxB,ANuFQ,EAEE,C9CnGG,CuBFQ,CAAwB,AvBEf,IuBFT,AvBEa,CuBFgB,AuBqGhC,A9CnGiB,CkEkEF,ApBiCd,A9CnGe,CwFH3B,AxFGM,CkEoEX,C3CtEmB,AvBEkB,EuBFiB,CuBqG9C,A0CtG6C,C1CsG7B,CoBjCO,ApBiCvB,EoB9BR,A3CvEmB,AuBqGQ,CwBtGC,AxBsGpB,A0CtGkD,AxFG/C,CuBFkD,AuBmGvD,A9CjGJ,CkEkE6B,AIpE/B,CxBsGQ,CoB9BR,C3CxEmB,CAAjB,C+CAG,GJoE0B,CpBkCf,CoB7BhB,ApB6BiB,G0CvGZ,G1CuGG,A0CtGN,C1CsGsB,CAAhB,EwBvGoB,AxBuGD,CAAnB,A0CtGD,ClBCP,AxBkGM,CwBpGsB,EAG5B,CJkE+B,ApBoCvB,EoB9BR,QI3E4B,AkBC1B,C1CmGI,A0CnGiB,ClBGvB,ExBsGM,C0CzGJ,CAA0B,ClBGvB,ExBsGM,C0CzGT,CADG,ElBAuB,CAA9B,AkBEI,GtBmE6B,EAO/B,AsB1EO,O1CwGD,GAAyB,CAP3B,EAQE,E0C3GR,CtBqEiC,CAAjC;AUAH,AlBeD,EIlEE,AOqBA,AjCEC,AoDtCA,AvDID,AvCsBC,AgCEA,CUQD,AoDxCA,CxBiEG,AEcD,AvCjEC,AyBCD,AkBRA,APMA,A/CIA,AGVA,A8BkBC,A/CzBD,AQJA,AkCyBA,CoBsCA,CezBiB,AKQf,ApFrCC,AUTD,E0CmBI,AvDhBA,AkEcF,AxCVA,ARaA,CuDTC,AnDAD,AjBPA,AQJC,CoDuBP,A3CZO,A2BsGG,AsCnEN,AlF1CG,AQJC,CsDqEC,AF9CT,A7BXA,CAAA,A/BRE,CAhBoB,AQYX,AKoBA,CITT,A2BsGc,A5C3Gd,CqBCW,C+CIX,AvDSY,ClBjBG,CqEgFD,AdhEE,AvDhBA,CqEgFD,ArEhFA,AaHA,CbEsD,AiEqBvE,ApDvBkB,C0CmBG,AvDfb,AiEmBR,AvChBmB,AUKnB,AvBZiB,CaOG,AUKpB,AvBZE,CwDmFA,CAAoB,AnD/DhB,C+B6FqB,AsCnEvB,CnDlCJ,CmDkCW,CtCmEmB,CAClB,AbtGZ,CasGa,CM/FkB,AUI/B,CVJgC,AvDjBuC,AuF4CvD,CvF1CI,AkEaW,CDM/B,ACNgC,ElEfuC,CAAjE,CiDgHe,CvB3GR,AuB2GS,CoB/BpB,AHlEI,AxCVgC,C6BYjB,AnBPrB,CmBO0C,AgC2B/B,CrB7B8B,AqB6Bd,CtBvBhB,CAAX,AhB2Fa,CAAgB,CgB3Ff,AhB2FD,CgB3Fb,ACN8C,CjBiGd,AsCpErB,CtBvBI,AvChBF,AuB2GA,CAAD,CM/FV,A7BZgD,CuB2Gd,AsCpEC,G7DvCxB,EAA2C,A6DuCd,GtCoEE,CAAC,CiBjGJ,CAAqB,GxCVjD,CuB2GuB,CvB3G+B,AuB2Gf,CiBjGlD,AjBiGkC,AsCpEC,CAAkB,CrB7Be,AjBiGf,CAAnB,CAAxB,CADkB,EvB1GjB,AuB4GD,AsCrER,C7DvCE,AuB4GO,CsCrEkD,EAA3D,EAFmC,CAE6B,EtCqE/C,CAAC,MAAT,CAAgB,CAAhB,EAAmB,CAAnB,CAAD,EAAwB,QAAQ,CAAC,MAAT,CAAgB,CAAhB,EAAmB,CAAnB,CAAxB,CAFkB,EAGlB,CAAC,QAAQ,CAAC,MAAT,CAAgB,CAAhB,EAAmB,CAAnB,CAAD,EAAwB,QAAQ,CAAC,MAAT,CAAgB,CAAhB,EAAmB,CAAnB,CAAxB,CAHkB,CAApB;A8BrCZ,AlFzCC,E4EvBE,AlCoCD,AoDtCA,A9ETC,C4DDD,A5DDO,CwDqFL,AdhEA,AUIA,A3CXA,AiEkCC,AnDlCD,A/BNA,AFGC,CAND,CgEkEE,AnEjEC,AkEaD,AxCVC,AwD8BoC,AnCb9B,C/CxBP,A0BIA,C6BeI,AUIA,AvChBF,AUKA,AlBQA,CLpBC,CwDmFC,Ca9CsC,A/E5BrC,CuBLL,AwDiC2C,CfgCpC,AEcA,ArE/EA,AiEmBE,ACNF,AxCVA,AUKA,ClBQC,EmD+DV,AJ5Dc,CVJC,A7Bfb,AwDiCA,AhEjBW,CkBRT,AlBQA,EqCDc,CUIC,C7BXD,GmBOK,MYkDrB,ADpDA,EXEgB,EAAlB,CUIc,CAAqB,CAAC,CAAD,C7BXjB,C6BWqB,A7BXX,C6BWO,CAArB,CAAd,E7BXA,EAAmC;AvCwBvC,AmD1BM,ApBuBA,EyCmDH,AlCtED,AnBCA,AasBA,EsCiCG,ArCpDD,AyBEA,AUIA,ACNC,AxCrBD,A0BiCA,AqChBA,AGDA,ALmCA,AlFzCA,AQNA,CqDeA,C9BHE,AjCHA,A0B2BA,AhBpCA,AKoBC,EqCDG,AvDfF,AoDyBE,ALLJ,C0CXE,AGDA,AzFHC,AUTA,AmCSO,ApBuBA,CqBoFJ,AwCvGH,AGDA,A/EZL,CiBiBO,AmCMA,ACNA,A9BLA,ApBET,CbLU,E8C2GI,AwCvGZ,AtDAF,AYWU,CjBPR,AKJF,APmBI,CqCTU,A7BXV,AjCHM,AyBuBW,C5B5BN,AiEmBA,AwBVD,ClCMI,AUIJ,AjDTd,A+BUc,CkBDL,A7BXQ,ApBEL,AasBK,CAAC,C0BjBG,EPVjB,ADeM,CkBDY,AbME,AqChBH,AtDArB,ANuBI,AmB3ByB,ADeT,CkBDX,AhB6FgB,AwCvGH,AtDAtB,ANuBuB,ADJnB,CqBoFsB,AjCtG1B,AasBI,CuBPuB,AHuFF,ApBhFzB,ADJgC,CqBoFlB,AwCvGA,AzECK,CiDSQ,AhB6FE,AdvG7B,ANuB2B,AmB3BvB,COU0B,ANiGhB,CMjGiB,APVK,CyCIP,AGD3B,AzDCF,APmBI,EqCT4B,AhB6FE,AwCvGhC,AtFJQ,AyBuB2B,CqCTJ,A2BXD,C3BWA,A9DdX,C8DcM,AbMU,AwCjBnC,AxDAe,CgBiBqB,AhBjBX,EmBON,ApDVX,C6CAN,COUF,AUIsC,A7BXpC,C6BWF,AjBd8C,CbIhD,CcuGc,EGvFa,CHuFmB,CGvF5C,IHuFiD,GD3G/C,ADegD,ECfS,EDenD,CAAN,SE4F0C,GAAyB,CAA7D,EAAgE;AJjFtE,EsBmCH,ArCpDA,AmCMA,AQbH,AOZE,AtDSC,AbPA,AmCSD,ApBuBA,CE7BA,AmCiBA,AvC1BA,C6ByBE,AkCLA,AGDA,AzDAA,A9BPA,AWOF,AauBE,AXhBC,EgDHC,AgBmBA,A9CxBA,AjCJuB,A6CCvB,ADeD,AnBQG,E2BbA,AvDhBY,AmCUZ,AnBAN,CyDHF,AOZE,AnCoCc,AjBFL,CoDlCT,AEsCQ,C9CxBC,CmBOC,ANiGE,AD3GZ,ApBuBY,COnBD,AnBAX,CyDHF,ClBSe,A2BiBA,ClEtBX,AYkBc,CQpBZ,ARoBa,COnBX,C6CfN,CAAA,A5CckB,ARoBN,CAAS,CsDIjB,A/CvBgB,AnBClB,CiCsGqB,AjCtGrB,A6BoBE,CIkFoB,AiChFF,A9CxBA,ASsBO,CUfN,ANiGA,CMjGC,ANiGZ,ArBpFA,CqBoFe,AjCtGzB,AYkBF,CqBoFY,AjCtGV,CoBFgB,EAAd,CpBEF,CuCKW,ANiGoB,CMjGD,CAAnB,CyBrBb,CzBqBmC,AvCL1B,CuCKI,ANiGyB,C+BtHtC,CzBqBsC,CAAzB,ApBNO,AnBApB,CmBA+B,AUqB3B,CUfqC,CVeM,EVrBzC,G6CfW,C7CesB,GoBM1B,EAAwC,ANiGzC,AdvGgC,I6Cf5C,C7CeuC,C6CfZ,G7Ce0B,CoBMxC,CAAX,iBpBNmD,CAAW,KAA9D,EAAqE;AsC1GzE,CAAA,CJgLE,AvChEA,AmCMA,AQtHkB,A/CqGlB,AmB2BA,AE1DA,AnBwDA,EoDlCE,A5B8BA,ApCbA,AiBEA,AJmBA,EqCnBE,A/BJA,AhCN8C,AyByB5C,E5B7BE,AgFLF,A5B8BA,A8BQA,ArDAE,CwC8CD,AWpFA,A/CmBD,AJmBG,ADJA,CqBoFE,A9C7GD,A8BUH,CEJE,ChCNgD,A0B6B7C,ADJA,CsDID,ArDAE,CmDtCD,AnDsCE,EMvBV,APmBY,C5B7BC,A4B6BA,C5B7BC,CAAD,AmCUA,CnCXwD,AkFkCnE,A/E7BI,A0B6BE,ADJA,C5B5BJ,AkFgCW,A/E7Bf,AyByBiB,ECIE,CuBRrB,AvBQA,CwC8CF,ArEhFyE,AyEhG3E,A5CgI6B,C7B9Bd,AyElGf,ArB0H0B,A8BQlB,ArDAoB,ADJd,CKfV,ALeF,EoDlCE,AEsCyB,ClFlC8C,AiCe9C,C+CnBE,ChFMV,AiCajB,CiDmBI,ElFlCmE,CAAnE,EmCWW,CAAW,OAAxB;AkCsEL,EFdC,A3CvDA,AXdA,AmCSA,ApBwBA,E2BdE,AjCPA,AjBNA,AFEC,A8BWD,AYgBA,A3BdA,EiDgDI,AnEhED,AgFND,AdmBA,AdWA,A8BQC,A/CvBD,ACFA,AYHA,EOUE,AlDbJ,AaeI,CITA,ATZC,AeiCA,CNrBA,A8BiBC,AhBjBA,C4CbC,A5B8BA,AjBfA,AtBdA,C0CmBC,AjCPR,CiCOS,ArCEA,CiDgDG,AtDrEF,CWcZ,AYFa,CZEb,AXdO,AmCSO,CmB4DG,AvCpCF,COnBX,AjBOY,AUYA,CfjCC,AKqBf,CbfA,CkDaI,A1CnBa,AKqBA,A8BZA,C3CHV,EQNa,CWctB,CwDfI,AxDeJ,A4BeI,AvC7BJ,C0CmByB,AnBPjB,A/BNN,AuB2Ba,CwBJW,CewCG,AatEF,ApDkCA,CoBxB3B,EmB4DgC,A/BzDF,AYHA,ApBwBA,CAAC,GQrB3B,CRqB0B,CQrBM,C4CbC,ApDkCA,CoDlCC,EpDkCR,EuCoCD,AvCpCa,C2BdjB,CAAU,CYkDY,AvCpCjB,CuCoCkB,CvCpCD,CAAC,CuCoCD,AZlD7C,A/BLF,E2CuDqD,AZlDX,A3BcZ,CJnB9B,CImBqD,CuCoCN,CAA/C,CatE2B,ApDkCG,EAA4B,CoDlCC,ApDkC7B,EAA+B,CAA/B,CAAf,CoDlCY,AxDe3B,AImBA,EoDlCI;AXsFN,AxDpFC,A2EgEK,A5D/BL,EuCoCC,AmBlDA,AvCKA,EiCzBG,A7DqBD,AKNA,AFDA,A4DwBC,A7E9BD,AFCA,A0B4BA,AmB3BA,CgCZA,AEmCA,CfqCE,AZlDA,AWDA,A/BJA,AjBOA,EkCQE,AkCVN,AlDPM,APwBA,CVhBA,AmEDN,AzDiBO,AmB3BA,ADeA,AyCwCO,CjC7CN,ApCCD,A8BgGG,CkB/CD,AZlDA,AyBpBA,AEsCA,A/CvBA,CNsBA,COxBE,AlBSA,A8BZA,CmB4DC,AlB+CE,AD3GF,CyBCC,AS2BA,AnCbb,C5BJE,CDCE,A8BZW,CsCUf,ApECmB,A8BXZ,C7BWS,AmEDhB,AlDPM,AlBSW,CiDgDC,AZlDA,A2BkBA,A9CzBA,AYHA,COUC,CPVC,CmB4DC,AhDjDnB,AiCSmB,EHuFI,AiC/EF,AlC5BA,CIoBC,AHuFE,CAAD,CAAX,CkB/Cd,AlB+C6B,AdtGzB,AqDkDA,CvCoDU,AiC/Ec,A/CvBA,AaLA,AwCuDO,CpDpD7B,AYHuB,GC2GK,AqCjGlC,AnDLI,ACF4B,EDEE,CmDKlC,AJkBS,AlC5BP,EkC4BmC,A9CzBA,AYHA,CAAC,AwCuDlC,CrDlDmC,CiBejC,AoCmCuC,CxCvDJ,EC2G3B,AdtGV,AaLF,COUO,CPVoC,COUzC,ANiG0C,CqCjG9C,AtCV+C,COUC,APV9C,CZGI,CYH4C,CC2GC,iBAAL,GAAyB,CAA7D,EAAgE;AT5GtE,A3BNN,AkCuBC,AnBUD,E4CSE,AgBqBA,EF7CE,ApEEC,CAdyB,ClBHxB,AgFLA,AdmBA,A1CLK,A4BgBJ,A8BQD,A/CvBA,ACFC,AlBWH,A8BdE,CIkBA,CGRE,CfZQ,CxCHN,AgFLJ,AnDoCF,CyDhBO,AJkBA,A/CvBA,ANkBkB,C2CW3B,AvByEY,ApBjFH,A2D6BC,ChBrBV,ApBdW,EoCmCE,CF7CC,AtCVA,CAAC,CkC4BX,AlC5BU,ChDLG,AwCGb,AQEA,AwCuDS,ChDzDY,ALOrB,EqC6BJ,AxBlCoB,CwBkCpB,AQ5CI,A/BqHmB,AdtGF,CnCVC,AiDgHE,C+BrHb,AxCQP,AS6GmB,CAAX,CT7GoB,AS6GL,AD3GF,CC2Gb,AD3Gc,AwCuDb,CxF5DL,AsFeN,AtCVuB,CwBkCzB,AQ5CgB,AhCUZ,AwCuDuB,GxF5DI,AwEuC/B,AvByEiC,CdtGD,CAC1B,CnCX4B,CAAC,AwCG/B,CS6GkC,CT7GM,CLQjC,AqDiDE,CAAb,IhBrBA,AQ5CI,C7Ce4B,C6CfC,C7CiB3B,IKTF,CLSO,CKT8C,CxCHrD,AiDgHQ,EjDhH2C,AgFLZ,CAAC,W7CiBtC,CAAsB,IAAtB,CAA2B,C6CjBA,EAA7B,C7CiBE,CAF0B,EAG1B,KAAK,iBAAL,CAAuB,IAAvB,CAA4B,IAA5B,CAH0B,CAA5B;AYYN,EoB2CE,AhDjDC,AoB2BD,ACvCA,A8CYC,AE6CD,CF/CA,Cd0BE,AQ5CC,ASeD,AGDA,ALiCA,ApD5BC,ACNA,AYHA,EkBSC,A1CLA,AgBNE,A0C6Ba,AM4Bf,EjC7CE,AvDfA,AoDyBA,CeuCC,AsBtDD,AGDA,ALiCC,CtCsEI,AwCtGJ,AGDA,CpB8BE,AhD9BA,C+BMC,AhB2BV,ACvCY,AgDyDF,CjC7CC,AhB2BX,C4BsBY,A3CvDR,CAAS,AgBNE,AgDyDF,ErBIE,AnEhEA,CuF0Cb,EpBsBF,AnEhEkB,AwCGE,CeYd,AfZe,AiDOnB,AFiCE,CpBqBgB,AZjDA,AhB2BpB,CAAA,AajBqB,CqCfA,CzFVf,AwF4DiB,CpCnCC,AoCmCA,ChDzDxB,C+CwCW,CAAC,CnClBY,CbiBxB,AqDjCE,CpB8BO,CAAa,CjCGtB,AqDjC+B,CJmDlB,ChEnDA,AoEAX,CpEAwB,A+DkCtB,ACiBJ,GjC7CoB,CAAU,CgC4BL,EfJvB,EjCGF,CgB3BM,IgC4BF,EnClBoB,CmCmBhB,CnCnBgC,MmCmBzB,CAAC,C/DnCZ,O4BgBoB,AmCkBpB,EnClBqD,CmCoBjD,CAAC,KAAK,SnCpBU,CAAlB,AmCoBE,GACA,yBADA,GAEA,IALN;A1FXE,E2ESH,ArDvBD,AqBbA,A8CaA,AnDFC,CqCuBD,ArClCA,CgC6DE,A3CzDA,AemCA,AqDhCA,ALqCA,ApF9CuB,AaSvB,AiBIA,AJgBA,AgBCA,EUhBG,AWDD,A1BXE,AYsBD,AqCfD,APqBqC,C3BnBrC,CvDZE,AuF+CJ,A1DjBI,CbpBA,AiBIA,ApCgBQ,AgCAP,CbpBA,AiBIA,CiCAE,A3B4BA,A2CXqC,CAAC,A/E9BvB,AaStB,CuCKS,ApDdwB,A0B6BxB,CAAT,AgBCU,CL5BG,A3C2BX,C0CYU,AkDhCA,A5FoBO,AgCAP,CsCkCC,AZjDA,A2BgBX,CfkCA,A3B9Dc,AiDOF,CtFTQ,AN6BpB,EoChBF,ApCgBwB,C0CYxB,ApCzC0C,CoF8C1C,CtDjCmB,AYiBnB,C4CrBqB,AFsClB,ApF/CmB,A8BaF,ApCgBlB,C0DfoB,AkCLA,AFsClB,AtDlCiB,AYiBD,CUhBG,A1DeK,I2C3BC,A+C6CpB,EpBgBI,AlClDe,COXI,APWH,CkCoD3B,A3B/Dc,CiDMG,ClCMN,CfZuB,E2B+D7B,AoBlBJ,EhCjCmC,CYmD5B,AZnDD,CgCiCa,ChCjCmB,AtBDzC,IkCkDa,AoBhBc,EpBmBzB,ADrDA,A1BXc,G0BWkC,A1BXE,CAAtD,C2B6De,EAIX,CoBpBA,IACG,CpBeQ,EAKX,CALW,CoBfH,CpBqBR,CANW,ADlDX,ECyDA,KoBtBG,GpBeQ,CAAb,AoBfuB,CAAC,KAAK,UAF7B,EAGE,EAHF,EAjGiB,CAqGd;ARoBD,AlBcA,E/BvEJ,A0C2BA,AhD/BC,AeiCA,ACvCD,AmDCA,AxDWA,AtCeA,A2F6BA,ChEtDA,AemCA,C4BgCE,Aa9EA,A5B+BC,AhBlBD,AjCNA,AaUA,AEMA,A8BbA,EhDJG,AkEcD,A1BXA,AiDOA,A5FoBE,AgCAF,AgBCA,A2C4BA,C3D7BC,A2D6BA,CjC5CC,AnBRA,AlBUE,C6DqDM,AC5EP,AWUP,A9BgFc,CZ2BJ,A0C3GV,A9D0BQ,AmB1BA,C7CHC,A0B6BL,AXbO,CsBdD,C0BWC,A9BPA,ASwBA,AG3BA,AwCuDX,CRjEE,A/BqHY,A9C9GZ,AegBY,C8DvBD,AxCSA,A3C2BE,A2F6BF,EtB7CT,AuBJW,AvEOE,CkBVX,AvCuBY,AqBbA,CiDuDD,Aa9Ef,ASgBe,AENjB,CZkEI,AC5Ec,AWUlB,CZkE0B,AjDzD1B,CqC2DoB,ArC3DpB,AMNoB,CvCuBG,AgDCF,AG3BnB,CnD0BsB,AgDCF,A3BdL,C8DvBM,AxCSvB,AS4GyB,A/B9FvB,CiDuDkB,AlBuCM,AwCrGF,CxCqGC,AwCrGA,AENzB,C1C2Gc,CAAe,CAAf,A0C3Gd,C7DSA,AjCiBkB,AgEsDd,C/BvEJ,AjCiBgC,AgEuDhC,EZ0BkC,AJhFb,EkCuCjB,AlFxCc,AgDCgB,EkCuCS,EC5EzB,A5CaE,AvCuBoB,CmFpCD,A5CaT,C2C+D1B,AYlEJ,EZkE+C,AlFxC7B,CiCjBlB,AmBkGc,AbxGZ,AyB6EE,EMZgB,Aa9ElB,A5CakC,AvCuBW,AgEwD/C,C/BzEA,AmBkG8C,ApDjFE,CsE0ClB,CAAV,EAAa,AtE1Cc,CsE0C3B,AlBuC+B,ApDjFnD,CgDCqB,CsByCe,AtBzChC,GflBU,E+BuEV,EAGJ,CMf4C,CAAC,CAAD,CAAxB,EAA6B,ArC3DjD,EAAwB,AmBkGsB,EY3B1C,CZ2BmE,CAA7D,AYvBV,EMhByD,AlBuCiB,CkBvChB,CAAD,CAArC,CAAlB,ONYE,EAKJ,kBALI,EAKc;EkBlBlB,AvD5DA,AeiCA,ApC1CC,A8BYA,ApCiBD,AmD1BC,AasFD,C1DtGA,A6CWA,ClBcE,A9BbC,AgFND,AdoBC,A5CND,AmEDmB,AEHnB,AJ+CA,AlFjDA,AwB4BC,AgBCA,A3BdD,AsE0CA,CCpDA,A5DqBA,CkD0CI,AGxCF,A9CvBA,AvCuBE,CqBbD,CYJG,AyBEF,ArCEA,AsE0CE,CRjED,A1DcD,AjBNA,A2CEC,C1BIA,A4DsBC,A7E5BD,C0EoEI,AYlEF,AvDGA,APuBA,CoBiFG,ApDjFA,A2F6BA,C1D9CC,AyBEF,CwBuDG,A7DrDT,CgEaQ,ArFAE,AqBbb,AsE2CG,CTUL,AjDzDgB,AkDnBd,AWUY,AvDGV,C/BLF,Caec,CkBVC,CuDHf,AtFFe,CyBWI,AZIF,AsE2CR,CjC7CL,A2BeF,AhEbgB,C+B8FG,A/B9FJ,C+B8FK,AiCjFF,A7E5BpB,AR4BsB,AqBbtB,CqCFqB,ANgGA,ApDjFE,CoDiFb,C3BvGV,A2BuGyB,CAAf,CnBlGI,AyBEV,CjCPqB,CQKzB,AjCiBF,EoDiFiC,C3BvG/B,GcDe,CawGqB,AbxGX,IoDqDhB,CAAgB,EpDrDvB,UawGQ,EuCnDe,CAAM,OAAtB,CAAP,GAAyC,UAAU,CAAC,gBAAX,EAD3C;ETYF,AC5EC,AdoBA,A1BZD,AmDEC,AxFFD,A8BYA,AYSA,CmCrCA,AdFA,AyBkBA,CxBqEE,ArC1DA,ARJA,A8BgBA,AqCdA,AvEMA,A8BbA,AasFA,A2B9BA,ETUE,AxBvDC,AfbD,AJKA,APuBA,CAAC,AXbA,CiDsDC,ArC1DA,AsBYE,A8BKF,AhEbA,CAAD,C+B8FM,ApBjFH,AXbN,A8BbM,AwCwDA,CvCqCE,Ab1FD,APuBL,CkDwCM,AvCpEA,AS+GA,CiCnFC,AhEbA,A8BbA,AwCwDA,ETUE,CAAb,A7DrDE,CsBfa,AtBJa,AsE8DjB,C1D/CK,AMNZ,AlBYF,A8Bfc,CAAC,CkC0BX,CpDjBa,AoDiBA,EfyCE,Cf9CG,AJrBb,EmBmEa,ArC1DA,AUXxB,A0C4BM,AlC1BJ,ClBSuB,AsBYE,CZvBD,C0C4BC,IAArB,MM8BK,C1D/CQ,CsBYsB,AoCmCf,C1D/CxB,AsBYwC,AoCmCf,ErBWzB,EAA0C,AqBXjC,EAAsB,CAAC,IAAvB,EpCnCgB,AoCmCa,CpClCpC,GoCkCO,EpClCH,AoCkCsC,CpClCrC,GoCkCE,CAAT,apClCE,CAAuB,CAAvB,CADuB,CAAzB;APOH,EkCuCC,AC3EA,AdoBA,AyBVA,A9FwBA,AmDzBC,AwCwDA,EjC7CE,AvDhBD,AwCGA,AY0BA,A/C1BA,AwB4BC,EsCyCC,AYDA,AGxCC,A9CvBD,CvCsBC,CG9BC,AwCGA,AY0BE,A/C1BF,ELHE,AiDkHE,Cb1GD,AvCsBA,CAAC,GAAG,CAAb,C2C3Be,CuCoEC,A1EpEA,AR2BA,CAAC,C2C3BC,CuCoEC,A/EvEA,AwCGjB,CuCoEF,A/EvEoB,AH8BA,C2C3BC,AnCAA,C8DqEC,Af3CE,EpD7BL,CmEwEM,AnExEnB,AoD6BqB,ChBrBvB,AvCsBJ,CuCtB2B,CvCsBC,CuDDD,AvDCE,CG9BC,AKG5B,CLHA,AoCQE,AvCsBJ,CQ3BgC,CLHC,AoCQA,AvCsBA,KuCtBK,E+BgElC,E/BhEA,0BgBqBuB,EACvB,UADuB,EAEvB,UAFuB,EAGvB,mBAHuB,EAIvB,gBAJuB,CAAzB;APKJ,EoBbE,EnCPE,A8DHA,AVqBC,AlEpBD,AnBmBA,AqBXA,CgEOO,ClF1BL,AwCGA,AJKA,A/BLA,CR2BC,CiCjBC,AjCiBA,C+FpBA,A5ECA,AEQC,ClBnBC,AiEoBR,AhB8FU,A2CxGH,A5ECA,CiDSP,AiBWS,A9CvBA,A/BLD,AR2BC,CG9BC,AKGD,AR2BC,CqBXC,CFRT,AEQU,CYNC,A9BbA,EkBmBE,CrBWV,AqBXW,CrBWd,CoEVF,A7BZI,C6BYJ,A/CDmB,CrBWC,AqBXlB,CkBXmB,ClBWC,CYNhB,AzBVF,AagBmB,CbhBA,C+BKF,ClBWK,CAAxB,CYN0B,A9BbA,CAAC,AH8BA,AqBXA,CrBWC,AqBXA,CrBWD,CAA3B,AqBXA,ClBnB0B,CAAxB,AiEoBJ,A5DjBI,AagB8B,C0EThC,E3BUF,CnCPE,A8DHmC,E9DGG,GMLnB,EwDEuB,AxDDtC,CwDCuC,C3BU7B,G7BXL,E6BWX,EAAuB,E7BZF,EAEf,KAAK,O6BUX,EAAuC,A2BVrC,OxDAI,CAAsB,IAAtB,CAA2B,IAA3B,CAFe,EAGf,KAAK,iBAAL,CAAuB,IAAvB,CAA4B,IAA5B,CAHe,CAAjB;E2C+DJ,A5DvDA,AmEAA,AnDDA,AtCgBC,AmD1BD,AwCwDA,EjC7CE,AUKA,AbcA,AwCvBA,AxDCC,A/BTA,AWSD,AakBA,EsCyCE,ArC1DA,A9BbA,AwCGA,A0C4BA,AhEZA,C6DmDC,CxBvDC,AUKE,AbcF,AkCnBN,AzDeQ,C0BfD,AHmBA,AkCnBP,AtCXO,AwCwDA,CtEzCG,CiDoDD,AYDA,A5DvDT,A+DgBS,CfwCC,AYDA,A5DvDV,AqBZU,A0C4BA,ClF/BC,CuDeC,ApBDZ,AjBKc,CiDoDD,AYDA,AvCnEA,ALWb,AaVA,AwCwDA,CrBWI,AYDC,AjDzDS,ADiBE,CuBID,A8BHX,AhEZa,CiDoDD,AYDA,A3BpCA,AkCnBhB,AJgBgB,AhEZE,CiDoDD,ArC1DA,AwDEjB,AzDemB,CkDwCD,AdlDE,AzBjBF,AX2BE,CVfpB,AqBZmB,AtBgBE,CiDoDD,AhDxDpB,ADIsB,C6DmDD,AdlDE,AiBWnB,AhEZiB,CiBLrB,AjBKkB,CiBLlB,ANgByB,AXXA,CsBhBZ,A0C4BW,ArDDL,AXXD,C6DmDO,A7DnDR,CiDoDb,AYDsB,AxBvDnB,AvDfmB,AwCGtB,CVUuB,AyBEA,AvDfA,CmEuEC,ArC1DA,ADiBE,AXXA,CgEYD,ArDDE,CsCyCD,AexCA,CfwC1B,AZxDG,AvDfmB,AmCc1B,AjBKiC,C6DmDjC,AxBvDE,AvDfE,AoDkCW,AlCfmB,CiDoDD,AhDxDjC,AiCmBM,AlCf2B,C6DmDC,AxBvDA,ApBDlC,ANgBoC,AXXN,C6DmDK,AGvC/B,ArDDF,AXXmC,CCJrC,ADI8B,C+CCS,AbcF,AlCfjC,C6DmDkC,AjDzDA,CAAC,CiDyDvC,AdlD0C,EckDA,COvD1C,CPuD4C,A5CxDnC,C4CwDT,COvDA,CPuD+C,CjDzDnB,AXE5B,CWFiD,AKCjD,EAAc,EiBoBuC,Gadd,CbckB,CAAvD,AkCnBF,CxDF2B,AmCOkC,CnCPzD,AmCO0D,AbcF,GadC,EAAM,GAAN,CAA3D;ApEWH,AmD1BA,AwCwDA,A5D/BK,EF1BJ,AUSC,CAlBD,C2C4EE,AjDzDC,AmCOD,A9CLA,AqBZC,A8CYD,ACoCA,ApDrCA,ANgBA,CW9BA,AX8BC,C0BfC,AHmBA,A8BHA,EfwCE,AYDE,AlDxCF,CoCVC,AsB+BA,ApDrCA,APeO,C2BdN,CwBuDG,A5DvDF,AqBZA,A8CYA,AJgBA,CAAC,C3BhBC,CwBuDG,AnDzCV,CF1BJ,ASWE,APekB,CTdN,AOZd,A4DYc,ACoCZ,A1DrBY,C0BfC,A2BgBX,ArDDW,CkDwCG,AxBvDF,A2BgBA,A/CjBA,ANgBA,CkDwCG,AQnBF,A1DrBA,CsCyCC,AYDA,CZCC,AYDjB,CZCgB,AYF6B,CZEzC,AYAJ,AdnDA,AiBWE,A/CjBF,C8BMoB,ArCSlB,CF1BJ,A6DgDuB,A1DrBR,CsCyCS,AzCpExB,AwD4BwB,ArDDA,ADDO,CTd7B,AScE,EqCTuB,ArCSO,CqCTN,AsB+BA,A1DrBA,ADDxB,CqCTuB,AiBWE,C3BhBlB,AUKT,AiBW4B,AtDFK,EuC0CH,AZxD5B,AUK4B,ApCUA,CsCyCC,AtCzClB,CsCyCiB,CAA1B,AexCF,ArDD+B,CAApB,CoCVsB,AsB+BpB,A1DrBH,CoCVwB,AqBLpC,CrBKmC,ApCUE,CoCVrC,AsB+BsC,C1DrB1B,CoCV4B,ApCUxC,I0DqBe,GAAgC,C7DhDjD,GAAA,A6DgDE,CtB/BA,EAAsD,OvChBtD,CuCgBA,SvCjBF,EAEE,UAFF,EAGE,YAHF,EAIE,QAJF,EAKE,OALF,EAKS;A7BwBX,AgBnCM,AmCSN,E7BUG,AmEAA,AlDFD,AHAA,ALgBA,CThBA,AmEAA,C/BEG,AUKD,A3CXA,AIAA,AwDsBC,AKqBD,ApDtCA,ANgBA,CAAC,CsCyCE,AnExED,AwCIA,AY+BA,AnBrBJ,AfKI,CeLJ,CJiBM,CPrBA,AaKC,AtBlBO,AeiCP,CNpBA,A2BuGG,CgB5FD,AvCXA,ARSA,CsBfC,CxCJC,CiDiHK,CjDjHH,AwCIA,AtBeA,CeLb,AJiBc,AXZA,ClBnBV,AiCcJ,AJiBe,ADDA,CqBmFK,ApBlFJ,ADDA,C5B9BC,AwCIA,ALWf,ANgBe,AXZA,CQTf,ARSE,C+B8FmB,CdlGH,AjBIA,C+CElB,A3CXA,AJSmB,CsBfR,APUb,COVuB,AS6GI,ApBlFZ,CPrBQ,A2BuGK,AdlGR,ANgBI,AXZA,CeLxB,ApBjBI,AKsBqB,AUWV,CfjCkB,CoCoHV,ArBnFI,CNpBzB,A2BwGU,ApBnFgB,AXZA,CsBff,AtBeT,CsBfA,AZ0B0B,CVXC,AUWA,CCCC,AhBlC5B,AKsB4B,CWYjB,ChBlC0B,AKsBrC,CWY+B,ADDL,CCCf,AXZqB,CeLpC,AJiBc,ADDuB,CAAP,CqBoFP,ApBnFgB,CoBmFf,ArBpFgB,CqBoFjB,AdnGH,ANgBN,ADDgB,CqBoFlB,ApBnFV,CoBmFyB,AdnGG,APea,CqBoF/B,ApCrHR,AeiC0B,CqBmFP,CpCpH4B,AeiCL,CqBqFlC,ArBrFkB,COfK,CPec,CAAnB,EAAsB,CAAtB,COfV,APeL,CAAf,GqBqFuB,AdpGsB,CcoGrB,CAAD,CAAX,CAAe,CAAf,AdpGsC,CckG3B,EAGX,GdrGiC,CAAY,MAAvD,CcqGqB,CAAC,CAAD,CAAX,CAAe,CAAf,CAHW,CAAb;AEjCN,AvBjDL,EqCTE,AOmBD,ArDvBA,AOPC,A4DOD,AnDFC,A9BbA,AQLD,CoDoBA,AvCfA,ASUA,C4C2DE,AjD1DA,ARFA,AkBPC,APUD,AJiBA,CAAC,CuBIC,E2BoCE,A/EvEA,A6B+BA,AXZA,C6DoDC,A9CzDA,ApBjBA,AsCkFO,CFsCJ,CnBxGD,AsBsBD,CoBKR,ApBLS,AlChBC,ClBnBC,AwEwCX,AtDrBW,C+BkGK,CEtCZ,CtBhDU,AsBiDd,CC7CI,AvBJW,AXZA,C+BkGK,ApBtFJ,AXZV,CWYW,AhBlCA,CuCsCA,AvCtCC,AKsBA,CYNC,AmBwGI,AEtCnB,CqBvCJ,AvC1BE,CuC0BF,AvC1BqB,AkBmErB,ErBpEuB,AmBwGI,ApBtFZ,CoBsFa,ApBtFJ,AhBlCP,EAAS,CoCwHH,AEtCnB,C4BRwB,A9B+ChB,ApBvFgB,CkDwCC,A5BW7B,CnDlFM,CAAyB,C8Ba7B,ADkB8B,CAAjB,E7B/BT,A6B+B6B,CuBIlB,AvBJF,AhBlCqB,CbGC,AwEwCrC,ApBL2B,AvBJb,AhBlCuB,CAAD,CoCyHb,AhBxGF,AJiBkB,AhBlCtB,AsCkFb,CqBvCJ,AvB8EwB,AhBxGO,CgBwGR,ApBvFT,AhBlC2B,AsCsFzC,CChDI,AHmFQ,ApBvFV,CoBuFyB,C8B/CC,A9B+ChB,CADW,C8B9CuB,A9CzD5C,CgByGU,GuB/EK,C3D3CkC,CkE0EvB,A/EvEtB,AaH8C,CAAD,CkE0EG,AlE1ErC,CAAjB,C2D2CA,CO+B4B,A5BQxB,CqBvCmB,AvB+EA,C8BhDoC,A9BgDnC,AEnCxB,C4Bb4B,A9BgDL,C8BhDrB,A9BgDU,CAAe,C8BhDoC,A9BgDnD,CAFW,EAGX,KEzCR,EAMJ,IFmCuB,CAAC,CAAD,CAAX,CAAe,CAAf,CAHW,CAAb,KEtCN,EAOJ,YAPI,EAQJ,aARI,EASJ,OATI,EAUJ,MAVI,EAWJ,eAXI,EAYJ,eAZI,EAYW;AtC7FhB,AekCD,EElBG,AmCSD,AzCZA,AgBNC,AdOD,ASKA,A9BbA,A4BWC,AkB8ED,CrBtFA,AGMA,CsBGE,AiByBA,AUTA,AlEnBA,A6CgFA,EMrBE,AYAA,A/EvEC,AmD4FC,GnChFA,CAAC,AEOC,C6DoDC,AxBxDA,AiByBA,AUTA,CHwCC,A/D3DR,CEOS,AiCyEE,CjCzED,A2CyEA,CN7EV,A/BLF,ANSW,C6DoDP,AP/BF,AhD9BF,A0DqBc,AhEZN,AiCyEQ,C4BrBD,A7DpDA,CiDoDC,AjDpDR,CiDoDS,ChBqBD,C4BrBG,CAAC,A7DpDA,CAAZ,CgEYC,ArB6DP,CMrBE,A3C7DJ,A0DqBuB,C1DrBvB,AqCkFwB,CkBrBT,CZAW,AYAA,AGxCjB,CAAP,KfwCE,CNqBF,EAAiC,GkBrBpB,ClBqBb,CkBrBsC,CAAC,AlBqBA,GkBrBG,A5BqB5B,C4BrBD,CAAX,A5BsBF,G3BnFF,C2BmFM,CAAC,C3BnFP,CqCkFE,EAAmD,CVCnD,CAAW,K3BnFa,K2BmFH,GAAG,KAAxB,CADc,EAEd,IAAI,CAAC,C3BpFP,EAAgD,E2BoF9C,CAAW,UAAU,GAAG,MAAxB,CAFc,CAAhB;AkBXI,AxDlFN,EiBgBE,AyBCC,AiByBA,AQ7CD,AdoBA,A3B4BA,AoDtCA,AxFHA,A8BaA,CsBnBA,AiB0CA,COiCG,AvD7DD,A4ByBC,AqCvBD,AGDA,AVoBA,AlElBA,AaiBA,CkDuCA,CZEE,AexCA,ArB6DA,EhC9DE,AXXC,CmD6DO,AWrFd,AxDeO,AiEED,AGDA,ADNN,AzEYM,C8DtBN,A/B6HU,AwC5GH,AGDA,ADNP,A9BuFQ,CMrBC,AYAA,AGxCA,C1DrBP,AeiCF,ApCzCA,CqBQW,AeiCX,ApCzCA,C8CsHc,CkBjDD,AjDpDA,CgDJb,ArCeE,CqCfF,AgBgBE,CjCyFgB,ApB1FF,CmDnChB,AWUA,CXVA,ASiBE,AEPF,A9BuFkB,CMrBd,AlBiDiB,CV7ErB,ApCzCA,CoCyCA,AkD/BoB,AtFVpB,E6EPA,A/B6Hc,AY5BS,CK7EvB,CAAA,CcpBA,A/B6H4B,EwC5GD,CAAC,EpBoExB,ApBwC6B,A9CtHjC,CkE+EA,A7CvEW,AoECT,A/BiFE,CrClFoB,CmELxB,AxFHA,A0D0FkC,C+BjFA,ErDgClC,AoDtCA,CXVA,CSiBoB,ClD+BpB,AqDhCE,EHCuC,EtFV9B,GkE8EP,AsB3Ea,C1CmHW,A9CtH5B,CkEgFA,AoBtEgD,CAAC,AtFVhC,C8CsHoC,CV7ErD,AU6EU,A0CnHV,EzBUA,AjByGwD,A0CnHlC,CtB2ElB,EAGJ,AHpEA,C/DbA,CqBQE,CiEEkB,AtFVK,CqBQ2B,C6CsEhD,CoBpE0D,CpBwE9D,AoBxEE,GvBG4B,GGiE1B,EAKJ,WHtEA,A1CLE,E0CK4C,GGiE1C,EAMJ,yBANI,EAOJ,gBAPI,EAQJ,eARI,EAQW;EAEf,AdzEA,AiByBA,AhD/BC,AgBPD,AW4FA,C3BvFA,C2C+DG,Aa5ED,AdoBA,A3B4BA,AoDtCA,AT0BA,A/E7BA,CgE8DA,CYOE,A/ExEA,A6B+BA,AsBiEA,CkBNC,A7BtFA,AX2BA,AsBiEA,C6BpGG,AWUA,AxFHA,A0D0FF,EkBrBE,AlDzCA,AXXA,CiDoDC,AEkBA,AH1EA,A3B4BA,ACxCA,A0C4BA,A/E7BE,CkEuFD,A7BtFA,ASqHE,A0CnHA,A9BuFA,C7D7FD,AkBoBA,CAAC,C6DoDC,AVkBA,AW9FE,AdoBb,A1BZW,AtBgBF,C6DoDG,AVkBT,A9B9CS,ACxCd,A0C4Bc,AhEZN,CgEYO,AhEZA,CmDsEC,AW9FE,AxCQF,AX2BA,AXXR,CsBhBS,AX2BA,CwC2DC,ApB+BE,ApB1FF,CoB0FG,ApB1FF,CkDyCX,AC5Ec,AxCQF,AW4FpB,CkBNqB,Aa1DnB,AhEZmB,ClBpBC,AmDgGA,AUHE,C7D7FD,E+EwEE,A9BiDb,ApB1FK,AXXQ,A2CyEE,CkBrBvB,AVkBsB,A7BtF1B,AX2B0B,CwC2DC,ArE1FL,AgFJJ,CD4EU,A/ExExB,AgFHA,AzC+CK,ACxCmB,ASqHE,A/BrGF,CsBhBC,CX2BC,CXXC,CqBwBC,ArBxBA,CmDsEhC,AW7FS,AxCOwB,AtBgBF,CWWG,AXXN,CmDsEO,AxC3DlB,AXXkB,CmDsEC,AnDtER,CWWS,AXX7B,CWWS,AgC8DuB,CQHD,ApB+B3B,ApB1FI,EwC2DhB,AxC3DyC,AgC+D/B,CrB1FV,C6BsF2C,AxC3D3B,CW3B4B,AX2BxC,CwC2DyC,CAA7C,EAAgD,AW7F5C,CAAqB,KAArB,AzC+C4B,CAAgB,CyChD9B,EAEd,EzC8CiD,GyC9C5C,GzC8CuB,CAA9B,EyChDgB,AnBkGoB,CAC1B,CmBhGR,KAAK,KAAL,CAAW,CnB+FuB,EAE1B,EmBjGR,EAHc,CAAhB,QnBkGoC,EAG1B,IAH0B,EAI1B,kBAJ0B,CADE,GAO9B,aAPJ;EK5EL,A1CJD,AegCC,AkDhCA,AGDA,AVqBA,ChBlBD,A3B4BA,A2C9BA,Cb8EE,ArE1FC,AgFAD,AxCIA,AYgCA,AuC/Ba,AJgDb,ApFnDY,A0B6BX,AsBiED,CtBnEA,CsC2CE,EYAE,AVkBE,AjBtDA,AlChBD,AiC4EL,AUII,C0B/CC,C/CjDC,ASqHG,C+BzHF,AxCIA,AX2BA,CwC2DG,AW1FF,AxCIF,AqBgGI,CrBhGV,E6BsFa,C7BtFA,EqBgGG,CVJhB,CkBNkB,CAAC,AlBMZ,AUIY,CQVD,A7BtFC,C6BsFnB,CkBrCA,GPrDA,AxCIwB,A+CiDD,CPrDC,AxCIC,AW4FzB,CX5FwB,CAAZ,AYgCgB,AD4DZ,CoC3ChB,A1B+C6B,CmBpG7B,CxCI+B,AYiC7B,GS+DgC,MrBhGlC,GqBgGmB,GAA2B,GT/D1B,KAAK,ES+DN,GAAwC,CVJ3D,GC3DE,AS+DE,GT/DiC,kBAAnC,GAAwD,uBAD1D;APFE,EqBhBJ,A/CDA,AoB6BA,AkDhCA,AGDA,AVqBA,A/B+DC,EkBNC,AW1FA,A1DWA,AkBPA,AYkCA,AuClC0D,AJkD1D,ApFrDmC,EgEuEjC,AYAC,AlDzCD,AXXC,CWWA,CwC2DG,ApB+BC,C3B9GH,AqEP2D,A9C6BnD,CvBtBP,AkBPC,AmDA0D,A9D2B1D,CmD/BC,A7DgBT,AqBZS,CrBYT,AqBZU,ArCH0B,CAAW,A0B8B3C,EW3BS,CAAL,AmDAN,CnDAA,CwCJA,C7ECA,CqCIG,CrBWL,CkD0EsB,AlD1EtB,GkD0EyB,C/C/EvB,AkBNS,C6BqFT,CxBzDE,CvBtBsB,AuBsBQ,CL5BnB,CAAC,ElBMd,CHKF,CqBXW,CAAU,CrBWrB,GqBXyB,AK4BrB,CL5BsB,CK4BqB,EL5B1B,CAAS,IrBW9B,A0BiBI,CL5B+B,CAAC,AK4BoB,CL5BnB,GAAG,CAAL,CAAL,GAAe,MAAxB,CAAV,CAAP,CK4BA,EL5BqD,AK4BiB,IL5Bb,CAAC,EAA1D,GAA+D,EADjE;AOmBJ,EiCtBG,AxCKA,AJQD,ASoBA,CmCzCA,CXkGE,ArE3FA,AmBiBA,AGJA,AqERA,A9D2BC,AXXA,EiDoDC,AlBiDG,AJxFD,CI8CA,CA0CE,A0CrHA,A9BgGF,Cd9EC,E/CvBE,AmBiBA,AwEZE,AvDSX,CakEM,AblEN,AyBuFU,CZqBG,AYrBF,C8BhGG,ExEYA,C8B+DR,CADF,A0C1EU,C9BgGJ,CQVQ,ArE3FhB,CoCcF,CAAA,CiC6EqB,AxBzDE,AgBmEF,CAAC,Ad9ExB,CAAyB,C5BNrB,A0BiBwB,I8C7BZ,A9C6BY,E8C7BL,IAAP,AvDSd,AyBuFM,Ad9ER,C4ClBI,C9BgGkC,Ad9EA,CXTpC,GiC6EwC,AxBzDd,CwB0DtB,CxB1D6B,AEXnC,EAA4C,KXT1C,ASoBwC,GAAG,GAAjB,CwByDc,CxBzDQ,CwB2D5C,ExB3DsB,IwByDc,AxBzDe,EwB4DnD,CxB5DJ,GwByDwC,EAIpC,MAJoC,EAKpC,gBALoC,EAMpC,yBANoC,EAOpC,gBAPoC,EAQpC,cARoC,CAAtC;AxE1DE,AmD1BA,EhDNH,AgFED,A7DeC,AmEAD,ArDFA,AYmBA,A3BbC,AiC4ED,AJ1EA,C/CpEA,AmB4DA,AD7BmC,CmDkHjC,ApBuBC,A0CtHD,AvDSA,AjCbA,AaaA,AESF,EiDkDI,AYDA,A9CzDJ,AYmBM,AM+DF,AJ1EA,CdRJ,AYmBO,CyCjBP,AKZQ,AvDSF,AjCbA,CmFgBN,AtEHM,AnBkBQ,AmD1BA,ChCQP,A6BoBG,AgBmEF,Ad9EA,CgCiDC,A5EvEP,C4EuEQ,C3C1DC,AjCbA,AgDgGA,AJ1EA,CFWG,AM+DF,AJ1EZ,ClDSI,AgDEW,CZnBf,ApCiBqB,CkFwCN,AYnEE,A3ESf,AiBCF,A4BsFe,CkB7BC,AOvDhB,AzCiBU,CwBkEO,AiBnFjB,AzFeI,AgDEe,CwBkED,AsB/FE,A3ESH,AmCmFb,CtDjEsB,AgEqEX,CzBvFb,E2C0DQ,AV4BR,AsB/FsB,AvDSF,AHCtB,ApCiBI,CwEoEmB,AsB/FE,AxC4FF,CtDjEM,AgDEH,AG5BtB,AG2FJ,C4BzByB,A/D1DvB,AiBCF,AeTgC,C+BkEvB,A5ByBiB,C4BzBtB,CAAwB,EOvD5B,AtCXI,Aa+FW,C8BhGK,CZmEhB,A/BlEmC,Aa+FlB,CkB7BY,AOvDjC,AKZE,IZmEmC,AV4BnC,ApCrFF,C8CyDsC,A9CzD1B,CAAZ,EYmBU,CAAV,AG5BI,Aa+FW,Eb/FoC,Aa+FlB,CyBpFjC,KPuDqC,CAAjC,M/BlEA,Aa+FW,Eb/FiD,Aa+FhB,YAAjC,CAAP;E7DnGR,AmBiBA,AqBbA,ALWA,AFAA,ApCgBA,AgDEA,AG5BA,ADiBA,EgCiDG,AV4BD,AiBnFA,AKZA,A3EUA,AagBA,AsBkEA,EgBxBE,A/B3DA,AjCbA,AN+BE,AgDEA,AG5BF,ADiBE,ClDSC,C8F3BD,A9D0BA,AgCsEC,CrBhGA,AX0BA,AkBRE,CsB6ED,AxEpEE,CyFfD,AlDHA,AemFA,CwC5FP,A5CkBU,CsB6ED,AlEnGA,AN+BE,AgCDF,CMfX,AhCfY,AN+BE,AgCDZ,CW1BF,ALWA,CmDCc,AzDcA,AmBzBA,CqB8FC,AlEnGJ,CkEmGK,AlEnGZ,A0CiCc,AM+DF,CAAC,CfnFb,CvCkBM,AgDEW,AG5BF,CqB8FC,AxEpEE,CwEoED,AtB7EE,CZPvB,AYOwB,CZPxB,AtCgBU,AsDiER,CmChFA,AzFeF,GwEoEgB,CrB9FZ,ADiBJ,EsB6E8B,CAAf,CAAb,ArB9F8B,KbUhC,AUkBuC,AG5BF,GbUrC,CUkB2C,CAA3C,AG5B0C,UbU1C,AaVA,EAAsD;ARAvD,E6B+FE,AdpFD,A+BCC,AjFdD,AR6BA,AgDEA,AM+DC,AJ1ED,CuCRA,CrC4GE,Ad3GA,AhCfC,A6CKD,C7CPA,CgE0EE,A/B3DA,AvCkBE,AgCDF,AgBGE,AEXF,ClBQC,CMfC,AYOA,CCjBC,CnByBC,COjBC,AjCbA,AN+BE,AgCDF,AkBRA,C1CpBT,AwB4BU,CMfC,A9BbX,A2CGW,CnD0BG,AmD1BF,C7CLC,AN+BE,AgDEA,ChBHD,CAAN,AmBzBO,CnD0BG,AgDEA,AG5BX,CnD0BY,CuClBf,AjCbc,AN+BlB,AmD1BkB,CCqHC,A9C1HA,A0B8BA,CMfjB,A9BbF,AwB4BI,AgBGkB,AG5BF,ADiBA,CXTC,A/BXrB,AwC+BuB,AEXF,CEoGC,Ad3GA,CoBAtB,APVuB,COUvB,AN2GE,A5CxHF,AwC+BkB,AEXM,CXTpB,ASoBuB,C1CjCd,CEEb,AFF2B,A0CiCT,AEXS,CCjBC,ADiBR,CFWW,AG5BF,ADiBpB,CAAqB,C5CtBjB,A4CsBJ,C5CtBA,A4CsBT,CQPA,CAAA,ApDfkC,C6CKhC,E3CHE,A2CGiC,CAAC,E3CHtC,CkDaA,AVkBkB,AG5BuB,C3CHlC,AwC+BP,CG5BE,COUF,CPV6C,EAAE,CAA7C,EAAgD,IOU1C,KAAR,EAAa;A3BgBT,EqCTJ,ACNA,AjB2GC,AqCzGD,AGNA,AGDA,AVqBA,ArCGA,A3BdA,A6BEA,EgCgDE,AxBvDA,AHsBA,AuClCA,AJkDA,AnDxCC,A/BXD,E8DsEE,AhCzDA,AhCfA,A0B8BA,AgBIA,A3BdE,A8BfF,ADiBA,ClBQC,AXVE,CqCLC,AoCZF,AtFDA,AwDiGA,Ad7EA,CKeA,AmCgBC,A1CnBA,AjBJO,CqCTd,AbgBO,A8BNP,ArDDQ,AXVE,C+CCV,A2BXA,AVqBA,A/ChBS,AhCfA,A0B8BA,AkBRA,C0CXT,AGDA,A/DoBU,AgBIA,C4CvBV,ApFTE,CakBY,CfpBD,A0DmGA,CkB7BC,AbvDd,A/Dfc,A0B8BA,AgBIA,AG7BA,CkBUd,AyBZe,AJkDb,A1DvBM,AgBIO,AG7BA,COUG,APVJ,ApByBV,CmDwCa,A5EtEA,AeoBP,A8BfN,ApByBoB,CmDwCN,AdjDlB,AiBUA,AKsBkB,ApDtCd,AhCfK,AeoBW,CqCLC,AUMrB,A2BXA,ADPmB,AT4BnB,AKsBmB,A1DvBA,AXVT,CuETV,AGDA,AL2CkB,ApFrDE,A0B8BhB,AgBIM,A3BdV,A8BfoB,ADiBA,CgCgDC,AU3DrB,A5CuBqB,AEZA,CgCgDnB,A3BjCA,AmCgBoB,ApFrDA,A0CkCA,C0CmBJ,A3DvBd,C2BfsB,AWA1B,AqBsCE,AxC/BsB,CmBPxB,AdsBwB,AjDrCC,A0CkCA,AG7BA,ApByBO,CoBzBN,ApByBtB,CsDCJ,AlC1ByB,ADiBE,CCjBvB,ADiBgB,AnBQe,CwBOP,AjDrCC,A0CkCnB,AEZD,AnBQL,CsDCJ,A/E/B8B,A0CkC9B,AEZ8B,CAArB,AnBQ2B,CmBRpC,EQPE,AWAF,A0BLA,CHCA,CtFXI,C+DeJ,A0BLA,ADPmB,CFQnB,AER6B,AxFHS,C8DqBtC,A9DrBuC,A0DmGA,CAC/B,EI/ER,AiBUA,A/E/B0C,EAAtC,CwFGF,CxFH4C,CwFGR,CxFHU,C+DehD,A0BLA,AzFVI,CsFWJ,A5BwFuC,CT9Df,AjDrC2B,C8DqB9B,AbiBjB,AS+DI,UIhFR,AbgBwB,EahBO,AbkB3B,AS4DmC,EAG/B,QTjEgB,EAGpB,GS2DmC,CAAjC,eT9DkB,EAIpB,eAJoB,EAKpB,gBAAgB,GAAG,sBALC,EAMpB,gBANoB,CAAtB;EiB8DF,AvCrFA,A0C2BA,AvBmFA,Ab9GC,AvCiBD,AgDIA,AM8DA,AvBlEA,CQtBA,C2C8DE,AdjDA,ACNA,A5CJA,AmEAA,AGDA,AVqBA,AKuBA,AvCjDC,EmBmEC,AwBrEA,AxDYA,AtCeA,AgCAA,AgBIA,AgBqEC,ChCzEA,AgCsDD,C+B1EE,AzFVA,CkEkGC,A/CvFD,AsEDC,A/CwBA,AM8DA,AvBlEA,CmDwCC,AzD3DD,AOmBC,AsBkEA,Cc3EC,ACNA,AuBJA,AERA,AT4BA,A/ChBA,AtCeT,AgCAS,C2CUT,A3CVU,AgBIA,AjBJA,CmDwCC,AP9BX,ArExCW,AN8BA,AgEyEA,AjCzEA,EuBkEX,C4B1BE,AdjDY,ACNA,AuBJA,APoBA,ArDDA,AgBIA,AM8DA,CtBlEN,AgBIO,EvBvBb,AMmBQ,COfN,CLFJ,ADiBmB,ADAA,CEjBnB,A0C2BA,ANzBE,A5CJiB,A4DoBjB,ArDDE,AgBIM,AjBJA,C4CUV,ArCzBqB,AUmBA,CAAC,AjBJA,CyCoEtB,AoBvFS,A5CuBc,AjBJb,CqCTD,A3CVP,AmEAsB,AtCqFxB,Cc3EyB,A0BlBrB,AxDYA,APeqB,C+D3BC,A9C+BA,AM8DA,AvBlEhB,EAAkB,CEjB5B,A6DVI,A9C+ByB,AjBJnB,CEjBV,A3BbM,CAAyB,AyB8BA,CiBIC,AjBJtB,C+D3BuB,C/D2BC,CqCTC,AOmBnC,ArExCmC,AyB8BzB,CqCT0B,A9DrBA,A0CkCf,AM8DrB,AvBlEA,CqCTmC,A0BlB/B,AxFH+B,C8DqB1B,AOmBT,AiB7BS,AtFXH,E8DqBkC,AwBVtC,AtFXsC,A0CkCA,C+CxBtC,C9DGF,AeqBU,C+CxByB,A/CwBnC,EfrBA,G0C2Be,ArExCT,E8DqB4C,CAAC,CAAD,CAAzC,CAAP,CnCRW,I0C2Bb,E1C3BA,A0C2B4B,E1C3BP,Q0C2BrB,C1C3BA,C0C2BsC,C1C3BN,OAAhC,EAAyC,mBAAzC,EAA4D;AuCsF7D,AzCpEA,EmDwCE,AdjDA,ACNA,A3B4BD,AbjCA,A+DCC,APoBA,ArCGD,A3BfA,A6BEA,CkBFA,ACNA,AuBJA,APoBA,CpDhBE,AyBCA,AiB0BA,AlD5BA,A8BgCA,AjB7BC,A9BdD,AR6BA,EsE0CE,AyB9DA,ADPA,AxFHC,A0CkCD,ChDJC,AqBXA,A6BEA,CjBRG,AyBCF,AH8BA,A/C3CA,AR6BA,AgEyEA,CNzFC,AiB0BA,A3BNA,C8C/BC,CzEgBC,A6BEA,CRsBT,AMTU,A3BfA,A6BEA,CRsBV,AaCU,AwClCC,ADPA,AtFFA,AwCiCA,COUA,AvDdT,C6BpBF,A7BoBa,AqBXA,A2CoFA,AdlFA,CrBXb,A7BoBE,AgDIY,A3BfA,A6BEd,EyBmBE,A3EVc,AkDTA,CQPd,AiB0Be,AoB9BN,A/FoBT,AgDIe,A3BfA,A6BEA,C6CXN,AvFTL,AakBN,CqCLmB,CzBDG,AS8BtB,AMToB,A3BfA,A6BEA,CRsBpB,ArBxBqB,CblBC,AwDsGhB,C/B1FmB,AJHzB,AqBWA,CrBXA,AmBwBU,C3Bfe,A6BEA,CKuBnB,AlCzBN,A6BE0B,CyBmBxB,ApBIwB,AwClCf,AvFTgB,AwCiCA,CfrBG,A8DHb,A1ESW,A6BE5B,CyBmB6B,AtDrBA,C2BeC,AEbA,C7BF9B,EyEhBW,A9C+BsB,A3BfA,CyEhBR,AtFFH,CkC0CtB,AlC1CmC,AwCiCnC,CfrByB,ES8BzB,AbjCA,CIGyC,AsB+BnC,CoBJJ,C9C9BF,C8C8B0C,ApBID,AwClC9B,CpB8BT,AoB9B6B,IAApB,ADPP,CvCyCE,AwClCyB,CvFTT,CkC0CtB,AlC1CkD,CyBYzB,AJHV,CkEAJ,C9DGT,AsB+BkD,AwClChD,AvFTkB,C+C2CpB,A/C3CA,EqBSF,A0BkCuD,A/C3CC,EqBSlC,UAAtB,EAAkC,YAAlC,EAA8C;A2C0FhD,AzCpEA,E5BjCE,AiEwBA,ACNA,AuBJA,APoBA,A/CjBC,ACHH,AHCE,ApCiBC,AgDID,AM8DA,ChBtFA,CLGE,AS8BA,AbjCA,AkEAC,ADPA,AxFHA,AaaD,AEMA,A8BfA,ADiBA,C4CrBA,AxFJO,A0CsCN,A3BfA,CiDqDC,AZ1DA,AH8BA,A/C3CA,A4BYJ,AJgBI,AXVA,A2CoFC,C5B1FL,AfMG,CYNG,A9BfN,A6CoCM,A3BfJ,A6BEM,C/CvBR,AoCcF,ApBCQ,AgCTC,ChCSA,AagBC,AkBRE,CRsBD,AbjCA,AiEPA,AtFFA,AFDA,AemBA,AiC6EA,CnCnFP,A6BqBQ,AG9BA,COUC,AVoBA,AEbE,C1CpBD,AakBA,CQTV,AiEPW,A3EUD,AEMC,CqBwBC,AN9Bd,AfMY,CYNV,AyBCE,AtBDJ,AYqBM,A3BfG,ClBrBT,A2FKgB,AvDSlB,APiBM,AgBKY,A3BfA,CYNC,A9BfjB,AKGiB,AakBR,CWUS,CgBKC,AM8DnB,CwC7FoB,A3EUD,AgCTjB,AG4FkB,CnCnFA,AiBApB,AfMqB,C2BeC,AEbE,C/BRtB,A+BQuB,CjBRvB,AzBZU,A4BYZ,AfMwB,A6BEA,C4ClBC,AtFFA,AakBA,AiC6EzB,AJ3Ea,CRsBX,ArBxBsB,A6BEI,C7BFP,AiC6EI,AJ3EZ,C1CpBD,AakBgB,A6BE1B,C1CpBE,AakBiB,CAAnB,C2BeI,C7CpCN,GAAA,A6CoCmC,CZrBnC,K0DVS,EAAkC,C9C+B3C,G7CpCA;AoC9HF,CAAA,C2CsME,AxC1BC,AbjCA,AU3IqB,AYqIrB,CTqCD,AbjCA,C6BMG,AvDhBD,AwEyCA,AnEtCC,AWaD,AiBDA,AkBmFA,AUOC,AdlFD,EoBmDE,Af5BA,AuCzCA,AxFHA,EqEuCE,A3CVA,AkBRE,CgCgDD,A/EvEA,AwEyCA,A3CVA,CkBRG,CoBmDD,Af5BD,AjD5CC,A8BaA,AkBmFA,CCpDA,AvBfC,C8D1BC,A9D0BA,AkBRE,CgCgDb,AP9BY,A3CVA,CsC4CN,A/B1MR,AeiOe,CfjOf,AH8IgB,AkBmFA,CCpDV,CuCzCY,A9D0BA,C7B/Bd,AiCeO,AJgBC,CuBeO,Ce6BL,AhBuBH,ClBnFW,AkBmFA,CnDlGC,A6B+BA,CsC6Cf,AtC7CA,AkBRkB,CdRf,AcQgB,CAAD,C/CvBH,AmDkGI,AJ3EZ,CoBqDH,AlC7DgB,AcQE,CoBqDjB,AKnCT,AzBlBW,C5CrBT,AgDgGwB,AJ3E1B,CyBkB2B,ArEvCA,CgE0EvB,CACG,AlC9DsB,CkC8DrB,AwBxEC,CAAsB,AxFH7B,EHFiB,AGEc,CgE2ErB,Af/BG,AuCzCN,CxBwEI,AnE7EY,AoD8CA,AuCzCvB,CxC6FK,ElBnFP,CkC8DQ,CAAU,AnE7EY,AoD8C5B,ADoDsC,ChDhGtC,SHFiB,AmDkGnB,CnDlGA,ImE6EQ,IAA6B,IAAI,CAAC,IAAL,CAAU,kBAAV,CAA9B,IACC,QADF,GAEE,CAHJ,EAIE,CAJF,CAFF;AYFL,A3CzDD,EpCdG,AuC8CD,AbjCA,ASGF,AFDG,ApCgBD,AgDKA,AM8DC,AUzBD,C7D3EA,AiCeA,CkCoEG,ArCnED,A8DHA,AzFTC,AekBD,A6BGA,EyBkBE,AmBpCA,A9D0BC,AgBKD,EfrBA,A8DJE,A7CYA,CZPR,AtCeS,AgDKA,A3BhBA,CyEfC,CnBoCC,CzBjBL,C6CbO,ADLL,A9C8BK,A3BhBA,CYLD,AjCgBV,AqBXY,C2BgBZ,CEZI,CFYW,A3BhBA,CYJX,AZIY,GiBJlB,AjBIqB,C0ETb,ADLS,AzEcb,C0ETmB,C9DKX,AZIY,CYJX,AZIY,CsDqBnB,AmBnCe,GnBmCQ,AtDrBA,CAAzB,CsDqBE,AzBjBA,C7BJ0B,CAAC,A6BIjB,CjBRV,CZIF,A6BIc,E6CbV,A1ES6B,C6BIhB,CjBRM,A8DLvB,C7CaE,C6CbmC,GDLpB,CAAU,A5CmBxB,IAAI,C4CnBH,G7DSF,A6DRM,A5CkBG,CAAC,GjBRV,AiBQK,CAAS,IAAA,CjBRR,CAAC,KAAP,CAAa,K6DVP,CAAc,C7DUpB,AiBQc,EAAU,EAAV,CjBRW,AiBQpB,CAAJ,CjBVD,EiBU+B,EjBP/B,C6DZE,C5CmBiC,CAAC,C4CjB9B,E5CiByB,CjBPxB,AiBOiC,IAAA,CjBP5B,CAHZ,A6DPe,IAAI,C7DWlB,CAAC,OiBMsC,EAAU,EAAV,CAAT,CAD/B,CADF,E4CfqB,CAAU,E7DW5B,IACE,A6DZG,GACA,G7DWG,CAAC,KAAP,CAAa,Y6DXV,CAAc,E7DWjB,IACC,IAAA,C6DbE,GAEA,S7DWF,A6DhBJ,E7DiBM,IAAA,cAAA,EAAQ,MAAM,CAAC,KAAP,CAAa,eAArB,CADF,EAEE,IAAA,cAAA,EAAQ,mBAAR,CAFF,CANJ,CADF,EAWE;AKrIN,AtC4IC,AgBhCK,AgD0GL,C1BtND,CgC8LG,AnEhFD,AgFAA,AMgBA,AnD9HyB,AhC+GxB,A8BcD,AeXA,C7CdA,CoDyBE,AiByBC,ApBKA,AuCpCA,AJ6CD,AlFrDA,AwB6BC,AgBKD,AEXA,EjBAE,A8DdA,A1ESA,A6BKA,CFWC,CUpBG,A+BCR,CNhBA,AMgBA,ACsCO,A1ExDO,AKqBP,A8BfA,ADoBA,CjBAG,AkDxBV,AnCmCQ,A3BhBA,CblBC,AwCkCP,A3BhBK,A6BKL,C7BLE,CqCJS,AqCLF,A1ESA,CAAP,A8BfJ,ElBoBgB,AyBTA,AlDdd,CuFSE,CNMJ,CxDQmB,AkDxBnB,AMgBA,ACsCE,ArEnCe,C8DnBjB,A7C9GF,CoB6HuB,ApB7HvB,CoDoKsB,ArEnCA,CqEmCC,A1ExDjB,AKqBiB,CqEmCD,A1ExDS,AKqBT,CYKK,AZLR,CYKS,AyD8BF,ArEnCA,CqEmCJ,ArEnCH,EqCJD,AgCuCW,CAAP,ChCvClB,A1CjBE,AKqByB,CqEmCC,ArEnCA,CoEH9B,ACsCoB,A1ExDkB,AKqBP,C8DnB/B,AOsDE,ArEnC4B,CAA1B,CoEHJ,CNhBA,GnEFI,EAAyC,CiB0BzC,IkDxBW,CAAf,AMgBA,ENhBkB,CAAlB,EAAqB,YAArB,EAAmC,kBAAnC,EAAqD;A7CgBvD,AtCgBA,AmD3BC,E7BYC,AdfC,AQHD,AsCmGA,C9CtGA,CkDoBE,AyBfA,A1DYA,AgEIA,AMNC,A/CyBD,A3BhBC,A6BKD,C6ChBA,C7CgBE,CFWC,CUpBG,AyBfF,C1DYA,ATbJ,AsCkGK,AJzEA,CzBZA,A6BqFC,ChCjFR,AmEAS,AMNA,A/CyBA,AEXP,C5BRF,A0BmBE,GyCnBO,CzEjBA,CAAC,C0CgBQ,AjCHhB,ATbO,CAAP,E0CgBmB,ApCCrB,AGJkB,CHIlB,CNjBgB,E0CgBK,CyBfG,A1DYtB,CAjDiB,CAmDjB,C0DdyB,AMgBlB,CzEjBc,CAAC,CyEiBtB,AzEjBqB,CmECI,AnEDzB,CsCkGF,ChCjFA,ENhBE,AsCiGiC,ChCjFnC,GoCDqB,EACjB,C1ChBK,CAAC,CAAD,AsCiGT,CtCjGE,CMgBY,GNhBE,E0CgBF,CAAC,I1ChBQ,CMgBvB,ANhBwB,CAAD,CMgBE,ANjBvB,ImECyB,AnECzB,EmEDkD,KAAK,AnEChD,CAAC,CAAD,CAAP,IAAc,C0CcK,CyBf+B,CzBiBhD,CyBjBuB,EAA2C,CAA3C,AnECJ,C0CgBd,A1ChBe,C0CgBd,AyBjB+D,AnEClD,CmEDI,AnEDzB,CmECA,EAA2E,CzBiBzE,A1CfF,E0CamB,CAAnB,I1CbO,CAAC,CAAD,CAAP,IAAc,OAAO,CAAC,CAAD,CAJvB;AAMD,AmCED,EmB0EE,AmB/DC,AJeD,A7E7BA,AFFF,A0CmCG,A3BhBA,AiC+ED,AJ1EC,CuCVD,C/BKE,AiBoBA,ArDvBA,AiC6BA,AuCrCA,AJ8CA,A1DzBA,EsCkDE,ArCxDA,AkDvBA,AYUA,AzCwFE,EI/EE,AoCXF,AJ8CA,CffC,ApBMD,AjD7CR,A0B6BS,CCNC,AsBsBD,A8BdP,CUrBS,AVqBT,CfgDA,AwBvEU,A9DqBA,CmD7BC,AnD6BA,CsCkDC,AtClDF,C+DnBK,AL4CF,CzD/BC,A6DfA,AJ8CA,A1DzBA,CAAJ,CuBgBR,AwCnCE,CrCSe,ApDnBrB,A0B6BmB,CqDEjB,ArDFU,CuBgBQ,A8BdlB,AKuBM,ChCnCgB,AqCTA,A/DmBF,AsBqEE,CtBrED,C2CUnB,CAAqB,AmB/BrB,AxC0FuB,CoC5CD,A1DzBA,C0BVG,AqCTA,ADFF,C7DeC,AyBJE,A2BY5B,CrDFU,AsBqEe,CtBrEvB,C2CUA,AQvCE,AE+BJ,GVQgC,CpBMA,AmCS9B,CnCT+B,CG1BX,AgCmCa,CffH,CjBpB9B,I2BYF,EpDRI,EAAyC,CqB2EpB,CyCxFrB,EAA+C,AzCwFnD,ECrDkB,CAAiC,WoBNnB,EAC5B,GpBKc,CAAhB,CoBLO,eADuB,EAE5B,CAF4B,EAG5B,WAH4B,EAI5B,KAAK,MAJuB,CAA9B;ArE3IJ,AUyGA,CVzGA,C+DoHE,AoBEA,AGNA,AtFhHuB,A0BkItB,AsBqED,CtBhGA,CsC6EE,AKnCA,AQ5CC,A7DgBD,AGHA,A4DkBA,AlEjBA,E2ENE,AJ8CA,EzD/BE,AXPE,AGHF,AsEHA,AVqBE,CVaD,AxD9BD,AaeC,AsBqEA,CnCpFA,AmCoFC,CwC1FC,AJ8CA,CE3CT,AGDU,AVqBE,C/DfC,AsELb,A5DkBW,CAAC,CCNC,ARVA,A4DkBE,ArDFF,C2CeX,AN7BF,A/CEI,AGJU,C4CEd,A0BLe,AzF/GjB,AgDuME,CrB3EgB,A3B5HlB,AgDuMkB,C+BnEG,E/DdV,AHHP,CMDA,AmEFF,A5DkBW,C4DlBX,A5DkBqB,CCNC,ARVA,AqELlB,ATuBW,AlEhBX,CcQmB,A6DfA,ATuBE,ChBhBzB,AqBuCI,CrBvCJ,A/CEI,CgCiFsB,CwC1FC,AJ8CA,CLvBG,ArDFnB,CbdA,AmCmFK,CnCnFJ,CmCmFmB,CsCvF/B,AtCuFgB,CrB3EA,ADMiB,CCNC,AoDQnB,AKuBmB,A1DzB3B,AsBqE2B,CsCvFlC,APoBE,AKuBiC,C1DzBC,C+DnB1B,AzCwFM,CrB3EA,A8DbsB,C9DahC,AqB2E+B,CoC5CV,CK5CjB,AL4C+B,AvEvCrC,EkDAJ,A0BL2C,CL4ChB,CE3Cf,AF2CiC,CrBvC7C,AlDA4B,E2EPL,CAAoB,IAApB,EFGvB,AEHiD,AJ8CM,AvEvCnD,CkDAe,CuBJK,AGDd,C5EK8B,C4ELlC,ADFiB,AJ8CsB,CI9CzC,CCEyD,AL4CA,CrBvC7D,AqBuC6C,ErBvClB,AqBuCmC,CvEvCf,CyEJ/C,AzEIgD,EyEJf,SzEI7B,EkDAJ,ClDA8D,CkDApB,GlDDxC;AbbJ,EqE4CG,A9ClCD,AmByBA,A3BjBA,A6BKA,CyBSA,CL+CE,AZ7DA,AWHA,A/CEE,AiC2BF,AqCjCA,AEHC,ATuBD,AlEfA,AaaA,AsBqEA,ErB3EG,ARVD,AuBsBA,EUjBE,AH0BA,AqCjCE,APoBF,AKuBA,ApC4CJ,CenFK,AgBgBA,ArCIA,A3BjBA,A6BKC,C6CbA,A1EQR,CILQ,CAAC,A4DkBC,AKuBE,CLvBV,ArCIS,AEZC,EmBRV,AxCLF,AmByBA,CnBzBA,AqBae,CoBwDA,AsBpEE,AGDF,A/CyBA,CsB6CX,ADjEY,A5CFZ,CiCKF,CH0BgB,AqCjCE,ClCOD,AjCLD,AsEHV,AL4Ca,CpC4CnB,AJ3EM,CKqBa,CmCUG,ApC4Cf,CzBxFT,A+DCyB,A1CYD,CrBbxB,EJGyB,A8B+BA,AmCUG,CjEzCF,A8B+BA,ELrBnB,EoBwDQ,CzCrEf,AqBakC,CoB0D9B,A7CpEA,C4CE8B,CAAC,AxCLnC,AqBaA,CoB0DO,EhBiBL,CgBjBQ,ChBiBiB,CenFO,Ad6Bb,Cc7BnB,Ad6BuC,CDsDX,CoC5CN,ApC4CO,CgBnBhB,AoBxBP,EpB2BJ,AzCxEJ,C+DCoB,CAA+B,AF4CvC,CAAC,ApC2CX,GgBnBa,AoBxBP,CAAS,CpB4Bb,AoB5BI,EAAY,EE5CA,CAAlB,CtBoEa,AoBxBS,CAAC,CpB6BrB,AfxCiB,AmCWG,CpBwBT,AoBxBP,CnCXN,AmCUsB,CpB+BpB,CANW,AoBvBP,EpB8BJ,EoB9BQ,CAAC,GAAL,CAAS,CpBuBF,CAAb,EoBvBmB,CAAC,CAAD,CAAJ,GAAU,CAAnB,EAAsB,CAAC,CAAvB,CAFgB,EAGhB,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,IAAI,CAAC,CAAD,CAAhB,CAHgB,EAIhB,IAAI,CAAC,GAAL,CAAS,IAAI,CAAC,CAAD,CAAJ,GAAU,CAAnB,EAAsB,CAAC,CAAvB,CAJgB,CAAlB;AnD1CR,AlBOC,A6BKA,EkBFC,A0BbC,AxC0FA,CwC9GD,AxC4GA,CgBTE,ArChEC,AkDxBD,AdgBA,A/CCoB,AGHnB,AIHD,AwDqBA,ArDFA,AgBMA,EUjBE,CViBC,CmCpCC,AYWC,AVqBD,ChBhBC,A9BJA,APkBA,C0BXC,AUGR,ApBcQ,CUjBC,AUGT,AvCXS,AmByBP,ChBNQ,CmD9BC,AEgCT,ArDFS,CAAC,C0BXH,AWHP,CxCLY,EwCKE,CCwEC,AtC1DP,CoCRV,ApCQkB,CoCRlB,ApCQU,CsC0DU,AzC7ElB,AUCJ,CPkBuB,CqCdnB,ArCcoB,COlBF,APkBV,CsC0DU,CtC1DK,GmD9BnB,EnD8BI,CAAqB,CoCR/B,AetBgC,EnD8BtB,CoCRV,CpCQoC,CmD9BC,EzBmB5B,A1BWC,CAA8B,C0BXZ,IYqER,AFlEN,CpCQJ,CsC0DoB,AtC1D5B,CsC0DkB,AaxFY,EbwFC,AaxF/B,CbwFkB,AFlEpB,CVHS,AyBnB2C,CbwFhB,AFlEhB,CVHqB,OYqEG,CAAC,CAAD,CAAxB,AZrEX,CAAL,CYqE6C,CZrEK,OYqEG,CAAC,CAAD,CAArC,CAAlB;AjDnEJ,A6BKA,AnBMM,E4CaN,AhDhCE,AEDC,AiEDD,AvDEA,AewFA,CzB3FA,CuCaE,ACNA,Ad6BA,AqClCA,A5DmBA,AgBMA,EmCpCE,A7DiBE,AyEND,AxDCC,AewFA,CNhED,CUjBC,AH0BA,AqClCA,AFgDA,CffR,AN5BS,A9BJE,ARmBK,EqCTL,AetBA,A7DiBE,A0BmBF,C0CuBC,AnD/CE,ASwBV,C1BnBW,AUaF,CAAC,C0BXC,AUGJ,AzCVT,CAAA,AYAY,CjBIU,AsELpB,CFgDI,A3D5BF,C2BZE,AiByBR,AiBjCmB,A5DmBN,ADCa,CoD/BpB,AO2Dc,A1D7BhB,GmD9BmB,A5B6CnB,Cc7BA,AfoFsB,C3BxFxB,A4BiCuB,C5BjCvB,CwDZyB,AdgBA,AfoFE,C6BpGD,ApD+BtB,CqCTK,CrCS0B,CuBqER,Cc9EzB,AetBmB,ApD+BjB,CoD9BE,AxDWN,CImBuC,EJnBvC,AImBI,CoD9BE,CpD8BmC,IsCfvC,A9BJU,EAAsB,CAAtB,CZAJ,CYA6B,AewFV,CfxFf,CAAZ,AewFoC,E3BxFpC,EAAa,Y2BwFc,C6BnGrB,A7BmGN,E6BlGQ,KAAK,eADP,EAEE,CAFF,EAGE,KAAK,KAHP,EAIE,KAAK,MAJP,EAKE,CALF,CADe,CAAjB;AR3HN,CAAA,CPkJG,AOlJsB,AN4ItB,AxCJD,AuB+GA,Ab/GA,APkBC,AgBMA,AMgED,AvBrEA,CqCXA,ACRA,ArCcO,CsC6DL,ArChEA,ANXA,AFEA,AsEHC,AVoBD,C9CnBC,CmBOE,AyBXD,A7DSE,AiC4BF,AqClCA,ArDCA,AewFE,EgBbA,ArChEA,ARTA,C4DiBC,ArDDA,ADCA,CwBcC,AmCcA,CPnDC,AxDIA,ELKI,AUaF,CqDCC,AK4BE,A1D7BF,CCPC,AXNE,AGHF,A2B6Gb,AwChHa,ArDCb,APkBa,CPhBC,A2B6Gd,AwChHc,CjECL,A0DmBM,AtDAA,CJnBN,AYAO,ARmBA,CERC,ARTf,C8B+BgB,C9B/BC,A8B+BA,C8BdC,ArDDT,CsCyDU,AtCzDA,E2C1JvB,AvBuPE,AEvByB,CgBbD,ArChEA,A0CnJ1B,ArD6I4B,A8B0G1B,CnBpGyB,ANXhB,AiEDL,A7DoBW,CoDvBX,AxDIW,AiEDW,AtCyFE,CCvDpB,A8BdN,ArDDS,ADCgB,EoDvBE,A7DSE,AiC4B3B,A8BdyB,C/BqED,AvBrEE,CERb,AsBsBc,AmCcE,AnD/CjC,ARmB+B,CERC,ADOA,CLlBvB,AKkBF,CmDtB2B,AxDIZ,A0DmBpB,AK4BkC,CEhDhC,A5DmB+B,ADCL,CqB4F9B,AiC5FoC,CpDRnB,AFQoB,CERC,AXNvB,AKLN,AImBqB,CJnBR,AyB+GtB,AsChEyC,C3D5BD,CTdG,A+DcF,AtDAX,CuCwD5B,C3C3EO,AImBkC,CuCwDC,AexDA,AtDAd,CoDvBD,A7DSd,AKLQ,CImBuB,CER7B,AkDfb,A7B4FwB,AvBrEE,CTdoB,C8B0GrC,AiC5FoC,A/BqEX,AvBrEW,CJnBxC,AyB+GT,AiC5FkD,C1DnBhD,AImB4B,CERsB,AmBoGpC,CAAhB,ArB5FqD,EqB4FlC,AiC5FjB,AtDA4B,CqB4F9B,ArB5Fe,CsDA0C,AtDAzD,CqB4FsB,GnBpGpB,CmBoGF,CnBpG+D,CmBoGnC,AsChEQ,CAA+B,ApCyCvC,CAA5B,EFuBA,EAAkC,CsChEE,EAAuC,CtCgE3E,AsChEoC,CAA5B,CtCgE8B;ArB3FvC,EqCRC,ACNA,A1CLC,A8DID,AlDJA,AHEA,AkBsFA,C3B1FA,C+BSG,AyBXA,A7DMmB,A8B6GpB,AwChHC,A5DmBD,CVlBA,AiBAC,C+B2EC,ArChEA,ARTA,A4DiBA,A9CnBA,AHEJ,AkBsFM,ClBtFN,CmB+BM,AkC7BN,CrC2GO,AqC3GP,CJeQ,AK4BA,CjE7CA,A4DiBC,C5DjBA,A4DiBC,EAAF,A9CnBR,C8CmBI,A9CnBS,CAAb,AHEA,CAAA,CXAI,AgEEJ,AJegB,A9CnBA,CdEA,A2B6Gd,AqC3GF,AC2CiB,AnD/CjB,AewFmB,CCvDD,AH8EA,AsChEA,CnCdC,AhBjCA,CgBiCD,AhBjClB,AewFsB,CCvDhB,A8Bde,CfwDC,AlBoCpB,AiC5FoB,AK4Bd,AnD/Cc,Ca+GC,Ab/GvB,CdEuB,A8B+BC,AkC7BxB,AnCoFsB,CgBbG,A7CzED,AiE6CC,CL5BrB,CIfJ,ChEFI,A8B+BoB,CmCcK,AtD7C7B,CsD6C8B,EtD7C9B,CsD6CyB,CAAS,KnCdV,AkC7BxB,CnBuEI,CfzCI,GnBhCR,MkBsFsB,EACpB,CCvDkB,AmCaiC,CnCbhC,AmCaiC,CnCblC,CADI,ADwDlB,CAAC,CCtDC,AmCYiB,EAAmC,EpC0C1D,CAAY,MoC1CuD,CAAC,GnCZ/C,ADsDC,CCtDA,AmCYC,CnCZF,AmCYf,CnCdgB,ADwDG,ECrDnB,eAAe,CAAC,ADqDX,CCrDU,CAHC,CAAlB,ADwD2C,gBAA/C,CADoB,EAEpB,IAAI,CAAC,KAAL,CAAY,UAAU,GAAG,mBAAd,GAAqC,gBAAhD,CAFoB,CAAtB;AhBrFI,AtCgBA,A+BEN,E5BjCE,AyFYC,ArDCD,A/BXA,AwCmCA,C4C9BA,CtEWE,AGHC,AgEED,AMNA,AVqBC,AlEfD,AiBFA,AJgBA,ECPE,AmBoGA,EjD5HJ,AmBkBQ,AiCgCF,AnBnCA,CjCfN,AmCec,ACFP,ApBID,AiBFC,ApCgBO,AgCAP,AgBOL,C0CsBM,AvE3CD,CcOE,AwDPA,AMNA,C3CiHC,Ab/GA,A/BXV,AwB6BU,AgBOL,CTzBM,A/BXX,AR6BI,AgCAO,CVbG,A8B0GF,AhB7GA,ApCgBO,AgCAP,C2CaC,AvBgFA,AJrFX,CyCtBY,AMNZ,CzEOe,AtBab,CG/BJ,CAAA,AiD4HY,AsChEK,AnD/CjB,ApBIE,AnBcsB,AgCAd,CCPN,AsB0Bc,AmCUA,ApD7Cd,ANgBc,CuBmBC,AH0EA,Ad7GO,ANgBhB,CVbY,AiCgCJ,A/ChDlB,AWemB,CcOE,AsB0Bf,A/ChDN,AR6BI,AgCAiB,C0D6Bb,A1D7Bc,AgBOpB,CIsFU,AhB7GV,ApCgB0B,AgCAlB,CuBmBc,AjBnCpB,Cc6GqB,AsChEA,AtD7CA,AJgBA,AgBSvB,CyCvBA,AnDF+B,CLS7B,AdPsB,CoCiCF,A/ChDxB,AWe2B,ChBjB3B,AmBkBiB,A8B0GL,AsChEiB,A1CpB3B,CImFqB,AsC/DO,A1D7BpB,CVbR,AdhBF,AwB6B+B,C7B/B/B,CuF4DyB,CAAS,A1D7BxB,EAA0B,CMhBhC,AnBEe,EoCiCK,AjBnCsB,ANgBpC,CAA8B,CuBoBhC,CpDnDK,AgBiB4B,CXfzC,GLFA,A6B+BU,AgBSR,ChBTA,C7B/Be,A6CwCL,GVzBR,AnBEe,A6BuBjB,EOWkB,AmCSiC,ApD7CK,AUyBzC,COWI,AmCSiC,AvE3CD,A6BuBnD,COWkB,APblB,COYsB,EAEhB,AmCQiB,A1CnBvB,E0CmB0D,CvE3CA,CAAC,K6BqB3D,E0CsBmE,CAAC,A1ClBpE,C7BzBiB,EoCmCI,CAAC,AmCQC,AvE3CgD,A6ByBvE,COUqB,AmCQf,CnCVgB,EAGhB,ApCpCN,a6ByBA,EOWqB,APXX,COWY,CAAD,CAHC,APRtB,COQI,CPRW,CAAf,EAAkB,YAAlB,CAJA,GAKA,QALA,IAMC,iBAAiB,IAAI,CAArB,GACG,EADH,GAEG,MAAM,WAAW,CAAC,MAAZ,CAAmB,iBAAiB,GAAG,CAApB,GAAwB,CAAxB,GAA4B,CAA/C,CARV,CADF;AwBgEI,AjCvFL,ASkCA,ErBnCD,A8DKG,AGJD,AGFC,AzDID,AtCgBA,AsDyEA,CmCzFA,AMlBA,CrCuBE,AvDpBA,AgFQA,A7DUA,AdhBA,AWgBA,AaaA,EsCwDE,ArC/DA,AsB8BC,AHsED,Ad7GE,AFAF,ApCgBE,AsDyEF,CC7DA,AD6DC,CIpFG,CcgFM,AlDlFP,AKNT,AWGW,ANgBF,CVbC,AoE0CA,A1D7BA,CsCwDC,ArC/DA,A9BxBC,AgFQD,A3ENC,C8DqFA,AlBqCA,ApD7FE,CuDuBD,CHsEC,ApB7FV,CsCwDW,Aa/EJ,A/BoHI,ApD7FE,AgCAF,CsCwDT,AnEvFW,AiD4HH,A5C1HG,AwB6Bb,CVbA,CgDqEc,ArC/DZ,AyBJc,ANwGF,ApD7FE,CsEwDD,AlBqCL,AsChEK,A1F7BE,CsBbD,AoE0CA,CzDpCC,AyBJE,ANwGF,CkBrCC,A3C3EtB,AyBgHc,AEpBZ,CkBJI,AhElGM,CgEmGV,AlDnFkB,AoE0CV,ApC4Cc,CtDzEP,CG/BL,CuF4De,AlF1DC,C8DqFtB,ArC/DA,EqC+DwB,AnEvFC,AH+BC,C0DXC,AgCwCF,A1F7B7B,CsEwD8B,AZnEE,AgCwCF,CpB2B1B,A9DrF4B,CAAC,C8DqFA,AnEvFC,AmBkBhB,AoE0CO,CAAS,CpE1CV,CdhBE,CgEkGtB,AhElGkC,EgEoGtC,AlDpF4B,CoCE1B,ApCF2B,EdhBc,CLFd,CAAgB,CqEoGzC,AW5FK,A7DUe,CAAW,CkDqFnC,AW9FI,ChFTyB,CAApB,AKEiB,CgEkGtB,AhElGK,CcgB+B,CkDsFxC,AW/FS,ChFT8C,AuF4DF,CAAC,AlF1DE,EAAtD,EgEkGE,AkBxCqB,ElB6CzB,AkB7C4D,CpE1CzB,CnBlBjC,ImBkBqD,C6DV9C,EAEL,A7DQoB,AoE0C6C,CPpD5D,AOoD6D,EPjDlE,C7DO0D,CoE0CrC,CAAjB,ClBwCJ,AlDlFc,C6DPT,CX+FT,AlDxFmE,CAAjD,EAAoD,C6DV7D,A7DUS,CAAhB,C6DNE,KAAK,MAJA,EAKL,KAAK,CXuFL,EAOJ,MWnGS,EAML,IANK,EAOL,CAPK,CX4FL,CWpFA,CX2FY,AWnGP,EASL,YATK,EAUL,kBAVK,CAAP;AxD7FJ,AqBsIA,AG3CM,CxB3FN,C6CkME,ArE5GC,AgFmBA,AxDzGyB,A8DwG1B,AMNA,AzDEY,A9BZX,AR6BD,CGjCA,AgFPA,A3ESA,CkDoBE,ApCFA,AGHA,A2B0GqB,AiC1FrB,ArDAA,AsByEA,CFiBA,CoBbE,AvCpFA,AGTA,ApCgBA,EsEwDE,AZnEE,AHkCF,ADkDJ,CkBIK,AlD1FA,AGHD,A0BVQ,C7BaN,AGHD,AiE6CC,CzDpCC,AoDOA,ArFAT,EwE6EW,ApC7FA,AJgBA,CAAC,CqDAV,C1DrHJ,CLwGI,AKxGJ,ASqGM,CsBKc,CcwFD,AkBhDA,A1D7BN,AsByET,CgBjBgB,AhDrEA,AiCoCA,AmCMA,A1D7BhB,CsCwDiB,AZnEE,AJoFZ,CgBjBS,AEqBE,ArBvGhB,CmBkFE,AfjCe,AJjDO,CuCuDpB,CpE1Ce,CgDqEC,ArC/DpB,CRTF,A8BuCmB,AmCMI,ClBgDzB,A/C5FI,CQQuB,CuCoFC,CdxFG,AgCwCF,ChCxCG,AgCwCF,CzDpC1B,AkBnBA,CmBkF4B,AhBiB9B,CgBjB+B,AhDrEf,AoE0CO,AvCvDa,CmBkFN,AoB3BE,ApC4CV,CgBjBlB,AhDrEJ,IoCEmB,CAAqB,GjCJtC,CAAc,I8BsCG,EGlCnB,AjCLA,A8BuCmC,E9BrCjC,CiE2CiD,CAAC,GjE3C9C,CAAC,AiE2CgB,EAAmC,EnCNvC,EAA8B,EDkDjD,GoC5CmE,CAAC,IAA7C,CAAjB,InCNa,CAAf,K9BvCJ;EtBbF,AgFmBA,AzCyBA,AU+EC,AiC7FA,A/ClB4C,A9BV7C,AwB4BC,AmB1BD,AGmGC,CFeD,AiChGA,ArDGO,CwCkFL,AvCpFC,AyBJD,ApCFA,AcHC,CHID,CqCoEG,AfjCA,AJjDL,CbQA,CoBOQ,AgCwCD,CpE1CA,AUaA,CVbC,CWMC,CSqBT,CAAA,ETrBa,AMXA,CjBKX,CoCEe,EpCFA,CWMC,AyBJE,EhByBpB,ASxCA,CTwCA,CpB3BsB,A6Bbd,MOesB,CAAC,EpCFd,C6BbC,ClBmBT,AXNP,A6BbiB,ElBmBgB,GyBJjC,ChByBF,CSxCQ,ETwCR,ASxCA,EAA8B,UTwC9B,ASxCA;EtBOA,AuBkHA,A0CpHA,ATuBA,A/CnBA,AtCkBA,AmD1BA,EqBuGE,AdxFA,ApCFA,AGAA,AiB2BA,AaSC,AvBvBD,ECPE,AKXA,AaRJ,CnD0BK,C0DXG,AjCFA,AOaN,CVbK,AwETP,CxESQ,AwETR,CtBmGS,A9B/DA,A1CdA,CAAC,E0DXI,AjCFA,CEPD,AEAb,ASEa,AtCkBA,CsBbX,AoB2BY,AblCd,A7BoBA,CwE6Ee,AdxFE,AjCFA,CaLD,AtCkBA,CsBbC,AwETjB,A9FsBiB,CwE6EC,AsBnGlB,C3CJA,COesB,ApBPtB,AtCkBoB,CwE6ElB,AdxFqB,A1BWrB,AmB1Be,C1BaO,C+C0FD,AlD1FA,AGAE,AIPzB,AGoBS,CHpBT,E7BoBA,EsBb4B,AtBaA,AgCA1B,CwC6E2B,A/C1FZ,AzBaY,C0Cc3B,AVdc,ChCAhB,AmD1BA,CnB0BE,CwC6E+B,AxE7EA,AmD1BJ,CnByBtB,CACc,C0BXJ,CpCFA,AwETjB,CpCWE,CcwFA,CsBnGF,CtBmGyC,AlD1FA,CAAC,AOP1C,CsBNA,EtBMA,AsBNyC,E7BaM,CAAC,EwET5B,KxESH,EOPjB,CPO0D,AOPnC,CAAvB,AsBNA,O7BaiB,AwETjB,EAAoC,CxESiC,MAAnE;A8DkBJ,ApE/BM,AKeA,A8BdL,ETwCE,AbjCD,ASCA,ANkBC,AsByED,CZ7DA,CgBvBE,ApCFA,AGAI,AqETJ,A1DKA,ApCiBA,EsEuDE,AEsBA,AvCpFA,AKXA,AgB2FE,EIpFE,AgCuCF,AtD7CA,CdIC,AwETA,A9FsBA,AgB3BO,AKeA,CCDN,CWMC,CGVC,ApCiBA,EsClBE,CoD8CC,AtD7CA,ApCiBA,C0DXG,A1DWF,CsClBC,AtCkBF,AsDyEI,CgBlBD,AwB7Ed,A9FsBA,AqBZE,CiDmEa,AZlEE,AoCXF,A9ELb,AKeoB,CYKpB,AGVc,ApBVO,AsCoGL,EhB3FpB,CLWqB,AXNnB,CwETA,AJkDI,CpB2BF,AZlEqB,CAAC,ApCFF,ANdpB,CiBoBA,CqC8DsB,AtDlFO,CAA7B,CsCoG0B,CkBID,AlD1FA,AcJ3B,ApBVkC,CwDwGN,ApCnG9B,ApBLI,CoBYF,AfGE,AiCqF6B,CgBlB7B,AtDlFiC,CKeC,YCDd,CkD0FsB,ClD1F5C,AgCsFF,CkBI6B,AdxFV,CcwFf,AdxF+C,GcwFC,MdxFQ,CAAC,QcwFM,CAAC,CdxFjD,CAAjB,IcwFiE,CAA/D;ArBrGN,EkBUE,A3B8BA,AJjCA,AtBTA,AKeA,AiCsFA,EgBnBG,AZlED,ApCFA,AGD+B,A8BqC/B,AuC7CA,A3EQA,AiBDA,EoC4FE,AvCpFA,AyDmCC,ApD9CD,CoD+BuB,ChCxBnB,AHkCF,CjCpCC,AiCoCA,AuC7CA,AJkDA,AvE1CD,AHbC,AKeC,AiCsFD,ChCvFC,AHDD,AmCwFC,CrBjFC,ARP+B,CAAC,AaJ/B,CiByCH,AmCVoB,CAAvB,CpD/BS,AtBTA,CqDYb,ArDZc,CqDYd,AlDCE,AHbW,AsCqGb,CrBjFI,ARRa,ATZV,AsCqGS,EhB5FhB,AnBIiB,CcOE,ARNb,CiCEgB,A1ChBF,CMclB,ANdK,AKee,EYKlB,AyBJqB,AjCJvB,AqEPA,CzBOF,A/CEwB,ADCC,CgDHzB,ArDZyB,CuCkDlB,AuC7CmB,A3EQD,AHbC,AsCqGA,CnCxFA,AEEnB,CCDqB,AiCoCb,CiBsDc,AdxFE,ApCFF,AgCuFb,CkBGc,AdxFE,A1ChBF,AKeE,CiCsFD,ChCvFP,AgCuFR,ChCvFiB,CDCG,AiCsFF,CjCtFG,CLfD,CAAC,AKerC,AiCsFgB,ChCvFsB,ANdF,CqDYpC,ArDZO,AsCqG8B,CCnD9B,ApCrCU,CoCqCf,ApCrCsC,CkDDxC,AyBPE,CvC6C4B,AvClDa,GwDwGG,ArD3F7B,CuCGQ,AvCHvB,CqD2F2B,AdxFqB,CcwF9C,AxDxG6C,CAAC,CAAD,CwDyG3C,AH7FS,ArDZ4B,EMcV,EAAT,ANdgC,CAAjD,C0CgBqD,ApCFF,CoCEG,ApCFrC,CAAtB,CNd2D,CAAC,CqDY9D,EAA4B,CrDZsC,CwDyG7C,CAAC,CdzFG,CAAvB,E1ChBsE,CAAC,CwDyG7C,AxDzG4C,CqDYxE,ArDZA,EwDyG+B,AH7FO,CG6FjB,CADjB;AlE3GN,AUIC,AKeA,EiDmEE,AFhED,A9BRA,ANgBA,EwC+EG,AH7FD,A/CEA,AwETA,AJkDC,AvE1CD,AiBDA,ApCcA,AsD2EA,CoC/DA,CzDlBE,AsB8BA,AjBxCE,E+BEJ,ArEcI,AsD2EE,ChCvFD,AwETA,A3EQD,AaaC,CoCRP,A9CJQ,AhBlBA,AaiBD,CcOE,AmCFT,AbgCQ,AmCKC,ApF3DA,CiDsDA,AvDxBC,AsD2EE,CtD3ED,CgCAX,C0D6Ba,ApC8CE,CwChGb,CxESA,AiCoCE,ApCrCF,CmBHgB,AnBGH,AnBaL,AsD2EQ,CAAC,CcnFnB,A9CJkB,AiCoCD,AjDtDnB,AN8BoB,CoERlB,AsBqCS,ApD7CY,AhCdF,AN8BT,CqEdR,A/BDA,CoD4CmB,ApF3DvB,AN8BuB,EsBZE,AgCuFR,CrBjFX,AKTF,AtCeQ,AsD2EgB,CnCxFxB,AnBaA,AsD2Ea,ErBjFY,AjCMA,CoER3B,AjDJI,CmCuF2B,EcnF/B,CnCEI,CXNc,EAAhB,AHAS,CoCoCM,ApCpCL,CoCoCe,IahCjB,CbgCN,AjBvCF,EAAW,CnBGT,AmCuF2C,CAAC,ChB1F9C,AgB0F6C,CAA7C,ChB1FgB,CnBGQ,CiDI1B,EAAoB,MjDJhB,GACI,KmBJU,CAAU,CnBIb,CAAC,EmBJd,EAAgC,KnBG9B,GAEI,ImBL0B,sBnBKA,qBAHhC;AbfJ,A0B6BC,AhBzBD,AKeA,EgDJG,A0BND,ADDC,CzBKD,AyBTA,C7DmBG,AyBJD,AUEA,A9CJA,AGDA,A8BqCC,AjBvCC,AnBKF,AiBJA,AkByFA,CCrDA,CmCOE,A1F7BA,EoERE,AdmFE,CIpFJ,ApCHG,AGDD,ANGA,CGFE,AGDD,AaFG,AnBKH,CoCkCE,AwC5CT,ALiDS,CKjDT,AzC+FY,CIpFJ,AUCG,A9BPE,AtCeF,C0DTF,CJoFM,EIpFH,ApCHV,AgBHE,AnBKF,AmCqFe,CnCrFF,AnBUX,CyBbF,CHCgB,AGDD,A6BwFG,CyC/FpB,AzC+FqB,CyC/FrB,C5EUE,CAAmB,CuCCD,ApCHG,CoCGF,AjCJnB,C6BwFe,CcnFX,AdmFsB,CAAX,EoC9Cb,CtBrC0B,AsBqCA,AvEvC5B,C4EVF,AzC+FiC,EhCvFf,AHEc,C4EVhC,C3BYmC,A9CJjC,CoEyCE,KhCtCQ,CAA2B,CvCDrC,C4EVU,E3BYkB,CdmFmB,CcnF/C,AdmFgD,CAAD,CcnFC,AdmFnC,CIpFiC,AJoF9C,CIpF+C,EqCXjD,EAAwB,MrCWZ,CADV,EAEE,AqCZJ,CrCYK,CqCZ4B,GrCYxB,QAAQ,CAAC,UAAT,EAFP,EAGE,EAAE,CAHJ,EAIE;A1BQN,AkBPM,EoB6DJ,ADpEA,AoBDA,AKNA,AToBA,Eb8EE,AlD1FA,AyERA,ALiDC,AvEvCD,AnBUC,AsD2ED,EIjFE,AUFA,AbgCA,EkCtCJ,AMNM,AzC+FE,CgBpBD,AhDnEA,AmEFP,AMNO,A5EUD,A+BIQ,CQAJ,AUFA,AbgCA,A8BxBV,AlEVO,CqDwFE,Aa9ET,I/DZE,C8CIc,AdmFA,AJjFZ,C/BJF,A+BIoB,C5BNN,AmEFhB,AtEIe,CuCII,AUFA,AqBNnB,AnCyFmB,C+B3EnB,C9BwBqB,A8BxBrB,C3BNsB,CpCNpB,AHEA,AmCqFiB,CcnFK,AbgCA,ApClCH,C+BIjB,EoB6DJ,AEuBE,AiB5FF,AvCQgC,GQAF,A+BR9B,AJcA,C3BN+B,E2BM/B,IjBRmB,AjDFjB,CiDEoC,AbgCA,AL9BlC,CK8BmC,ADmDpB,CnCrFkB,A+BIM,CIiFf,CmCzF5B,CrBM2C,A2BZzC,CzC+F6B,CyC/FI,AVoBnC,A/B2EgC,CnCrF9B,IiDEiB,CAAf,AdmFe,CAAjB,GIjFoB,CAAkC,QH8BhC,CAClB,CG/BgB,EAA8C,CAA9C,CAAlB,OH8BoB,EAElB,KAAI,CAAC,QAFa,CAApB;AegCL,EEuBE,ArE7GD,AgFmBA,AOyCC,AlF1DD,AR6BC,AkDND,EjBDE,AXJA,AmEHA,AJcA,A/ChBE,AnBOF,AiBNA,AkB0FA,EIjFE,AqCdA,A7CcE,CdTD,CHQC,A9BxBN,AkF+BQ,A/ChBA,AnBOF,AmCoFE,CrBlFD,A9BxBP,AgFmBA,A7CJS,CoBUC,AyBNV,C7DCS,AmEHA,CMNL,AvFTJ,CuFSI,AvFTJ,A0CuBa,CjBDD,AyBCE,A2BMA,ClETD,CGFX,AmEHY,AvCQE,CQAC,A2BMA,A/ChBb,AgB2Fa,CnD1GjB,AgBsBgB,ChBtBhB,AgFmBA,A7CJmB,C6CInB,A7BuFoB,C+B3EC,CIdnB,AMNE,AvFTJ,CyBsBE,AyBCqB,AqCdb,AvFTV,CkDuBwB,AJiFJ,CrBlFG,AdFA,CkESN,AlETO,CkESG,AnCNA,G/CzB3B,AgFmBA,CzBMiB,ARAc,CQCzB,A2BK0B,C3BNf,AvDzBjB,AgFmBA,AhEGE,A+BGF,C6CdI,CrCgBE,AqChBe,CvFTrB,E6E6BiB,CUpBb,AVoBF,A7E7BF,CuFSqB,CzC+FD,EnD1GR,AgFmBD,A7BuFmB,CI/Ef,AyBRf,AYRI,CrCgBY,CAAD,AyBRD,AYRQ,AzC+FW,CIjFhB,AyBNjB,A7BuFkC,EI9E5B,AyBTS,EhFnBf,AKEA,ELFoB,AmD0GA,CAAlB,CAJmC,CyC3FjC,AzCiGF,EIhFa,AqCjBmB,CrCiBlB,CAAD,CAHE,EAIX,IqClBF,MrCca,EAKX,UALW,CAAb;AY+DN,AnBlFM,E7BeH,AGJA,AgECA,AC4CD,AxCpCA,C5BzBA,AmEeA,CtFfE,AgFmBA,AEYA,A7E7BA,EyBsBE,AmCFA,AboCA,AjB3CE,AFCF,AcSE,E/CzBA,AkF+BA,ClF/BC,AkF+BA,AlC1BO,CiBiBN,AhCNA,C+CGC,A5BuCA,A/CxDC,C6E6BA,AnCNE,CmCMV,ClF/BU,AiCgBA,CHQC,AmCFA,AeHJ,A5BuCI,AnB1CA,AcSE,CkBHD,A5DpBC,C8BaE,CLSD,CsBkCC,GapCG,AboCA,ALjCE,CkBHD,A5DpBX,A4BcF,AeXJ,ADoBmB,C/CzBrB,AiEsBkB,AjBjBS,CiBiBhB,CnCEW,A9BxBA,AiEsBhB,CnCEiB,AzBtBC,E4BcC,AcSZ,CkBHa,C5DpBF,E+CwDK,ALjCE,CKiCD,CapCC,AjBjB7B,CiBiB8B,CjBjBM,CIqDpC,EtBlCY,AsBkCsB,CtBlCC,CmCFC,A5DpBd,C4DoBe,CAAD,AboCE,A/CxDT,C4DoBA,CnCEjB,AmCFZ,AeHK,A3EjBiB,CyBsBtB,AGRuB,AcS3B,CkBH8C,AeF1C,A5BsC0C,A/CxDT,A4BcA,K+CI5B,A3ElBiC,C4BctC,EAAyC,GmB0CY,CAAC,A/CxDhC,CAAjB,G+CwDL,C/CxDmD,C+CwDS,C/CxD9D,G+CwDkE,EAAhE,EAAoE,K4BtCpE,EADK,EAEL,CAFK,EAGL,KAAK,KAHA,EAIL,KAAK,MAJA,EAKL,CALK,EAML,CANK,CAAP;EX0FF,AWlFC,A7DLD,AGJA,AINA,A4DOA,AGNA,ApFVC,AR4BD,AmDzBA,ADoBA,CiCRA,A3EjBA,C6E+BE,A/ChBG,AnBMH,AmCsFA,EkBCE,AvCpFA,AyBMA,AvD9BA,A4FUA,A7CeE,EsBmFA,AJtFA,AboCA,A8B3BA,AlEVA,AiBLA,AkB2FA,CtD7EC,C0DAC,Cc8EC,AlBDA,CI7EC,AURJ,AwBVN,AtC+FU,CnD3GC,AoD0DA,AqC9CX,APmBE,ArFDF,AmDzBW,CAAC,ClBmBC,AJbb,AVUa,CcGC,AyBMA,A7BnBd,AqBcgB,CKiCD,ADiDT,CnD3GF,AmD2GY,CnCtFC,A+BIE,EKiCA,AJrDnB,CyCOA,AzCPoB,CyCOpB,AtC+FM,CCjDgB,CtBlClB,AJbJ,C2CiGwB,A3CjGxB,AyBgGwB,AJlFE,CsBmFD,AlBDnB,AJlFqB,CjBDD,AyBMA,GJ6EG,CnCtFC,CqDuFN,CAAxB,AlBDgC,CCjDC,AJrDjC,AGsGiC,CCjDC,CLjCf,EkBHb,AjDD+B,CoCqC/B,AqC9CN,AtC+F6B,CcrFH,AdqFa,AJlFE,CjBDrC,AsBkCoC,CqC9CxC,C/DDA,E6BmBU,AH4BkC,ApCrC1C,CiDCI,AvCXN,AyBgG6B,CnCtFiB,EuCSP,AH4BS,ADiDA,CAA9C,CJlFF,C0CbkB,AtC+FiC,CI7ER,G7BnBxB,I0B+CwC,C1B/C3D,A0B+C4D,CqC9C5D,C/DDwB,C+DCM,ClCkByB,AH4BjD,AqC9CN,ErC8CkE,AqC9CjC,IrC8CqC,EAAhE,EAAoE,CqC9C1E,ElCkBQ,AkClBoC,ClCkBxC,EAAgE,KkClBpE,EAAoD;A5FmBrD,AmDzBA,EqBuGC,AWjFA,AzCkBA,AJ9BG,A9BZH,A0CsBA,CZfE,CnCVC,A0BWD,A+DCA,AGFC,AzDDkB,CAArB,CkCmGI,AvCpFA,AmCFC,AjDDD,AmCsFA,AJlFE,EsBmFA,Ad9EA,A7BnBE,A+DCA,AxDIF,EHQE,AsBkCA,ALjCE,CsBmFD,C9B/DT,CAAA,AblCa,AVUF,A+BIE,CKiCC,CtBlCD,AyBMA,CvCTC,CyETG,C3DYD,AsBkCE,CG5BZ,AJ6EW,CsC/FG,AtC+FF,CCjDG,ALjCA,CRoBrB,AQpBsB,CRoBtB,EkDjCyB,CpBgGD,CAAC,AvCpFA,CAAC,CqBmFtB,AJlFS,CImFP,CZ/DN,AQpBA,EsBmF+B,AvCpF3B,AqBoFK,CZ/DT,AY+DU,EkBAwB,AjBlDE,CiBkDZ,AjBlDa,CiBkDrC,CAZgB,AlBWZ,CkBEJ,ClBAM,CCnDmC,CAAC,Gbb1C,CY8DI,EAGE,CsClGc,CrC8CgB,AqC9Ce,ErC8CC,EDiDhD,ECjDgC,ADqD9B,ECrDoD,CDqDjD,CsCnGW,AtCmGV,CsCnGR,CrC8CkC,EAA4B,CDqD1D,CAAU,KAAV,GCrD8B,ADqDZ,CCrDhB,GDqDoB,MAJxB,EAKE,GAAG,CAAC,KAAJ,CAAU,MAAV,GAAmB,IAAI,MALzB,EAME,IAAI,GAAG,WANT,EAOE,IAAI,GAAG,WAPT,EAQE,QAAQ,GAAG,WARb,EASE,SAAS,GAAG,WATd;AtD3EN,AmDzBA,ITuCI,AbnCc,AwDoBd,A/BuFC,ErB7FC,AyBMC,EvCTC,AiBLA,CiDcC,EpDNE,ASqBA,CTrBC,CGRC,CiDcC,E3CeE,C2CfC,AlETA,EAAE,CcGb,EoDMgB,CpDNC,ASqBnB,CN7BI,EjBKkB,CAAC,AiBLA,CAAnB,CiDcJ,EAA2B,EpDNzB,GoDMF,EAAkC,KAAK,AlEV3B,GkEU8B,KAAK,CAAC,KAAhD,EAAuD;AtDGrD,EyC4EJ,A9B/DC,AJ7BD,AgBqGC,AJ7FD,CRmBA,AYsDA,CnDlGE,A0BU4D,A+DE5D,AGFA,E9DeE,AmCHA,AiBSA,A/CdA,AYQA,E0CbE,AGFE,A5EYF,AiBLA,CPP6D,A+DE5D,AtDKA,APgBO,CFvBsD,A0BgD5D,AjBzCA,AYQA,CjBAC,A9BzBA,AiEsBA,CnCGC,AoDMA,CAAC,A/CdP,CiByCQ,A8B3BA,AlETA,CiBLC,AcQA,CrBfX,AwDqBQ,AlETI,AYWV,CERA,AoDMA,A/CdW,APgBO,CwByBd,AqC9CN,CzFZe,AiCiBX,CHQY,AsBiCA,AqC9CA,APmBA,CUrBG,C5FTf,CgBqBe,C4EZG,A5EYF,CkESC,CpDNnB,AmCHA,AiBSoB,AtDEpB,CyC4EqB,CAAC,AzC5EO,CqCXN,A2BZE,C5FTf,C4BgCV,CsDFA,CtDEkC,C5BhCpB,AiEqBc,A9BLhC,EAA6B,AYQhB,AnBQT,CmBRsB,CnBQiB,C5BhCpB,C4BgCnB,EAA2C,EyC4EL,AzC5EtC,CqCXuB,CIuFF,AzC5E0B,CyC4EnD,AJvFI,EjEtBa,CqE6G+B,CzC5E5C,CyC4EJ,ArE3GM,C4B+BoD,CgEvBlC,CAA+B,C7CevD,AnBQI,E5B/BQ,A+CuBmC,AnBQgB,C5B/BlD,E4B+BT,E5B/BE,A4B+B4D,C5B/BhD,C4FQM,CAAtB,G5FRqB,UAAjB,EAA6B,MAA7B,GAAsC,CAF1C;A6BgCE,AXXA,EmDyFJ,ArE3GC,AuC6CD,AYwEA,AvBtFA,C5BtCA,CiE2BG,A2BXD,AVoBC,A/CdD,AYQA,EjBAE,AyBMA,AkCnBA,AzEOU,AiBFT,AkBsGC,AvBtFA,CZdF,E4ERG,A/DoBO,AXXA,AUaL,C2BFD,CzBNC,CAAC,AsBiCA,AjBzCA,AYQA,AnBQE,C6DrBD,ClCmBC,CAAC,ApBdA,AYQA,CnBQG,CwByBF,AxBzBG,CERb,AsBiCW,AqC9CX,AGDF,A/DoBE,AXXA,C0ETa,AzDMf,ANcsB,AXXA,AiCmGL,CvBtFP,CERO,AFQE,CuBsFC,CIxFd,ARNa,ClBMjB,AkBNkB,ElBMO,AsBwFP,AvBtFV,CyC4Ea,AvCpFrB,AFQJ,CyC4E0B,CtBpFb,CQMe,AH2BlB,AwC/CR,CxC+C0B,AwC9CxB,C7Ca0B,C7BL1B,EkCsCM,AlCtC4B,CkCsCL,AwC9CxB,IxC8CC,CLjCG,CAA2B,EsBoFE,AlBUpB,CyC3GlB,CvBiGqB,AlBUQ,CkBVjC,Cd9E4B,CAAU,AqCnBhB,CvBiG0B,EAAhD,AtBpFa,EAAuC,CQMhD,EAA0C,CJwFxB,CAAtB,GyC3GI,GAAkC,A7CazB,CAAX,Q6CbE,GAA8C,EADhD;A/ELE,EwDwGJ,ArE1GA,AkEcA,AoBAA,AKPA,A9DqBA,AXXA,AiCoGA,AJ/FC,AnBQD,EFxBE,A+DGC,AtDKD,AnBKC,EqDuFC,AzC5EE,COhBD,ANcA,CwC8EC,Ad9EA,A7BtBA,A4DQN,AnDCK,ANaC,CyDdN,AKPA,A9DqBK,AhB1BS,AKeN,AUaC,CwByBA,AuChDT,A9DqBA,CwC8ES,CzC5EG,CyC4EZ,A3CpGW,AGsBA,CHtBC,ASQV,CgBuGW,CevGb,AfuGc,AvBvFE,CsChBhB,A/BEK,ANYM,ADEM,C0DhBjB,CAAA,AKPA,CAAA,A/DuBY,COhBV,APgBmB,CFxBf,ASUI,CjBCY,GgDHtB,AhDGyB,AUab,CsChBZ,AoBAA,A1DgBA,CCFW,AsByFX,CzB/G2B,C4DQ3B,AzDckB,AXXW,CLfzB,AKe0B,AiCoGD,CtCnHQ,CKe9B,CiBDG,CNYa,CqCdvB,ArCcwB,AXXY,CWWb,C8DrBvB,A9DqBkB,AhB1Bd,AsCmHJ,CevGA,AhDGA,AiCoGqC,CtCnHQ,C8EK7C,A9DqB6B,CyDd7B,EzDciB,GAAmB,CHtBT,AGsBhB,CqCdD,AxCR4B,AyB+GS,CtBzFR,AhB1BnC,C8EKe,A9DqBR,ChB1B4C,CgB0Bb,EqCd1C,AxCRE,CGsBS,CqCdO,AxCR4B,AGsB9C,AsByFqC,EAAoB,CAApB,EAAuB,GAAvB,CwC9GrC,CxC8G+D,CevG/D,AyBPoC,EzBOL,CyBP/B,EAAuC,IzBOvC,EAAsC;AhDIvC,EmDyFC,A/C7FA,AjBdA,AwB6BA,AhB1BA,Ae4BA,EqCZE,ACJA,AoBAA,AMLA,ADFA,AToBA,AlERA,AmCkGA,EkBXE,AvCrFA,AyBOC,A7BtBD,ASUE,AFHF,ApBXE,CSWN,AOeK,CwC8EC,A/C7FN,A8B0CO,AvB3BD,C+DnBC,ADFA,A9DqBF,CCPG,AKLE,AFHF,AJeR,AhB1BU,CwDwGD,AJxFA,AvCZA,A4DQA,AJaA,AtDGA,CvB/BT,AuB+BU,CyC4EV,AuBjGa,AvFVb,A4BcW,AJeA,AhB1BE,Ae4BJ,CAAT,CqCZS,A2BTP,CNKY,ChEDd,A4DcE,AjDda,AJeJ,ADEI,CNjBf,AWAgB,C2DJG,AzDOb,AtBda,Ae4BF,Cf5BG,CsBcC,AtBdF,CyEYjB,AjFfF,AQGA,Ae4BoB,CvB/BpB,CuFUwB,ADFtB,C/DuBF,E+DvByB,C9DqBd,CCPP,AGRA,CJec,CCPW,CRR7B,EIPI,CJOJ,AOeuB,CxB7BvB,AwB6BwB,CoCVf,ApCUc,CAAL,CoCVM,A5DnBxB,EwB6B6B,C8DrB3B,E1BW2B,ApCUZ,CPfF,CsEJb,C/DmBkC,C+DnBY,A/DmBrC,EAA4B,CoCV9B,A5DnBT,AwB6BW,EoCV2B,ApCUI,CPf1C,EAAwB,AOeb,CAAX,MoCVS,CAAP;A9DlBJ,AemBA,E+CAG,AqBJA,AJaA,ArDCD,AhB1BA,AkCmBA,AnBSA,CqCrBA,AqBGA,AJOA,ChBLE,A5CDA,AIPC,A+DGD,AEFA,AtFRA,A4BcC,CARD,CmBkDG,AwC9CD,A/EPE,AkCmBF,ClBOC,CCPC,AoCPA,A5CDE,AmEJF,AtDOE,ANYF,C8DrBC,A9DqBF,C+DnBK,AzFVF,A0B6BR,AhB1BU,AkCmBF,C1CtBC,AFAA,AyB+BA,CvB/BC,AuB+BA,CETC,ARRE,AjBdF,A4BcA,AJeA,AhB1BE,AkCmBF,AnBSF,CETG,AoCPV,AnBOF,AnBSA,C6DrBa,CnEIG,CWRd,AJuBS,ADEI,C6DrBC,AEFd,AtFRc,CuFUG,ADFF,AxDSE,AFtBnB,ApBQmB,Ae4BF,CzB/BnB,A8BgBI,ApBbkB,CVHD,AUGA,C4EOjB,AGAoB,A/EPtB,Ae4BoB,GNjBK,AjBdvB,AFAJ,AyB+BE,EgErB2B,CtEIC,AOejB,CCPL,CDOY,ECPY,GDOP,CAAC,CPfC,AqENvB,A9DqBqB,CAAL,EPfsB,COeX,CPf3B,EOee,GAAmB,CAAzB,C+DnBW,CAA4B,A/DmBX,CCPjC,ADOK,C+DnBW,CAAlB,A/DmBsC,GAA/B,CAAX;A1B3BF,EkEyGE,AJtFA,AeIA,A7DNA,AOXC,A4DSD,AJaA,A7E7BC,AwB6BD,AhB1BA,AkCmBA,AnBSA,CF7BA,ArBJA,CiBgBE,AmEJA,E3DYG,AyBOD,AqCnBA,AzDOG,AtBdD,AkCmBF,CsBoFC,AxC7EA,C4DnBC,A5DmBA,CmDLN,A1DVO,AOeF,C0BAK,AyBLV,A1DVQ,AOeR,AhB1BU,CMeV,ASaS,CTbT,AsERE,A7DqBQ,CyC2EC,AxC7EA,AhB1BE,Ae4BJ,CNjBP,AmEJU,A7DqBZ,CNjBa,AsEJA,CAAC,CvBgGC,AxC7EJ,AkBPX,AnBSe,CAAC,CoDPhB,A1DVE,ATXiB,AkCmBF,CQOG,AyBLpB,AnErBoB,Ae4BL,CTbf,ANfmB,CMenB,ANfA,CwDuGA,Ad7EuB,A3BEF,EyC2EE,AtBpFvB,C0CZE,A7DqBF,CoDPA,AYdI,A7CYqB,C0CZC,AGAA,A/DmBf,AkBPX,EiCEA,AnDKiB,AkBPW,CsBoFC,Ad7EE,CAAC,ARPhC,EsBoFgC,AoBhG9B,A1CY8B,ClBOV,AkBPtB,C5BJA,AUWuB,CwC6EvB,AuBhGmC,A/DmBb,AkBPa,ClBOxB,CwC6E0B,AlDxFrC,A4BIA,ClBO2B,C0BAJ,AqCnBgB,A/DmB5B,C0BA+B,AyBL1C,CzBKuB,A1BAO,C0BA1B,A1BAO,CwC6EgC,AxC7E3C,IwC6E+C,AlDxFhC,KyERW,CvBgG1B,EAAuD,AuBhGA,CzEQvD,EAAwB,MyERE,GAAyC,EAA/D;A/FmBA,E6BpBJ,A6DkDA,AlFzDA,AwB4BA,AhB1BA,Ae4BA,EyC2EE,AWlFA,AdVA,A/CIA,AGJA,AsEJC,ADHD,AxDUG,CANH,CkC+FE,Ad7EA,AH2BA,AvCrDE,CsBeD,C+BJC,AyBPA,CtBmGC,AxE9EO,AgCCP,C0BAG,AH2BF,AmCER,A1EvDU,CmEqBD,A7DNA,AGJA,AiE4CT,A3D3BS,COpBP,APoBQ,CObC,AtBfE,Ae4BJ,CsCjBP,ArCeF,ADEA,CoDPS,A7DNA,AiCsCG,AuCjDC,A9FqBT,CqEdU,A5CAZ,A8B0CW,AvD5BQ,C+BGN,C2BFG,AoCtBZ,C9EJa,Ae4BF,C2D2BjB,A1F9BI,AgBzBgB,C0C0BC,AgC6BrB,A1EvDmB,ChByBQ,AgBzB3B,Ae4BoB,C+DxBC,AxDWA,CkCwFC,CAAC,Ad7EF,A3BErB,C/BHI,EuD4BI,AjBtCG,AtCUoB,CsBVtB,AiCsCiB,CjBtCA,CkCwFJ,CAApB,AWlFO,A7DNP,E6DOE,AWlBF,CvCiDM,CuCjD0B,CpCsBb,AgC6BrB,EhC7B4B,AyBJnB,C5B+B4B,AmCErC,CnCFI,EAAoC,IG3BJ,CAAC,EgC6BpB,MAAjB,EAAyB,ChC7BG,CAAqB,CAArB,CAAP,AgC6BrB,ChC7BI,CgC6B2B,CPjC3B,EADK,EAEL,CAFK,EAGL,AO+BJ,EAAuC,GP/B9B,KAHA,EAIL,KAAK,MAJA,CAAP;AnDMH,EmDAE,A7DXA,AGJA,A2B6GD,A2CjHC,A/FkBD,AgBzBA,AkCkBA,AnBUA,CoDTA,A7DNA,AGNA,AsEdA,CvB8GE,AoBjGA,AFiDA,AtD5CA,EoC4FE,AvCrFA,AyBQA,AWfA,AyBPA,AxDWE,AtCUA,AgBzBA,CAAC,CuCqDD,AmCEE,ClBgDD,AoBjGA,ClCoBG,ApBXA,AtCUA,AgBzBA,AkCkBF,C4CdC,A1DOA,ALiBA,CsCjBC,AtCiBA,CEVC,AsBmCD,AqC/CC,A5FmBE,A+BGJ,CwByBE,AqC/CC,A1CYZ,AnBUA,CsCjBa,AjB6Gb,AhB7GE,CHOY,AmBsGd,CwClHe,AEFX,AJmDa,A1F9BA,A+BGF,C+DxBC,A9FqBE,CuD4BZ,AjBtCA,CLGQ,AyDqCM,A1EvDA,Ae4BF,C+DxBd,AxDWiB,AtBfA,CuCqDF,AvCrDC,CAApB,Ae4BqB,CyC2EC,Ad7EE,A1DDxB,CwE8EuB,ApBiBvB,AsCjEyB,A3D3BV,CqB4Ff,AwClHwB,ClCoBG,AkCpBF,C7DsBC,GyC2EG,AoBjG3B,A7DsBa,EsCjBgB,AuBLA,CpBiGC,AH5FA,AjB6GhC,AwClHgC,A7DsBA,CyC2EV,Ad7Ea,Cc6EjC,Ad7EkC,CN8FpC,ArB5FmC,C6DtBC,EvBKL,Ad0CZ,AxBzBmB,CsCjBlC,Ad0CyB,CxBzBG,GAAW,CEV7B,AsBmCR,CHmEG,AwClHoC,CxCkH7C,AwClH8C,A7DsB/B,CEVX,AyBQuB,CAAuB,AN8FtC,AsCjEQ,ChC7BO,AN8F3B,AsCjEmD,A3D3BF,C2BF7C,AkCpBF,CxCkHa,CAAf,AwClHoD,A7DsBpD,EqB4FkB,AwClHoC,CxCkHtD,AwClHE,AFiDkB,EtCiEC,AwClHoC,AFiDE,ItCiE3D,AsCjEoB,CAAlB,CtCiEyB,IAA3B,EAAiC,IAAjC,EAAuC,IAAvC,EAA6C,cAA7C,EAA2D;ApB5F7D,E7B/BE,AgF+BA,A7DXA,AGJA,AiB4BA,AqDhCA,A3DGC,ApBXD,Ae4BA,CKxCA,CiCuBG,AjB6GD,A0CpHC,A5CcD,CmBTA,AyBPA,C7DgBE,AyBSA,AH0BC,AqC/CD,A5ENE,CAAC,CbJP,AiD4HQ,AdzGA,CnCnBR,A+CsBO,CjBAG,AyBSA,A1C3BA,CqDWD,AuBLA,AEFA,A/DwBA,CWYT,AJzBY,APaF,C2BDG,AhBab,AXZS,CAAT,C6DtBa,C3DYG,AyBSA,AkCrBF,C7DsBC,C5BhCf,AmCmBQ,CLGW,A9BtBnB,AyFUiB,ClCqBG,ApBZA,AtBfA,Ae4BF,C2BDG,A1C3BA,C0BwCrB,A1BxCoB,C0BwCpB,A1BxCA,Ae4BqB,CqB4FG,CrB5FT,CEVW,AyBSV,CzBTW,AyBUrB,AN4FqB,CwClHD,A7DsBA,C6DtBC,C1CYpB,CEsGoB,AFtGP,AnBUL,CWYf,CTtBI,A2DZA,C7DsB4B,CWYhC,AkDlCiC,CAAC,A1CYhC,CnBUiC,C5BhCnC,EyFUsC,A7DsBA,C2BAlB,AvDhCpB,C4BgCgC,G2BCvB,AhBWC,AXZiC,C2BCjC,E3BDK,C6DtBgC,CAAC,CzFV5B,AuC4CpB,AXZiD,EWYjC,AUgFW,CwClHvB,A7DsBJ,C5BhCA,AiD4H0C,CM3FtB,AN2FuB,AwClHW,ClCuBjC,AvDjCK,CuDiCN,AkCvBoC,ClCuB9C,AkCvBN,CxCkHsC,CwClHiB,ClCuBjC,AN2FuB,GjD5HjD,CiD4H0C,CjD5HR,CiD4HqB,IM3FnB,AN2FM,CM3FL,CAAD,AN2FyB,CM3FpD,GN2FiC,CM3FC,AN2FhB,CAAzB,aM3FO,GACC,SAAS,CAAC,CAAD,CAAT,GAAe,QAAQ,CAAC,CAAD,CAFb,CADJ,CAAZ;EtBdJ,ApCYA,AgBxBA,Ae4BA,EyC0EE,ArE1GA,AuC4CA,AaaC,AHmED,AsClEA,AvEvCA,A+BGA,EjBAE,AyBcA,AWrBA,AyBPA,A9FoBA,AgBxBA,EwDsGE,ArE1GE,AiD4HA,AwClHF,ClDkCC,AgDcA,AvEvCD,A+BGC,AnBUA,C2BIG,ApBjBA,AnBAH,AnBSC,CqEbC,AyBPA,CtBkGH,CdtEO,AgCsBF,CAAC,CzDpCC,AoCPA,ArEaA,CiCNC,AyBcE,AWrBF,A3B6BZ,CvC5Ce,AuF0DF,AvEvCb,C2EXE,A9EJY,Ae4BhB,CsCjBiB,A3B6BA,A1ChBA,C0DQG,AvDpCA,AkEehB,AuBLc,A5FkBA,C0DQG,ApBjBA,AtBfF,CqDWC,CAAC,AjB6GE,AwClHF,EzFVI,AuC4CvB,CgBRc,AWrBQ,AjB6GE,AsClEF,A1F9BxB,CiCNI,AyBeE,AkC3Be,AFgDI,CzDpCC,AjCMA,EkDNnB,CEsGwB,AsClExB,AxCpCa,EsBoFd,AH3FF,AqB2C2B,CzDpC3B,CuCoFkB,ArE1GF,AkEea,AqB2CA,ElBgD3B,AH3F6B,CAA/B,AqB2CgC,ClBgDV,ArE1Ga,CkEeD,CG2FhC,AdrEc,C1CjCD,AkCkBjB,CsBoF4B,AxDtGE,CbJY,CqE0GtC,AdpEG,CAAC,CcoEwB,AoBhGb,AFgDwB,CtCkEnB,AsClEoB,ClBgDxC,AoBhGyB,CAAV,A5ENrB,CoCyHM,CwCnH4B,AFgDhC,ClBgDsC,AoBhGnB,CzFVkB,AuF0Da,CvF1DG,AiD6HjD,AwCnH+B,AFgDgB,ChCpBjC,AkC5BC,ClC4BA,AkC5Bf,ClC4Bc,CAAV,AvDtC6B,AuF0DkB,CvF1DvD,CuF0DA,ChCpBwB,CgCoBmC,EAAE,CAA7D,EAAgE,ClBgDhE,EAAwD,ApBmBpD,CMvF8B,CAAC,ANuFtB,CMvFqB,CAA3B,IAAkC,UNuFrC,IMvFG,ANuF0B,GMtFzB,ENsF8B,OMtFrB,CAAC,CAAD,CAAT,GAAe,INqFC,GAEpB,CMvF2B,CAAC,CAAD,CAFb,ANuFlB,CMxFc,CAAZ;A0BCN,AjChCM,ApB4BL,E0DjBC,AJaA,E3CgBE,AUkFA,A0CtHC,A3EUc,AnBUf,AkDNA,EsBoFE,AvCpFA,AyBmBA,AgCiBA,ErB3CE,AjB+GE,AqC/GR,AGLM,AtDSG,CIyBF,A+C7BP,AnDEQ,AabM,ADkBP,CmCMP,CpDNS,AoDMT,AK8BS,A1F9BA,CqEbC,AlBXN,COqCO,APrCO,ClBkBN,A2DZA,CFgDC,ApDvCE,CoDuCD,A1F9BZ,C4FlBa,ClC+BC,AhBGd,A+C7BF,CAAA,AC2CiB,CzDpCC,AoDMlB,CpDNmB,ASsBA,A2ChBnB,C3CgBoB,AkDlCd,CvBKe,CAAC,A3B6BA,AUkFE,EnBxGpB,CkBlBA,CuCsDsB,CL9B1B,AK8B2B,AvCtDK,COqCrB,AW1BD,A3B6BkB,AQtBrB,CQmBsB,ARnBT,CmCMpB,CIbA,AC2CS,ChDduB,CgBHC,AW1BA,AqB2CA,ChCjBC,AW1B5B,AoBAN,CC2CmC,CrB3CC,C3B6BC,CgDcC,ExCpCpC,EQmB2B,A2Bb7B,E3BaW,AhBGS,CAAlB,CgBH4C,A+B1B9C,CC2C+C,CAAC,ChCjBrC,EAAwC,CgCiB/C,EhCjBO,AgCiB2C,ChCjBlD,AgCiBmD,IAAI,EAAvD,EAA2D,EAAE,CAA7D,EAAgE;A3DxBtE,EWWG,AoDpCA,A9FoBA,AgBzBD,AmCCA,CTqCA,AoDzCA,CpCyCG,AvD1CD,AiD8HyB,AqC9GzB,AJaA,AlEXkD,A+BKlD,EsBoFE,AvCpFA,AjBnBA,CAAC,CbJC,AuF2DA,CvCtDC,ADkBA,CmBPC,A/BIE,AtBhBF,CiBmBC,AwDPA,AJaA,AlEX0C,CcKzC,EjBnBV,CqDYa,AlDEmD,CsEFlD,AJaA,AK8BA,A1EvDA,AmCCA,ChDLZ,AuF2Da,CAAC,CvF3DC,C8BuBb,AdLF,CkDFM,CqB2CO,ApDvCO,CLGD,AoDMZ,ChBba,AgBaA,AK8BA,CAAP,EAAU,CD3CvB,AC2Ca,CAAD,CL9BZ,AK8BI,AvCtDC,ADkBA,CsBoFsB,AtBpFT,CsBoFU,CvCpF1B,EkBlB6B,QAA1B,GACH,CkBUkB,CG2FwB,AH3FT,AnBOnC,EsBoF2B,AH3FrB,AlBVJ,CqBqGA,GAAgD,EAAhD,UrBrGA;AmBiFA,E5BxCJ,AaUC,AkCxCA,AKND,ATmBC,A7E5BD,A2CIY,CsCSZ,AJaA,CjCkGkD,AjC1GhD,AHfA,AkCmBA,EsBoFE,AvCpFA,A9BvBA,AuF2DC,EEjDC,AtDUG,CgCkEK,AlBuCyC,AFtGhD,C/CvBG,AkEgBF,CpCOC,CAAC,A2DbA,ApFTV,CAAA,ELDe,AkEgBF,CpCOT,AjBnBU,EbJI,C8BuBD,AjBnBA,EqDYT,AuBNW,C3Daf,A2DbgB,ApFTpB,CAAA,C6DesB,CAAd,CjB6GN,CjD7HyB,AiDwHgC,CjDxH/B,AiD+H1B,C5C9HF,C0CsBO,CsBoFsB,AxDvGA,AkCmBT,CoB+DhB,AEqB0B,AhE1G9B,C8DsFA,AsB7EU,CAAsB,A5ENA,CbJd,CAAkB,MKC7B,A0CsBL,E/CvBgB,CAAd,AKCJ,CoFSU,CAAJ,ApFTM,C8DqFR,AEqB0C,CoBjGC,CtB8E/C,AEmB6B,CAAzB,GAAgD,ChE1GpD,AQGgC,CsDkF5B,AEqBA,AxDvGyC,CRHzB,C8DwFpB,EtDrFE,EsDkFE,EAIJ,MAJI,EAKJ,QALI,EAMJ,MANI,EAOJ,CAPI,EAQJ,CARI,EASJ,YATI,EAUJ,kBAVI,EAWJ,YAXI,EAWQ;AhE9Fd,AeiBM,EiD+EJ,AfzCA,AkCxCA,AJaA,ArFFA,AgBxBC,AmCAkC,CnCFnC,C0CwCE,ANqFA,AsCpEC,AlF1DD,E8DiGI,AESF,AvCpFA,AKHG,AYE0B,ClDM5B,CwE+EC,AhE1GA,CQGC,AKeO,CgDHN,AuBNA,AtFRA,CkEyGC,AvCpFA,AyBmBA,ApDxCA,AN0BA,CiCLC,AjCKA,CwE+EN,AxDvGO,CsD8FG,AsBxFF,A5ENA,C0CsCV,A1DdW,AqBTT,CrBSJ,AqBTqB,A8BfjB,CmB8Fa,A9DjGf,AQGa,AKeX,A8BhBG,CnDyBS,CAAC,AqBTO,CfjB1B,AeiBM,CfjBe,AUEZ,ChBwBa,AqBTK,CfjB3B,AUEuB,GhBwBrB,CiCLI,CjCKsB,CsEsEG,AtEtEF,CiCLC,CjCK5B,CsEsEgC,CtEtED,OiCL3B,IqC2EyB,GAAkB,CAAC,GAAD,EAAM,GAAN,CAA/C;AhE9FF,A0B2BM,E0BYH,AjC3BD,AsEJA,ALgDC,ArExCD,A8BfI,CO7BJ,AgC6EA,CpDhCK,A9BnBH,AR2BA,AgBxBA,CsBCA,CkCsGE,AvCpFA,A9BxBA,AkBoBE,CIJN,AJIO,CmDwFD,AH3FC,A5CDP,AzBaM,AkDNF,CmBVE,ArCkBQ,C7B/BN,AyFUO,AvEUL,CmDwFD,AvCpFA,A8DZT,A1EQW,C0ERX,A/FiBU,CwE+EN,AhE1GO,AR2BA,CAAD,AqBTI,ClBpBD,AkEiBA,ArEYP,AqBTN,CblBc,AQGA,CSWd,AOeI,CPfJ,AOeuB,ChB1BN,CiBmBb,A9BxBc,AH6BA,CG7BC,A4FYnB,C5FZI,A4FYJ,C9DYqB,ADOjB,C7B/BkB,AH6BA,CAAC,AgCEK,CxB7Bd,AR2BQ,CAApB,EAAyB,EgBxBE,CiBmBzB,AzBtBU,CAAU,CQGQ,ERHlB,CiBcd,AjBdE,GiBcF,IsEJA,GAAA,GtEIoB,KTXY,CAAa,C+EOtB,GtEIvB,CTXE,CSW4B,KsEJ9B,EAAiC;EzBuFjC,AZtDA,AUvBA,AvCZA,A6DoDA,ApDxCC,AFLD,AJeA,AhB1BC,AKeD,A8BhB+B,CbD/B,CkCyGG,A/C5FD,A2B+GA,A2CnHA,E9DYE,AGRJ,ApCaI,AgCEA,AkBRD,CoB2EE,AlClFL,AJeK,C7B/BC,AsBgBE,A2B+GA,A2ClHJ,CzDQG,AjBDA,C+CCP,ACJQ,AuBPE,A5DqBF,AXXA,CiD8EC,ArC1EA,AmCHT,CE6EU,AnElGA,CH6BC,AqBTA,CIJG,A2B+GA,A/B3GP,CiD8EM,AzCzFb,AGsBa,CsCmER,AzCzFL,AOOA,AJec,AmB3BgB,ChDJf,AsBgBE,A2BgHb,AhBhHJ,AJea,AXXE,CiD8EC,ArC1EZ,AjCKA,AgCEJ,AXXO,CuEVY,CtBwFD,AF7ElB,AwBXoB,AzCN8B,ClBoB/B,AmCHnB,ACJmB,AhDGA,C+B4GV,A/B5GW,CiD8EC,AsBxFX,CAAc,AzCRxB,CtBOA,ARWuB,CQXvB,ARWO,CiD8EkB,AF7EzB,A3CL2B,C6CkFD,ArC1EtB,CZJuB,C+CC3B,A3CL8B,AJI9B,GlBpBU,AiDgIN,CkB9BJ,AlB8BqB,CvBvHrB,CyCyFkC,AsBxFxB,AxDMV,CkCkFmC,AnElGA,AyFS3B,C/DAR,COOA,CkCkFsC,AF7E/B,A3CLoB,CtBhBY,CmEkGvC,AlB8BI,A2CnHA,CtEGuC,C6CkFD,CnElGC,AiEqB3C,A3CLE,C6CkF0C,AyBpFxC,CzBoFJ,AF7Ec,CvCZJ,AuBwHN,CkB/B2C,CnElGC,C4FcvC,A3DET,EgCKA,AvCZA,EuCYoB,AvCZL,QuBwHI,C2CnHf,E5FdE,AiDiIgB,A2CpHlB,E5Fb8D,CiDgI9D,C2CjHA,G3CmHA,O2CrHA,IAGA,CAAC,G3CkHc,C2ClHd,E3CkHiB,CAHpB,a2C/GG,EAAW,KAAK,aAAL,EAAX,EAAiC,UAAjC,CAJH,EAKE;A1EIL,A8BhBA,EqBwGE,AlDxFD,EgD8EE,ArC1EC,AmCHD,A3CLA,AIPA,AuB0HA,Ad9GA,A9BpBA,A4BeA,ApCaC,E+FZC,EzBiFI,AF7EN,AvCZI,AuB0HA,A5ClIA,A4BeA,CAAC,CjChBC,AkEgBc,A5CAd,AmELA,CtBuFG,AhD9EX,AGJS,CHIT,CyEHW,AvFhBA,C8DiGG,AyBjFV,A3DDQ,CXAV,CAAY,AmELA,AtDUA,CAAC,CgC6EG,AzCzFF,CyCyFG,AsBvFF,CtBuFC,CAAhB,AhD9EF,AGJmB,AIPA,ASYjB,C8BAA,A9CDF,AgBCoB,CsDVC,CxCwHC,AwCxHA,ApFVhB,CAAiB,A4BerB,CPPsB,ASYJ,CTZK,AuB0HA,AhBnHA,KgBmHvB,AwCxHe,EnEKH,AjBfR,CqBQa,ArBRjB,CiBeA,CIPA,ArBRiC,EoFUE,EtESrC,GAAA,AgBCoB,EAAW,GAAX,EAAgB,GhBDhB,GsETiB,CAAU,MtES/C,AsETQ,EtESsB,GgBCM,CAAU,KAA1B,EAAiC,YAAjC,CAAlB;AjBCJ,A8BhBA,ElBmBG,AmCHA,A1BwBD,AJxBC,AtCQA,AgCCD,AhB1BA,CiB/BA,AmC8CA,CE+EE,AhD9EA,AGJA,AsECC,A7CKD,C6CZA,CvFTE,A4BeA,AJcA,AhB1BA,CgB0BC,AhB1BA,EkCkBE,C/CtBC,AkEeoC,ArDXpC,CMgBC,AGJA,AsECA,AvFhBA,CkC4CT,AVfU,CUeV,AVfW,ChB1BX,CMgBS,CUUK,AhB1BA,CSYZ,AOcG,CAAL,C7B9BiB,CAAC,A6B8BA,CqCfqC,CCmFnC,ADnFoC,A3B8BxD,C2B9BuD,A3B8BvD,C2B9BQ,A7DdJ,C8DiGmB,AnElGN,AKCM,CLDf,GAAmB,AmBoBlB,AdnBkB,C0CqBpB,CAAa,C5BFlB,M4BEA,E1CrBqB,CkC4CvB,AlC5CuC,E8DiGE,CACrC,AnEnGI,AuC6CR,MlC5CuB,EAA2B,GAA3B,CkC4CvB,ClC5CuD,E8DiGd,EAErC,I9DnGmB,CAAnB,C8DiGqC,EAGrC,GAHqC,EAIrC,MAJqC,EAKrC,QALqC,EAMrC,MANqC,EAOrC,CAPqC,EAQrC,CARqC,EASrC,YATqC,EAUrC,kBAVqC,EAWrC,QAXqC,CAAvC;EEUF,AvClFA,AmCHA,A9CFC,AGJA,A4DaD,C/DXA,AGNA,C6CkGE,A5BjEA,AbrCA,AuB2HA,A5ClIC,AWkBD,AiBHC,AJcD,AhB1BA,CgB0BC,CwC6EC,AuB1FA,A7CIyB,EsBsFvB,AH5FC,AxCPD,AuB2HA,ApBrGC,CbXD,AaWE,CsCgFA,AnE9GA,AyFUA,APmBR,AlEVO,CuB0BE,A2ChBT,Cb8EU,ArE3GA,A6B8BC,CsCgFA,AyB7FA,CvB0FP,AoBjGQ,C5DoBN,CsCgFJ,A5BjEY,A1BzCA,CbJC,CqE2GC,A3CnGA,AkESA,A5EEd,AaWgB,CAAhB,AhB1Be,CwDuGC,AoBjGV,APmBR,CAAA,AlEVkB,CUXE,AuB2HA,AwCzHA,EpBiGE,CpBwBC,CoBxBvB,ApBwBE,C2ClHS,CvB0Fe,ApBwBA,C2ClHtB,E/EbyB,C0ByC3B,A2ChBF,ClF7BU,CAAsB,AaIA,CqEyBhC,GlF7BU,CAAF,E0BQY,CAAW,KwDqB/B,CxDrBM,IAAmC,GbJT,CAAa,KAA3C,CaIiD,IAAI,mBAAA,CAAW,KAAhE,EAAuE;EyCuGxE,AhDzFD,AGJA,AiB4BC,AaWD,AkCxCA,AKPA,AxDYA,AtCOA,AgCEC,AhB1BA,C0BuCD,A1BzCA,CwDyGE,AuB1FC,AVYD,EhBdG,AxCPD,AuB2HA,AjChHA,EhBnBG,AsFgBP,AvCKI,C/CzBE,AsFoBN,AKPA,AxDYO,AtCOA,AgBxBA,CoC+HC,A0C1HR,CjEDS,AwDqBA,CxDrBC,A0BgDV,AqC9CU,CrC8CV,AvD5BA,AgBxBW,CAAC,CbJC,AiDmIA,CiCtGC,AlEVA,CHfC,CyEYf,AGNgB,AtDWA,AnBFA,CsEHhB,AKPA,A5CYe,C4CZf,A3ESkB,CyERC,A5ENZ,CuCoDP,CAAA,A8B3BS,ArEzBY,CqEyBC,EjCsGd,AqCnHR,AKPA,AxDYO,Cc8GkB,CvB3HrB,AwDqBF,CxDrByB,A4DQ3B,AGN2B,AED3B,AxDYwB,CsDXI,CrC8C5B,GAAA,AqC9C2B,CxCyHnB,AwCzHW,IEDZ,CFC+B,CxCyHC,AqCnHvC,CKPA,EAAU,CFCA,CrC8CV,AH2E4C,CvB3HjB,CAAU,MAAjC,EAAyC,KAAK,EuB2H9C,EAA2D,mBvB3H3D;A7BqBL,AgDqBK,ENHJ,AqD7BC,AVYA,CUvBD,AVqBA,CbgFE,A3CnGC,A0BgDD,AkCxCA,AKPA,AxDYA,A9BrBA,A4BgBA,ApBZA,EGeE,EiCgHE,A0C1HE,A1DOF,AcIY,CuCJX,AzCiCO,C7CjDN,AyFUC,CrC8CA,CH2EG,A0C1HA,A1DOF,CEKC,A9BrBA,AWmBA,E2EVI,A3EUF,AiBHA,AYiCT,COOU,AkCxCZ,AnDKY,A9BrBA,AwCiDO,AhC7CP,GbJG,A2FSF,A9ELE,CbJC,AiCgBA,CEKhB,EiBmCA,GpDxDM,A6CiDJ,C7CjDqB,CiDmIG,AJlFK,CwB0DN,CAAC,CpBwBG,AhBnH7B,ApBZ2B,CbJrB,EAAwB,AaIA,CbJxB,AiDmIuB,CJlF3B,EAAuC,ExCjD7B,CAAgB,IsFSf,CtBkG6B,CsBlGnB,CtBkGE,CAAzB,CsBlGa,CAAb,CtBkGgD,EAAhD,ChE3GA,AQI8B,CgC6C5B,AhC7CyC,CoC+Hd,CJlF8B,CIkFf,CAAC,CAAD,ApC/H5C,EoC+HgD,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAf,CAAzB;A9C/HF,AN0BN,EsEgFE,AfrDC,AkCxCA,AMED,AVYA,ArDDA,AgBoBA,AhC7CC,CuCkDD,AkCxCA,CjB6FE,AsBlGA,AxDYA,AnBLgB,AiBChB,CjBDA,CkDFE,ArCeA,AgBoBA,ChBpBC,CoBsGC,AwCzHC,A1CUD,CoByFC,AwBpGA,AxFNO,C0B0BN,EqCfE,AjBqHE,C0C1HV,EzBKW,ArCeA,C8DpBC,AxDYA,AhClBV,A0B0BU,AgBoBd,AE9BqE,CZEtD,AhClBO,A0B0BT,AkBRP,ClBQN,AgBoBgB,E8CxCd,AxFNE,EAAqB,EgCkBvB,CAAqB,C+BPC,CC+FxB,AD/FyB,AjBqHE,EoBxBA,CAAC,ApByBpB,CFjH6D,EmBLjE,AnBKA,CEiHI,YoBzBoC,AlCtF1C,EkCsFyB,CAAzB,CpByBM,EoBzB0C,ApByBjC,EoBzBf,cpByBM,IAA6B,KAAK,iBADpC;AkBrBP,AcvED,EZqEG,AjBlDD,AkCxCA,AnDIC,AhClBD,CgCeA,CTXE,AiEEA,AtFVA,AWqBA,A6B6BA,EqBnCE,A/DXA,EuBIE,AuB6HA,A5CrIA,A0CsBF,C4CZG,C3FVC,CGIC,A0C8CA,CqBnCC,A/DXA,A4CkBF,C1CtBG,CLAC,CkEeC,AnBOF,C4CZT,CAAa,CjEFC,CvBJZ,A0C8Ca,AE5BF,C5ClBG,A0C+Cb,AE7BW,C4CZd,CjEFkB,C1BRC,AGIjB,A4CkBO,C/CtBW,AiDqIA,A5CrIhB,AFIN,A4CkBoB,C1CtBG,CFIC,C8CkIhB,AJpFC,CACI,E7CnDD,GkEemB,ArBmCtB,CqBnCuB,A7Df1B,CLA2B,AKA/B,AwCmDkB,C7CnDZ,CKA2B,CLAC,C+CsBD,CmBPJ,AnBOK,CmBPhC,AxCPgB,CAAW,AuB8HR,GAAG,AJnFI,CnB3C5B,AmB2C6B,CAAD,CnB3CO,AmB2CjB,CAAc,EE7Ba,CAAC,CAAD,CAAZ,EF6Bf,AE7BgC,CF6BV,KE7BP,CEgH3B,AFhHG,CAAP,GEgH4C,QJnF5B,CADX,EAEJ,KIiFC,EJnFG,CAEI,KAFJ,EAEW,UAAU,CAAC,CAAD,CAAV,CAAc,OAAd,CAAsB,kBAAtB,CAFX,CAAP;AsB8DJ,AhCzFC,EoBqBC,AyBXA,AWtBC,A9DmBD,AgBuBC,AhChDD,C8EEA,A9C0CA,CqBjCG,A/DXD,AgDsHA,EzBlHE,AuB8HC,A5CtID,AwB6BA,AhBzBA,CgByBC,C4DnBC,AtCgHE,C6B1FR,A7E5BO,A0CgDA,CmCpBP,CtDxBS,ArBRA,CLAC,A0BQA,A+DEA,A5DmBA,C4DnBC,AtFNA,A0ByBA,C1BzBC,AgDsHE,EzBlHV,AGqBU,C1BzBC,A0ByBV,AsB6FY,ChDtHV,A0ByBP,AhBzBgB,CbJC,AgFgCjB,AStBM,CTsBN,A7E5BkB,A0ByBA,C4DnBC,CtFNC,CUAC,CbJC,AKAlB,CkD2CJ,AlD3CuB,AFIA,AgDsHE,CI/EzB,AJ+E0B,EhDtHA,CEJC,AFIA,GgDsHzB,EnD1He,AgFgCjB,CzBWA,AvD3CiC,AGI/B,CoDuCF,CyBXA,A7E5BmC,CAAC,CHJnB,CAAP,AKAa,CAAgB,AFIA,EAArC,CUAmB,CVAsB,AUAT,EmE4BnB,A7E5B8B,CAA3C,EEJqB,AFIyB,EEJE,AQIlD,E0CuCA,A1CvC2C,CRJpB,C2EgCvB,CzBWA,AlD3CuD,C2EgC/B,O3EhCD,CAAnB,CkD2Ce,KAAnB,EAA0B,IAA1B,EAAgC,IAAhC,EAAoC;EciEpC,AsBhGA,AJiDA,EhCjBE,AyBXA,A3EhCC,AwB6BD,AgBuBA,AhChDA,AsCsHA,CtB7FC,CHrBC,AvBJA,EoDuCE,AyBXA,AnDHC,AsB6FC,AJrGJ,CsBsFG,AxC9EC,C7B7BC,AyFUD,AFkDR,ApFxDI,CoFwDJ,A1CRS,ChBvBE,C0BcA,AVST,AE/BO,CIqGK,AJrGJ,ClBQJ,CHrBQ,AbJA,C4EMC,AtCgHE,AJrGJ,ClBQK,AkBRT,CrBbQ,AGqBf,AhBzBe,C4EMC,AFkDlB,AxCvCgB,CwCuChB,CxCvCkB,CiCWhB,CtDxBoB,C2CmGtB,A3CnGuB,A+DEf,AtCgHiB,AJrGJ,CIqGK,CI/EpB,CAAoB,GpDvCtB,CoDuCE,AJ+EJ,CI/EA,A7BnCe,AvBJC,EoDuCe,A7BnC7B,CvBJiB,A4CiBW,C5CjBV,A4CiBW,C5CjBZ,CAAjB,CUAa,CAAa,EkCiB1B,EAAqC,CAAC,GAAG,EAAzC,CwCuCJ,C1ExDE,AkCiB+C,EwCuCjD,AxCvCmD,CAA/C,EAAkD,OwCwCpD,SADF,EAEE,QAFF,EAGE,aAHF,EAIE,UAJF,EAIY;AlB4Cb,E9B9DC,AlC7CC,AwB6BA,AgBuBA,AhChDA,CRdD,C6DwBE,AxCNC,A6DyDD,ApF7DC,A8BaD,AkByGA,EI/EE,AN0FA,EjDrIG,AyFUA,AFuDD,AtDhDA,AkByGA,Ce5GC,CjBuHC,AEXA,AJrGF,CEgHG,CVxFT,AN5BU,CsB0BC,AhBEX,AY6EW,CJrGD,CmBPR,A/BQW,AFLA,EgBoHL,AsCpEN,CrBnDc,AnBOF,CQsBH,AgCsBM,AtDhDf,AkByGe,CI/EN,AgCsBT,ApCyDgB,CFWC,AEXF,CZ7EjB,AgDoBoB,ApCyDT,AJrGO,CRwBlB,AgDoBE,ApCyDmB,AJrGF,CmBPjB,Af4GS,CAAT,CFWsB,AFhHV,CAAS,EQsBZ,CAAM,ON0FE,CAAiB,GVxFpC,CQxBsC,CAAC,CRwBvC,EUwFmB,EM1FR,AN0FH,CM1F2B,GN0Fe,CM1FvC,CAAwB,AhBEhB,AQxB+B,CAAC,CAAD,CAAZ,CQsB3B,CRtB4C,CQsBnB,EhBEpC,EAA2B,CgBFhB,ARtB2B,CAAxB,CQsB6B,AN0FvC,AFhHE,EEgH6D,EM1FxD,EAAsC,IAAtC,CAAP;AckEN,AYrEA,ApCaC,Ef5BC,A8DPA,AvFhBA,AFGC,CAJD,CoD2CG,AyBZD,AdjBA,A3B+BA,AgDoBA,AN1BE,A9BkFF,EnDzHG,AyFUA,ETqBC,A/BsGA,AsCpEA,ApCyDF,AJrGC,CmBPE,A3B+BA,ApCzCA,CgDsHD,CyCzGN,CAAA,CzCyGS,Ee5GP,EciBa,CdjBC,Cf4GD,C8BnFK,A9BmFJ,CrBlGhB,A8DPA,AzCyGe,CrBlGf,AkDOoB,AYdpB,AzCyGS,CoCzDY,AN1BE,A9BmFJ,Ce5GjB,AjBuHoB,AgC9FxB,A9BmFW,CZ7EP,AY4EA,CoCxDsB,CtCqEhB,CVzFkB,EgDoBxB,CzDzCF,AkDOE,AYdF,C9DOA,CkDO+B,CYd/B,ErD4BE,MUyFqB,GnB9GvB,AmB8G0B,C2CrH1B,E9DOA,UAAc,KmB8GN,EnB9GR,EAAuB,AmB8GyB,UnB9GhD,EAAmC,ImB6G7B,EnB7GN,EAAyC;AmDiB3C,ApCaA,A3BjCM,AUcA,EsCpBH,A5CED,AiB6BC,AaWD,A8B3BA,ArDDA,AhBzBA,CqDTA,A3BiDA,CTnBE,A9BxBC,A0BOD,A+DGC,AGOD,ALgDA,ApF7DA,AagBA,AiBHA,AkByGA,E6B3FE,A/BuGC,ApB1GD,CPZJ,AWCK,AJWA,CCJG,ARRR,AiEiDM,ApF7DJ,AgDsHI,CoCzDC,AvE7CD,AHjBC,AKiBO,AUcA,CsDLd,AlETO,AaQC,AsB8FA,CzBnHC,AkEUA,AVYT,C9B2BA,AwCvCE,ALgDQ,CnCTV,AlCpCI,AiCsGO,CjCtGQ,CYIJ,ADIF,AXRT,CWQU,CPZd,AOYa,AXRS,CYIJ,ARRlB,AOYA,AXRI,CiCsGa,C+B7FjB,AhETyB,AiCsGP,C6B3FC,AtDxBA,AwDsBnB,AKoCmB,A1E9DnB,AKiBI,AiCsGa,CrBlGC,AsBgClB,AmCSoB,ApCyDT,CClEX,AmCSmB,ArE7CO,AiCsGL,C6B3FC,AOkCZ,ApCyDC,CzBnHY,AyBmHrB,E7B1GF,AiEiDyB,CAAvB,A3D/BE,CoDHuB,A7E3BzB,AyB8BgC,CNlBlC,EMkBI,CwBsBJ,A8B3BA,ClETE,AYcqC,EwBsBvC,A8B3BA,ClETkC,AYc9B,EAAwC,CEV1B,CdJhB,AYcE,CEVyB,ARR7B,CMkBgD,CF3BzB,CAAW,AE2B9B,EAAgD,CEVlC,AsBgClB,A8B3BA,CpDLE,EJjBA,CE2BE,EAAuD,CoDHrC,EpDGlB,CoDHoD,CpDGQ,GAA5D,CoDHkB,CpDG6C,CoDH/D;AnE3BL,EbHE,AkEeD,A/CKA,AoB0BA,AbvCC,AkEUA,A1EGD,AUcA,C5BnDA,A0BcA,AkEkBA,C9DSE,AyBkBA,AjC1BA,A8BwCA,AH8EC,AiCzGD,A/E1Bc,AgDsHd,E6B1FE,A/CdA,EHOI,AsBgCA,ADkEJ,AJtGA,C7BAG,AUcA,CoDHH,A/CdI,AfGA,AiCsGF,CIhFG,ApCtBT,A+DSS,C/DTT,CDAW,AiCsGF,ClBzGG,AfGA,CkCoCG,AnBvCF,CHOG,AyBkBd,A2BbY,CtDKC,CwBsBG,AlCpCF,AUcA,CEVG,AZJF,AiCsGF,CClEb,ADkEc,ChCtGhB,AgCsGe,ChCtGf,ADAoB,AiCsGX,CrBlGU,AoDKV,AjDZD,AfGI,AiCsGO,C+B7FG,AhETtB,AiCsGS,CADP,AvBvFqB,CAAC,EsDLtB,CjDZyB,EdG3B,CSc8B,ETd9B,AScuB,CoDHnB,CpDG8B,CoDHZ,EpDGC,EAAgB,CEVpB,EAAY,AFUR,ETdvB,ASc4C,CKjBjB,CAAU,ALiBd,EEVJ,AFU6B,CEV9C,CkDOE,ApDGmB,EoDHgB,A/CdnC,ALiBgD,CoDHhD,C/CdyC,C+CcH,EpDGnB,EAAoC,CoDHZ,EpDGxB,EAAyC,CoDH5D,EAAkD,ApDG/B,CAAR,CAAf,GoDH2D,MAAvD,EAA+D,SAA/D;AnE1BN,AKgBC,AUcA,E2BQE,A7BlCD,AkEUA,AVWC,ArDFD,C0BUA,A2BVA,CpDHE,AkDOC,A7DXD,AiCoCA,AqC/CA,AFuDA,ApF9D8D,AakB9D,AmCsGA,C6B9FA,C1DbO,AOYL,AkBPD,C5ClBD,A0ByBG,CCHG,AyDwCF,AtD/CA,AkByGA,CClEC,ApCpCD,CAAC,AmCsGC,C6B3FC,AStBA,C5DkBC,C0DqCC,A1DrCA,AsB+FA,GtB/FG,CAAT,C4DlBH,A5DkBF,CCHmB,AqBkGF,CtB/FC,AsB+FA,CClEhB,ADkEe,CrBlGK,AsBgCF,ADkET,CAAU,CoC1Df,ApC0DK,CAAT,CrBlGoB,CdJpB,CAAuB,CoCoCvB,AmCQyB,CnCPvB,AmCOF,EAA4B,IvE5CG,CAAC,GoCqCpB,IAAV,ApCrCF,EoCqCkB,ApCrCuB,CoCqCvC,CtBjCkB,CsBiCC,CtBjCc,CdJU,CoCqC3C,ApCrC4C,EoCqCtB,EtBjCJ,CAApB,edJA;AnBSE,AqBPN,AUcA,E2BQE,AvD5CF,AiEsBE,AwBZC,APqBD,A/E5BC,CsFpBD,C3D0CE,AmB8GA,ApB3GA,AsB8FA,CtB9FC,CmDIC,A7DZK,AGL2B,A8B2C9B,AmCOF,CAAC,CzDxCG,AmB8GF,AhBrHA,AJUC,AsB+FH,CnD3HN,AiDuIS,ApD1GO,AgCDN,CoCNR,AboCU,AmCOF,ApC0DF,CcrGN,A3CPyC,COa9B,CsB+FF,C7B5G2B,A8B2CtB,CpD1DhB,AsBe+C,AOavC,GCHY,AsBiCA,AvB9BA,C0DqCD,A1FpCb,AgCDF,AsB+Fa,CcrGf,AsB2CkB,A1FpCO,AsD8FT,CrBlGK,AmCHrB,AeUmB,AOiCF,ApC0DF,CCjEO,AmCOlB,ApC0DK,CCjEc,AvD7BnB,AsD8Fe,C6B3FG,A7B2Fb,CrBlGY,AmB8Gf,ApD1GwB,AsD6F5B,CcpGF,AdyE+D,CA6B7D,EctGF,AeU2B,A/BuGA,EG7ET,C9B3C2B,CAAc,C2BwH3B,CpD1G5B,EuD6BiC,AvD7BG,EoEPlC,A3CP8B,CAAD,C2COnC,EAAU,CeUN,A1DjBmE,EQUlD,EAAc,CmCHnC,ChBiHE,CgBjHgB,ChBiHgC,EnB9G7B,CAAnB,AsBiCmC,CAAU,KapC/C,CboCM,CapCsB,CboC2B;ApDxNzD,AGkKC,A8EsCD,CjFxMA,CAAqB,AsFgLnB,AGNA,AEDA,A9FmBA,AgCDC,ECFC,AmCJA,AeUC,A1DlBD,ANMA,A+BAA,E5BAE,A8BmHA,AsCtEA,A1FpCE,C0FoCD,CzDvCH,AmCJA,AboCM,AkCzCR,ArDCM,CqDDN,AKPA,A3EUM,A+BAC,CEoHD,A0C9HN,AJuDQ,AvE7CD,CGAE,CtBSG,EsBTR,CAAS,AiCsCE,AvD7BA,CuD6BC,EH8EF,AqCvHd,AzFYkB,CoD2GH,AqCvHf,AKPA,AJuDiB,A1FpCE,CuD6BX,AuChDR,AJuDkB,CvFhOpB,AoDyNuB,AmCOJ,CvFhOnB,AiEqLI,AsB2CE,EzDvCF,CjCGF,CiCHiB,C6DhBjB,A3EUE,CAAuB,E2EVzB,A5CUO,CAAa,C5BAP,CAAc,CmEH3B,CrCuH+B,CnB9GJ,AmB8GK,AjCpHC,CcML,AmB8GG,AqCvH/B,AtEGkC,CiCoHpB,C9BpHV,A8BoHE,C0C9HE,A3EUN,EAAqC,CiCqHjC,C0C/HN,A5CUE,E4CVU,CLOI,AtEG2B,CAAC,GiCqH9B,CAAC,OqCxHf,EAA4B,ExDS1B,CdNA,CcMsD,GmB+GzB,CAAC,CAAD,CAAjB,CnB/GZ,AmB8GI,IAEA,QAAQ,CAAC,gBAAgB,CAAC,CAAD,CAAjB,CAFR,IAGA,QAAQ,CAAC,gBAAgB,CAAC,CAAD,CAAjB,CAJV,EAKE;EgBrHL,A3CRA,AjBdD,AR6BA,CoETA,A3CRA,CQcE,AXRA,AmEDA,AKPA,AJuDC,ApC0DD,CoC7DA,C1FjCI,AkDV6B,EjBOjC,AmBkHI,AhB1HA,AkByGE,CmC1GD,AKPA,A9FmBE,CuD6BC,ADiEA,CoC1DD,CtC2EC,A5C5IV,A4BkBU,ApCWE,CoD+GD,A0ClIT,AtFVF,A4BkBW,AkByGE,GCjEG,AuChDF,C1CkIH,ApD/GM,CuD6BC,AvD7BA,E8FnBhB,C9FmBmB,CyFZnB,AjFjBF,AR6BsB,CuD6BC,A/C1DvB,A8C2HuB,CrBjGrB,AGRI,AkByGkB,CmC1GD,AnC0GE,CrBjGR,CGRQ,CpCWR,CAAjB,EoCXM,AkByGyB,CAAC,CAAD,CAAN,CFiBd,AEjBwB,CrBjGR,AqBiGF,CrBjGG,AmBkHN,CGlFJ,CAAqB,C/C1DvC,A8C2HwC,EmC1GA,CAAC,AjFjBzC,U4C4IW,A5C5IO,A8C2HmC,CAAC,CFiBd,AqC3HA,AnC0Ga,CmC1GnD,AjFjBF,A8C2HwB,CCjEN,CAAwC,A/C1DnC,E4C4IsB,AEjBe,ECjEE,CtBhC5D,AsBgC6D,EtBhCP,CzB1BxD,EAA+B,I+C0Db,CtBhChB,AsB+BmB,GHmFV,AEjBY,CFiBjB,AEjBJ,EFiB8D;AoBhC5D,EJpFJ,A9CHC,AGLD,AzBcA,AgCFA,CVXA,CWUE,AkDMA,AMfA,AKPA,AtFVA,AWmBA,AmCwGA,EoC1DE,A1FpCA,AgCFE,ChCEN,AgCFO,CCDL,A6DhBM,A1DQF,AkByGE,AJxGJ,CsBwFU,AiB1FP,AjFjBA,AWmBD,CoCuCI,AHkFF,AjCzHD,AaQG,AsBgGA,C6B3FD,AWtBE,EtBiGP,AlBgBS,CkBhBM,AsBjGL,C3FXD,AgFiCJ,A5B0BM,AjDvDF,A0BwBE,CyDVb,AzDUc,CuB+BC,AvB/BF,C8DjBG,A9DiBR,CwCgFN,AsBjGe,A5CSJ,EsBwFW,AjBjDL,AmCOF,CnCPG,CuChDR,A9DiBS,AsBgGA,CrBjGrB,A6DhBsB,AJuDF,ApC2DlB,C9C5HF,CyB0Be,AzB1BO,A8C4HlB,CnCzGJ,C2ETY,A3ESW,C2ETvB,AJuDyB,ClB0CvB,AjBjDa,EiBiDkB,AxChFzB,AsBiGE,CAAC,CAAD,CtBjGuB,AsBiG7B,CrBlGqB,AzB1BH,AWmBS,AaQvB,AsBiGM,CrBlGY,AdPM,AmCyG5B,EtBjGiC,EsBiGlB,C9C5HG,CAAU,AWmBhC,AaQyC,CAAC,CbRF,CXnBlB,C2EgCf,AOiCa,AlFjEpB,CkFiE4C,CPjCb,A3EhCQ,AwB2BF,CbRO,AaQI,CbRH,GmCyGb,CtBjGqB,AsBiGpB,CtBjGqB,AsBiGtB,CoC3DZ,AlFjEpB,AwB2BqD,AsBiGnD,CtBjG8C,C0DsCO,E1DtCI,AsBiGpB,ErBlGvC,CkDMO,AnDL8B,CCDiB,CkDMN,CAAzC,CnDL2D,CmDKf,AOiC/B,CAAlB,AvE9CF,CaQF,GmDK0D,ElDNxD,CqBiGqB,CAArB,C6B3FO,EAAwD,KAAK,MAA7D,CAAP;AnCqBE,EwBuDJ,AW3EC,A7DXD,AOdA,A4DUC,AjFjBA,AwB2BD,CmDLA,AMRA,AjFhBA,CyB4BE,AyDuCC,ApC4DD,ElB3GG,CAND,CHcF,AsB6BmB,ADsEb,AJ3GU,CsByFX,AjBpDC,AvB5BD,AgByBO,CIwFN,AEfE,GlB3GC,AkB2GE,EzBtHb,AmB6CI,CnB7CJ,AmB6CqB,CZlCN,CoCyFC,CxChFC,CAAV,CwCgFY,ApCzFA,CAAC,CJSC,AsBkGE,CrBnGrB,AqBmGsB,CkBlBD,A3CpGvB,AyBsHyB,CkBlBD,AvCjFP,AJnBjB,AGoBO,CgByBH,EhBzBuB,AgByBO,CZlCnB,AJSR,CwCgFY,AlBkBY,CkBlBD,AlBkBE,CtBlGD,AsBkGA,CAAN,CAAU,CrBnGR,AGRO,AJS3B,AsBkGkB,CkBlBU,AvCjFP,EDCS,CwCgFC,AxChF/B,AgByBH,AMyEoC,ENzEK,ChBzBJ,GAAlC,GwCgFY,A3CpGnB,AGoB+C,CwCgF/C,AxChFO,EHpBP,CGoBmD,AsBkGE,ClB3GnB,AkB2GoB,ClB3GV,AkB2GS,CtBlGrD,AsBkGwB,IAAoC,ElB3GjD,CHQT,CJnBF,AOWqD,CHQG,UAAtD,CqBmGqB,CAArB;AkBjBH,AxChFA,EmDMC,AzCYA,A+C3BA,AMDA,AVYA,A7E5BA,AR2BA,AgDwBA,EfzBE,AJpBA,AiEEA,A3ESA,AmC2GA,ECnEK,APNH,ChDxBC,CiCDG,AJpBA,AuBqID,A0CnID,A1DSA,ApCUA,AsDiGE,AJ3GF,C/BAA,CkEWN,AlEXO,AmC2GG,CyC5GV,AVYA,ArFDS,C0CiBT,AqD5BA,A/FWA,AgDwBU,CNPV,AbtCa,AiEEF,AxCoHE,CtDjGD,CAAC,AgDwBA,CfzBG,AJpBA,AqBU4D,CAEtE,ClDSU,CiCDG,AeyBnB,CqCvBA,CxDtBqB,AkEUrB,AVYA,C3CgBA,AqD5BA,CrD4BA,AYgFuB,CrBlGC,AoDExB,ArFDA,AsDkGI,EtDlGoB,AsDkGlB,C+BjGN,AlEXE,AnBUuB,C+FXzB,A5ECyB,CUXT,A7BqBhB,E6BrBE,AkEUF,A/FW6B,AkDX+C,CR4B5E,AYiFY,CAAC,AJ7GT,CI6GQ,CZjFZ,AYiFM,CnC5G2B,AmC4GjB,CwCrHd,A3ESgC,AmC4G5B,EwCrH+B,AToBrC,E/BiGqB,EyC7GrB,E9DUE,ASkBQ,AvB3BR,EAA0C,IuB2B5C,CvB3BgD,CuB2BhC,AvB3BiC,CmC4Gf,CAAC,CAAD,CAA9B,IAAqC,anC5GvC,GmC2GqB,CAArB;AkBhBJ,AxChFA,AhBzBM,IiBwBF,ASkBA,AaaG,AwCzCH,AVYA,AKmCA,A1FpCA,AsDmGA,CC5EE,CAOE,AHkFD,A0CnID,C9FmBC,CiCDH,A8DVI,AVYE,AjDXF,ApCUA,AsDmGE,CZlFD,A1CjBF,AgBzBS,CuCgDV,AvDvBF,AsDmGQ,CCrEC,AwCzCF,ADRA,AJuDA,CAAC,CLnCG,ArFDF,AsDmGE,CyC9GD,CxCkCR,CbNF,AaKA,A8BrBc,AKmCF,GhDnBG,CqD5BL,A/EdR,C+EcQ,AVYS,AKmCF,E1E7DM,AsC4HF,CrBpGrB,AqBoGsB,CZlFtB,AYkFuB,CrBpGR,EoDEf,AKmCA,CIvDE,CCQQ,ADRgB,AJuDA,CK/CV,AzC8Ga,CAAC,CAAD,CrBpG7B,A6DlB0B,AxCsHH,CAAU,CrBpGR,AqBoGF,CyC9Gb,CAAY,EzC8GgB,EyC9G5B,C9DUV,A8DVsB,IAAZ,CAAV,KzC8GmD,CAAC,CAAD,CAA7B,IAAoC,UwCtHhC,EAAoB,IAApB,AxCsHL,CAArB,CwCtHoD,KAAK,QAA/B,CAAxB,EAAkE,GAAlE;A/D0BA,E2BQJ,AkCjCA,A5C0CA,AhChDA,EiBwBE,ASkBA,AbvCA,A0BqDA,AHiFC,A0CnIA,AToBD,AlEZA,AmC8GA,CwCxHA,CJyDE,A1FrCQ,CgDwBP,CfxBH,AJrBI,AOYA,AkB6GE,AJ7GJ,CR2BG,AacA,ApC1CD,AHdC,Ae+BO,C2D8BN,AvE/CD,AHdC,AsC4HE,CwCtHD,AToBA,ArFFQ,AgDwBR,C4C1CT,AxDSU,AYiCA,CnB7CC,A+DGX,A5FkBmB,AsDoGN,AJ7GJ,CrBZG,A7BqBD,AkDTD,CwC8CG,AtD9CA,AYiCA,AjBjBT,CsDLU,AtDKO,CmBhBR,CR2BX,A1B1CK,AkCeE,CdAH,CpBfY,AkCeF,CR2BG,AacjB,CbdkB,AacA,AqClDpB,A1CSkB,AnBgBd,C6DzBJ,AtCsHuB,CrBpGrB,ASkBoB,AbvChB,AwDuBG,A/BmGL,AvB9FuB,C2BQ3B,A2BbuB,AnCXF,CjBSJ,AyBejB,AgCsBQ,A1CbgB,AM6ElB,CnC/GJ,A6BkCuB,COQvB,ApC1CuB,AHdlB,C0B0CoB,CbvCC,AwDuBA,ArE1BA,CuCwDC,A8B9BA,AKmCA,A1E7DA,CuCwD3B,AmCKE,ApCgEQ,CN7EC,AM6EA,CrBrGX,AyDqC8B,ApCgEpB,CItFZ,A7BpCiC,AwDuBxB,A/BmGH,CrBrGqB,AyBe3B,AhBGsB,AbvCY,AwDuBhC,AlEZ+B,A6BkCC,AM6ElB,AJ9GgB,C/BDE,A6BkClC,AM6EM,AJ9G2B,EFiCI,AhChD9B,C0B0C+B,AMMA,ChChDC,AsC6HlB,CtC7HmB,CkCepC,CjBSF,AewBwC,C4C1C1C,A5C0CA,AEjCyC,CR2BrB,AQ3BsB,CR2BxC,AMM2C,CUT7C,AkCjCA,AzEQE,C6BkC6C,AEjCF,CrBZjB,AVWmB,A6BkC/C,AhChDO,C0CuCP,A1CvCA,AkCeI,CFiC8C,CEjCD,CI8Gf,CnC/GiB,AmC+GhB,AJ9GgB,CrBZG,AVWF,AmC+GlB,AJ9G9B,CI8GA,CsCvHmB,A1CS+B,GQwBzC,AJsF4B,OsCvHzC,E/DHsD,A+DGrB,ClCiCjC,A7BpCkE,E6BoC3C,G7BpCrB,CyByHqB,CzBzHkD,AyByHvE,CAvC6D,CnCvE7D,AmCkHA;A8BzFJ,ApEtCC,AKiBK,EIPJ,AiBgCC,AXXD,CWQA,CTfE,AyBeA,AkCjCA,AGOA,A/CmCA,AMgFA,EzB7HE,AiEGA,A1DSC,ApCQiB,CyBbtB,AWCW,CHaT,ARdF,AsEGM,ALgDA,A1CbA,C+CnCC,ALgDA,ArE5CO,AUcP,CmBhBD,CQwBG,A7BpCA,A+DGA,AEAA,A9FiBkB,C0DgBjB,A7BpCA,A+DGR,AFuDQ,ChCtBC,AtBxBA,ApCQkB,C+FVjB,ELgDE,A1FtCkB,AqBN5B,A6BFQ,CzBLZ,AqEJI,AJuDW,AtD9CA,ApCQkB,AqBNX,CqCsBN,AjC7BhB,AqEJgB,A9FiBgB,AqBN5B,CQdA,AmB6Ca,AEjCF,CFiCG,A3B/BO,AUcP,C+DzBd,A1DSe,AYiCF,AjBjBE,C2D8BT,AtD9CU,AYiCd,C0Cae,CzDrCnB,AyDqCoB,EzDrCL,AyBeN,AVSa,C0CaC,A3D9BP,CgElBX,ALgDG,ArE5CN,CqCsBuB,AgCsBrB,A3D9BqB,CgElBzB,A3DEa,AfEkB,A6BFP,CAAC,C6CFG,A7CEJ,CzBL1B,AyBKM,CjBSJ,CFOgB,CEPS,ARd3B,AWKkC,ALgBlC,CiBiBmC,CUTxB,AVSyB,CAAD,CUTjC,AVSA,EAAsC,KfxBtC,CRdF,MWKkC,CAAU,IAAjC,EAAuC;AkC6F9C,AtD1GN,AmCCM,ApB6BL,E2BQE,AW5BD,A3BgCA,AkDrCC,AvEWD,CqCoBA,AkCjCA,C3DoBE,ARdA,AIPC,A0BqDD,AHiFA,A0CnIC,ATmBD,AlEXA,AnBQS,AsD0GT,CtD1GA,C+FTE,A/CmCA,A3B/BE,EYOJ,AsBgCI,AHiFA,AiChHA,AKoCA,AvE/CA,AiBCA,CkC4FQ,AyB9FP,ALgDA,AvC3DO,CDaR,CzBLG,CiEmDC,A1CbA,A3B/BE,C0EJD,AVYA,CAAC,AnCVF,CKyCG,ApC1CA,A6BkCA,A3B/BE,CgDNf,A5CDc,A8B8CA,AmCKA,AvE/CA,CkDHd,AqBkDe,CxC9CD,CE0HG,AiChHf,AhERiB,C2B+Bf,A3B/BgB,CgEQD,C9B+Bb,AHiFc,AsC5EV,AxC9CQ,CE0HhB,AsC5EmB,AvE/Cf,AEGS,A6BFI,CjBSjB,AyDqCoB,ArE5CE,CIPf,CQcQ,AoCbjB,AhDMe,A6BFD,CmBJd,A5CDE,A8B8CuB,AmCKA,AvC3DrB,ADamB,CKyCrB,AmCKQ,AvE/CgB,AEGE,A8BfK,CuC2D3B,CnCLsB,ItBhC1B,EAAyB,AZPZ,CiD0FX,AyB9FA,A5ECF,AEGF,CiD2FA,AnB1GI,ChCYiC,CgCZQ,CkBS7C,CnBIsC,CAAC,CmBJvC,EpCaE,GiBT2C,CCbzC,ADa0C,CAAD,CCbY,ADanB,CoB4FlC,CDhGW,AnBImC,CoB8FlD,EnB3GI,EAA4D,CDa1B,CoB4FlC,ApB5FU,CAAR,CoB+FN,EDnGA,EAA0B,CCgGtB,AnBzGA,EmB6GJ,AnB7GyE,MmByGrE,EAKJ,QALI,EAMJ,MANI,EAOJ,CAPI,EAQJ,CARI,EASJ,YATI,EAUJ,kBAVI,EAWJ,YAXI,EAWQ;AvCrFd,EuCuFE,AZ/EA,AyBZA,A1DlBC,AIPA,A+DID,AEDC,A9FgBA,AqBLD,A8BfA,C1BMA,AIVA,AiEAA,C7D2BE,AoCdA,A0BEC,EzB0GG,Af/DF,A8B/BA,AlEXA,A6BkCA,EqBrCE,AqBkDA,AtD9CA,C+CaN,A9DXO,C8DWP,ClDHS,AsB+BA,A8B/BA,AlEXD,CcWE,AoDAA,AlEXD,AgCZC,CkBSC,AhDMA,CiDsGG,AjDtGF,C8BfC,ClBuBX,AsB+BE,Ce+Da,Ae9Fb,AKoCW,CLpCC,AlCvBA,CgC0BhB,A5B4BiB,AlCvCV,A8BfU,CgC0BjB,AOiCkB,ArE5CA,CAAC,CFHf,CkEWA,AlEXgB,CuE+CF,ArE5CI,EgEQE,CFGxB,CdjBE,CC4G2B,AnBrHb,CgC0BhB,AdjB4B,AgBcxB,AlEXuB,AEGpB,A8BfP,ChCY4B,CmDyGI,EjDtGA,GkCuCf,CAAU,ApC1CvB,EEGJ,E8DWA,C5B4BI,Ce+DyB,GAAkB,CAAC,CoB1D9B,EpB0D6B,AoB1DL,CAAxB,CpB0DmC,CoB1DR,CAA3B,CpB0D6B,CAA/C,AoB1DgD,CAA9B,EAAiC,CAAjC,EAAoC,aAApC,CAAZ;ArE3CP,EINC,AIPA,A4DSA,AKNA,AtFXA,A2CMA,ElBuBE,AkDGA,A5B4BC,AHiFD,AiChHC,AlEXA,A6BkCA,AM+ED,CCzEA,Cc3CE,AqBkDC,AvC3DD,CuCuDA,CtCgFE,AqC5HN,ArDEM,AkBgHE,CFUD,AqC5HP,CvCCM,CjBWG,AkDGA,A5B4BA,CtB/BC,AzB7BV,A4BmBU,CsD8CC,AlFjEX,A4BmBW,EcDA,CiCcG,AjCdF,CmBHG,CAAC,AoBEhB,CAAA,AvCCe,CAAJ,CjBWT,AkDGA,AhC1BF,C3CNA,A0CkBkB,CmBHG,A7DfrB,C4BmBM,AcDc,CE2HlB,EAAuB,AqC5HzB,ArDEyB,AcDF,EIiHM,CmClH7B,CrDE6B,CAAC,AkBgHE,CJjHH,CIiH3B,AJjH4B,ImBHf,EAAuB,AoBE7B,AvCCH,EAAgC,C1ClBtC,A4BmBM,AcDiC,EmBHI,AoBE3C,CjFjBA,A0CkB0C,CuCD5B,CvCCR,EAAwC,EAAE,CAA1C,EAA6C,C1ClB9B,GAArB,C6Dee,C7DfW,C6DekC,KAAK,E7DfjE,EAAkC,E6DenB,CAAX;ArCaA,AXLN,EiDoGE,Aa1FC,A7DZD,AtBKA,AgD2BC,AG9CD,CgCwBA,ClDDE,AwDZA,AMDA,AvFhBA,A8CmIA,CtD1GC,CqEVC,Ad6CA,AHiFA,AhB1HC,ApCMD,AmDnBE,CmBoHD,AlC3GM,CsDkDL,ApCkEE,CmClHD,AjFjBA,AwB2BO,CuBiCJ,AHkFJ,ApDrHN,CsEiGS,ArC7FA,AoCdA,A/CKT,AiCwCW,AHkFJ,A2C9HE,A/FSA,CsEiGC,ArC7FA,AXTV,A6BdY,ADYJ,CdCG,CmByCG,AwC5CZ,CzB0GW,AmBzGX,AtCXa,CmBoHV,ApBxGO,CwC+CG,CpByDC,ArC7Fd,AoCdE,AoBEY,CxDYC,AsB+BE,AHkFJ,CkBpBG,AlBoBF,AsC7EE,AxC/CF,C5BEhB,AtBKmB,CsBLnB,AtBKS,AgCEL,CsC+FiB,ArC7FA,AwDZnB,AzDU0B,CCEN,AmBiHF,ApDrHE,AgCElB,AkBTgB,CE4HC,AsC7EE,A1FxCd,AmDnBgB,ADYJ,CE4HD,ApBnHS,AmBrBH,CCwIX,ApDrHQ,CsEiGG,AlBoBpB,A5C9IJ,A0CkBc,CoBwGW,ArC7FV,AzB7BU,A8CmIE,AJjHJ,CjBWG,EmBkHtB,AEZ0B,CFYzB,CEZL,CgBTF,Cf9Dc,Ce8DqB,ArC7FA,AsB+BE,Ce8DD,ArC7FA,AXTpC,AiCwCc,CtB/BqB,AsB+B/B,A/C5DuB,CyB6BV,CqC6FsB,ArC7FrC,AXTF,A8B2He,CAAC,CkBrBhB,ArC7FyC,CiBXD,CoBwGG,A9D1HhB,A0CkBc,CE6HrB,A5C/IiB,C8D0HQ,ArC7FA,AmBkHxB,CkBrBrB,ArC7F8C,AmBkH1B,ADzIL,CCyIA,A5C/IY,C8D0HqB,AlBoB1C,AsC7EY,AlFjEhB,A2CMF,CuC4DQ,AxChDuC,C1ClBH,A0CkBI,CjBWP,AXTzC,A4BF+C,CjBWK,AmBmH9C,AF9HkC,CE8HjC,CF9H6C,I1ClBlD,CyB6ByD,CAAC,AiBXpB,CjBWmB,AmBmH5C,AF9HC,CjBWyB,AmBmHzB,AF9HR,CjBWN,CyDoCgB,EtC+EE,AsC7EZ,CtC6Ea,AsC/EH,CtC+EE,CAAL,AsC5EP,CtC0EF,IAGA,CAAC,OsChFW,CtCgFH,AsChFT,CtCgFU,IAAI,CAAC,CAAD,CAAL,CAHT,IAIA,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAD,CAAL,CAJT,IAKA,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAD,CAAL,CALT,IAMA,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAD,CAAL,CANT,IAOA,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAD,CAAL,CARX,EASE;E+BpHN,AYjBC,AvFhBA,AwB2BD,C+DjBA,AvFZA,C8D4HE,ArC7FA,AoCdC,A/CKD,AmEHA,AJWA,AlEVA,AnBOA,AsD0GA,ECvEE,AmCSC,A1D1CD,AsBwGA,EgBTI,AlB4BF,AhBnIA,CqDFC,AJWA,AlEVD,AmCiHC,CCvEG,ApC1CH,AmCiHL,AJjHK,CjBWE,AjCJA,CsEiGG,ArC7FF,AmByHA,AhBnIA,EmByCI,Ce8DC,AlCvGF,CqDFX,AJWA,C9BgCe,CtB/Bf,CAAe,AdXf,AiBCI,CkCuGc,AnDxGH,CmDwGI,AtEjGF,AgCEA,CsC+FC,Af9DE,AvDnCF,AgCEA,CsC+FlB,ArC7FmB,AjCJA,CiCIC,AjCJA,EoD6HE,ApB3HpB,CbToB,AaSC,CbTA,AaSrB,CCEa,AmByHU,ApD7HR,AgCEnB,CCE4B,AmByHtB,CpD7HuB,AgCEA,CoB2HC,ApD7HA,CAAC,CmBPd,GoC0CA,CtB/BmB,AsB+BE,AvDnCnB,CiCIkB,AdXD,AnBO3B,CiCI2B,CAAnB,CAAf,CjCJuC,CiCIC,AjCJA,CAAC,GiCIG,AdX7B,CcW8B,AsB+B9B,CAAiC,AvDnCT,CuDmCxB,ApC1C+B,CoC0C5C,CvDnC+C,CiCIT,AjCJU,CiCIC,AjCJA,GmBPE,CAAC,CnBOtD,GiCI2D,CAAC,CAAD,AdX5C,CcWyB,CAAxC,CdX+D,CAAC,CAAD,EAAI,CAAJ,CAA/D;EiDKF,ACPC,AoBEA,AMAD,AvFhBA,ARwBC,AgD0BD,AG9CA,CkBKA,AoBIA,AzFSA,CsEmGE,ArC7FA,AoDFe,ArDAf,AsBwGA,CtBxGC,CVRM,AiCyCL,AnBzCC,AedD,AG8HA,EtBxGE,AkBTD,CFiCE,AMgFA,Cc7GP,AbsCU,AH0FF,AEnBN,CrBtGO,AmCPT,CnCOU,AkBxBV,EAAY,CIuDG,APTf,EhBxBe,CCEb,AsB+BgB,AvBjCF,CCEC,ADFF,CoCLf,ApCKE,CoCLF,CEoGoB,CrC7FC,CAAC,CqC6FC,Af9DE,CH0FD,GnBzHP,AmCPjB,AbsCkB,AH0FS,CnBzHC,EmCP5B,ChBgIQ,CG1F0B,OtB/BK,CAAC,AmCP/B,AbsCS,CtB/BqB,CAAtB,CAAf,AsB+B2C,EtB/BA,CqC6FC,CAC1C,Af/Dc,EtB/B+B,AmCPjD,CnCOkD,AsB+BE,CatClC,GbsCsC,CtB/BX,AsB+BY,CtB/BD,AsB+BA,CAApD,Ke8D0C,EAE1C,GrC/F+D,CAAC,CAAD,CqC6FrB,ArC7FD,CAA3C,CqCgGE,IAH0C,EAI1C,MAJ0C,EAK1C,QAL0C,EAM1C,MAN0C,EAO1C,CAP0C,EAQ1C,CAR0C,EAS1C,YAT0C,EAU1C,kBAV0C,EAW1C,QAX0C,CAA5C;AtBtEH,EqBnCC,ArCWC,EsC2GC,ArCzGA,AmCPA,AiBIqC,AlERrC,AgCbA,AG8HA,EhCjH8B,AiC0C5B,AmCQA,ApC+DA,EFmBG,CAFD,AiC1HsC,AlERtC,CmDoHE,Af1EE,A8BlCmC,AK0CrC,AvElDD,AmCiHC,CrBtGC,AmCPA,A9CJ4B,CWW3B,CqCyGC,ChDpHqB,CAAS,A8BoI5B,AiC5HX,CjBJY,AbsCE,Ce0ED,CAAC,ArCzGd,AyDuCc,CzDvCC,AsB+BE,AmCQF,AvC/DA,CuC+DD,EpBkEI,AoBlEA,AvC/DA,CmBiIC,ArCzGA,CAAC,AdXpB,CACE,CoCyCsB,EJvDA,CmBiIV,ArCzGC,AkBxBU,ClBwBC,AsB+BT,CmCQH,ApC+Dd,CgBG4B,AhDpHW,AoEkDrC,AvEjDO,CmDmHI,AhDpHwC,AHC3C,CmDmHV,AoBlE8B,CnCRG,EatC1B,CAA2B,CjBjBV,ClBwBY,CAAC,AkBxBA,ClBwBD,CAArB,AsB+BE,CtB/BjB,AdVE,EcUwC,AsB+BE,AJvDpB,CiBiBmB,A9CJb,A6Bb9B,EhCc0B,CcUoB,AmCPA,AbsC7B,CtB/B8B,EsB+BI,GtB/BT,CAAW,AsB+BE,CAAC,ApCzCtD,CiDGK,AbsCgD,CatCvD,AbsCE,OtB/B6D,CAAC,CAAD,CAArB,CAA1C;AewBJ,EsBkFG,AFhHA,A3CTD,AIPA,A4DUF,AGPE,A5FeA,CoEJA,CnCSE,AXZA,AHEM,AmCgHN,ECvEE,AnB1CA,AkBiHA,C7BtHJ,AzBWK,CyBXL,AiEuDM,A1F5CA,AkDPF,CuCDN,ClC4CY,AH0FF,AhBpIA,AkBiHA,CrBtGC,AjCLA,CiCKC,A2DpBV,A5FeA,C4FfA,AxDSW,CpCMC,C6BlBZ,A4DUF,ACoDe,A1F5CA,CiCKX,AJvBF,CJOA,AWKe,CXLf,AWKgB,ApCMA,C0F4CV,E1F5Ca,C4FfnB,A5FeoB,C4FfpB,E/DHA,CAAA,A0BsD0B,EvDpC1B,CuDoC6B,AqCnD7B,AxDSI,CpCMwB,CAAC,AsD2G3B,C7BtHF,AmEJA,C5FeA,CuDoCkC,C9B/ClC,AzBWiC,M6BlBjC,GAAA,A+DGA,GnEIA,E8B+C6B,CAAqB,M1BtDlD,O0BsD6B,CAAmC,CAAnC,CAAzB;AkCrNN,CAAA,CxDuLG,AmCND,A9CNC,AoB4BD,A+CvMmB,AzDoLnB,CCrBA,AXUA,CGFE,AIPA,A+DGA,APgBA,AlENQ,AiBDP,ApCMD,AmDpBA,AG+HA,ClBpIA,CmB6DE,AmCQC,ApC+DD,AJlHD,ClDOE,CyBXG,A4DYF,ArFDA,AmDpBA,CkCqBC,ArFDF,AgCGH,CuBiCQ,AH0FF,ApD9HN,AsD2GM,CzB7HC,A+DGA,AzEUQ,CuB0BjB,AvB1BkB,CuB0BlB,AN3BW,ApCMA,CyBXG,A4DYF,ExDnBE,A+DGA,A5FeA,CyBXG,AgEvKnB,ArDyJI,ApCyBa,AmDpBA,CsC9JjB,AzFkLgB,CAAH,C4FfT,A5FegB,CqFChB,AlCrBiB,C1BSG,AiBgCtB,AbvCE,AGqBa,CUkBf,A2CpBqB,AlERjB,AaUY,EhCHd,CuDoCwB,ApCvClB,CaMN,CAAmB,CuBiCQ,AvBjC3B,CmBvB0B,C1BSX,A6BsHf,E7BtHA,C8B+CgC,AvBjCP,CAAC,AmBvBK,CnBuBJ,CUkB7B,GAAA,GVlB2B,CAAU,CmBvBM,CAAC,GIwDf,Cbfd,AaemC,CvBjCvB,EbNnB,CAAmB,AgCjBM,EAA/B,CnBuBgD,CAAhD,AmBvBsD,GTyCxD,CvB7BE,AaWqD,CUkB7B,AaeG,AvBjC2B,CuBkClD,AvBlCmD,KuBkC9C,EvBlC4C,CAAU,KuBiCpC,CAAzB,AvBjCmD,MAAsB,CAD7E;AyDTF,AzDYC,EsCyGC,ArCvGA,AyBYA,AyBXA,A7DbA,AsETC,AxDSA,ApCMA,C4FjBD,AxDrBA,CX2BE,AiBgCA,AYsFA,ECpEE,A8BtCA,AlCrBA,AG+HA,GgBEG,AatGP,AzCcO,CyCdP,A5BgCU,AHuFF,ADlJE,AG+HF,C7BtHC,A4DYA,C5DZC,MAAD,A4DYL,CFMJ,CAAA,C1DlBmB,AiBgCjB,AUyGiB,AiC7HA,C9BsCG,CJ3DC,CTyCD,AU0GZ,CM7GV,AHqByB,AHwFd,AiC9HP,C3BiBJ,AN6GY,ADnJc,CmBiI1B,GftE8B,CDoE5B,GFoBkB,CM7GpB,AjC7BmB,AiBgCjB,AU0GmB,CM7GrB,AjC7B+B,A0BTK,CAAC,ECmJZ,C+BxHzB,A/BwH0B,CAAD,CAAL,C+BxHpB,A/BwHW,E3B1IF,A8BkDgB,CAAqB,CGrB9C,AN6GiC,C3B1IU,A2B0IT,EM7GlC,GPtC0B,C1BSuB,C0DkBjD,A1DlBkD,A0BT9C,CCmJsC,CAAC,GM7G/B,CN6GmC,CAAC,C3B1IL,A2B0II,CGxFtB,AHwFiB,C3B1IxC,A8BmDI,AHuFK,GAA2C,CAA3C,CM7GX,AHsBW,EGtBa,AN6GkC,CAAhD,KM7GV,AN8GW,CAAC,CM9GkB,OHqBL,AHyFL,CGzFhB,AHyFiB,IAAI,CAAC,CAAD,CAAL,CAAT,IAAsB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAD,CAAL,CAA/B,GAA2C,CAA3C,GAA+C,CADhD,KAEC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAD,CAAL,CAAT,IAAsB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAD,CAAL,CAA/B,GAA2C,CAA3C,GAA+C,CAFhD,KAGC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAD,CAAL,CAAT,IAAsB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAD,CAAL,CAA/B,GAA2C,CAA3C,GAA+C,CAHhD,CADF;AkBhBT,AtE7GA,A+BUK,ENrBH,AiBgCA,AkDnCD,AEDA,A1DUA,CXTA,AiBiCA,CgBDE,AyBXA,AtD1BA,AwDoBC,AlEHD,AmC8GA,AJpHA,EKkDE,AmCCA,EhCzBI,AyBXF,AOoCA,AvE7CA,AmC8GE,CwC3HR,AJ0DI,AxCnDG,AnBkBO,CF7BZ,AiEIF,CjEJE,A0B6DO,E4BnCE,EhETE,CAAC,EuCoBI,AHwBd,CuCzDJ,CjEJE,AiEIF,A/DyBI,C2BQiB,A7BrCb,A0B6DW,AxBhCO,EuBkGH,CnC9GjB,CoC4Ca,CDkEO,CACtB,AvBnGA,CuBmGC,CnC/GsB,AYYO,CuBmG9B,AJrHG,CQ0BwB,AR1BX,CQ0BY,AJ2FvB,EAAL,CwC5HJ,A/DyBI,CF7BF,AyBgIW,CzBhIU,AyBgInB,AvBnGoC,C+DzBxC,A3EaE,CgESI,A5BmCa,ADmEH,CnC/GsB,AmC+GlC,CzBhIF,A0B8DI,C1B9DiB,AyBgIJ,C6BtGsB,C7BsGpB,EzBhInB,A0B6DiB,CDmEK,CI3FH,AyBXyB,A5BqCxC,AuC3DU,CpCiCiC,AJ2F7C,CADsB,AJpHxB,EIsHE,CAAC,CCpEc,CDoEf,CCjEE,CuC5DN,AxC6HS,EI5FkD,AyBXlB,AWtBd,AxC6HvB,CI5FwD,CyBX1D,A5BsCS,ADiEE,CAAT,C6BvGyD,C7BuG7C,CAAZ,EAAe,EwC7HnB,AxC6HqB,CI5FA,CAAnB,AoCjCqC,CvCyDpB,ADoEK,EChElB,ADgEF,CAFsB,EAGtB,CAAC,CAAD,EwC9HJ,AxC8HQ,CAAJ,CwC9H6C,CxC8HtC,EAAP,EAAW,ECrEI,ADqEf,EChEE,ADgEa,EAAE,GChEV,ADgEa,EAApB,CAHsB,EAItB,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,CCjEE,CAAqB,ADiEZ,EAAX,EAAe,EAAE,GCjEf,ADiEkB,ECtEL,ADsEf,CAJsB,CC5DpB,AD4DJ,gBClEiB,EAOb,YAPa,EAQb,KAAK,cARQ,EASb,OATa,EAUb,KAAK,OAVQ,EAWb,KAAK,YAXQ,EAYb,KAAK,WAZQ,CAAf;AvDxCN,AgBtBM,ESWJ,AiBgCA,AbzCC,AkEUD,AhEmBA,CFhCA,C6BwCE,AoCjCA,AJ0DC,ApCsED,E6B1GE,A5BiDA,ApC1DA,AgCnBA,ADYqC,AnBmBnC,E2BQE,AJ+FA,CtCtIM,Ae+BL,CoDHC,A/B0HF,ADtJA,CI6EC,AwCjET,ADNS,A3EaD,C4EPR,A5EOS,AYYG,EqBwHF,EG1EN,CGtCa,EHsCA,ADyDE,CI/FC,AyBXA,AWtBlB,CCMF,CAAA,AzC0HsB,C6B1GC,AhETnB,AHnBA,AmCAA,ApB+BmB,CZZF,AHnBQ,Ae+BL,CqBwHH,ADvJE,CGsID,C6B1GC,CnE5BnB,CoCuJqB,CMhHK,ANgHpB,ApCvJyB,Ae+BZ,C2BQQ,AqC3B/B,A5EO4B,AYY5B,CZZ6B,EiCqInB,A2C5IV,A/EZI,EAAqC,CuC6ExB,CAAU,EGtCzB,AvCpBE,AHnBA,EAA2C,EmE4BxB,A5BiDnB,AwCjEM,C3C4IW,C+B5HY,AnE5B7B,EAAiD,CoCwJ5B,AElBH,CFiBZ,C+B3H4B,A7B0GE,GFmB9B,A2C7IV,EAAoB,E/EZhB,EmE4B6B,AnE5B8B,EmE4BxC,CAAnB,E/B6HiB,CEnBC,CAApB,EFmBuB,CAFf,IAGA,WAAW,IAAI,CAJjB,EAKE;A/BzIN,EyEXH,A9END,Ae+BA,C+D3BA,CpCmCE,AHsCC,AwCjED,AVSA,AlEFC,EgESC,AEPA,ArErBA,Ae+BJ,E2BQQ,AqC1BJ,A5CbE,ADYF,C7BKU,E8DWL,AEPA,CjCsIC,AF/IA,E7BKN,CAAgB,CLjBpB,AKiBI,CgEIF,C3BkBgB,A1CvCF,AKiBO,GqCsBF,A3BRrB,CmBnBoB,CCZC,ApB+Bd,GVdH,A8BhBK,ApB8BC,EVdqB,C8DW3B,CzBW0B,CAAC,A3BRhB,CoDHe,ApDG9B,EAAkB,EoDHY,ApDG9B,EAFwC,CAEjB,E2BQrB,APtCsB,C4CYpB,E5CZuB,E4CavB,KAAK,M5CbD,GAAoC,I4CaxC,EADA,IAEA,IZa0B,EACxB,IYhBF,CZgBO,ChC5BiC,CAAgB,C4CexD,CAAC,IAAA,G5CfuC,CADtC,Y4CgBD,EZaC,AYbU,EZYc,EAExB,CAFwB,AYZT,EZef,KAAK,KAHmB,CYZd,CZgBV,CYhBD,EAAiC,EZgB3B,MAJmB,EAKxB,AYjBD,CAJH,EAKE,OZW0B,EAMxB,CANwB,CAA1B;EtD1BN,AiEME,AzEUA,EqCsBE,A2BlBA,AK0CA,A1E/DA,AsCqIA,E6BlGE,AYlBA,A5ChBC,EOsCG,AJ8FF,AJzHA,CrBXR,ARgBS,AiCoHA,CFsBE,C+BxHA,AEdA,AK0CA,EK9CE,A1EAA,CLjBC,AKiBA,CLjBC,CqEqBC,AK0CZ,A1E/DU,CqEqBG,ArErBb,C+EiBE,C1EAG,CLjBW,AKiBA,AiCoHhB,EI9FoB,A7BtCxB,AyBoIsB,C+BhHlB,CrErBA,C0CuCuB,ErCtBA,CAAC,CAAD,EAAI,GqCsBK,CAAC,EyBJ/B,E9DlBqB,C8DkBa,A9DlB/B,CAAP,IqCsBE,AyBJyC,WAAL,EAAlC;AtDxON,ARuNC,CQvND,CAA4B,AwD2NzB,AK0CA,AlFnED,AuBmCA,CsDtBA,AKqBA,ChCSE,AyBJC,A5ByCD,AwC3DC,A/EjBD,AmCCC,C4CSD,CzC2HE,AvBtGE,CAAC,C2BQC,ANoHD,AF/IC,CKgED,CxB7CG,CgEdD,CvFrBT,CAAA,CQIY,CAAC,CuC4EX,AvC5EU,AkCWwD,AnBoBpD,Cf/Bd,AkCaM,AnBkBS,C2BQC,A3BRF,CAAhB,Cf/BkB,C0CuCG,A7B7OvB,CAAA,ArBkME,CAAA,CQIE,ERJF,GAAA,CkD2C8B,AR5BsC,CQ4BrC,CR7B3B,KQ6BF,ElD3CE,GAAJ,EAAS,KAAT,EAAgB,UAAhB,EAA0B;AauB5B,EgDPE,AdiEC,A8BtDD,AK0CA,AvE/CC,AgChBA,ApB8BD,CwBHA,AJpCA,CO+CE,AlD3CA,AQIA,AsCqIC,EFsBE,A2C1ID,AhEcE,CAAC,C2BQC,AlD3CA,C2CKD,CpB8BG,GgEdC,CvFrBG,AQIF,CAAC,C0CuCG,AW5BhB,ArDXY,Ae+BI,CsCpBhB,A7DfiB,AQIf,Ae+Be,CAAD,C2BQG,AqCtBR,AhEcX,CgEdW,A/EjBO,ERJI,EQIpB,EqDWF,CAAA,CX4B4B,CAAC,AqCtBlB,AvFrBM,CuFqBA,G1BNjB,C7DfkC,E6DelC,CX4BE,EqCtBS,AvFrB4B,CuFqBb,IAAf,CAAe,C1BNnB,A7Df2B,GuFqBvB,AvFrBsC,E6DejD,A0BM2B,AvFrBV,CAAf,C6DeY,MAAd,EAAoB,A0BMT,CAAP;ANLN,EhEFE,A8BoEA,ApC3DA,AYaA,E2BQE,AyBLA,AdvBA,AjBgJC,A2C1IA,A/EjBD,AmCCA,EpB8BI,CNtBN,AMsBO,C2BQC,AW5BA,A5CFR,A0BRQ,ADWJ,CuCDG,C1DoBG,CoDGD,EhCjCI,ADWJ,ClCZG,AkCYF,CrBZG,AbAA,CmEkCC,AnElCF,AmCCI,ApB8BA,CNtBhB,ATTE,AkCYW,AnBmBI,C2BQC,AjC9BlB,AyBGS,AnBmBO,CAAhB,Cf/BkB,AkCYF,CQ2BK,CR3BH,CmBDK,CrDXrB,CkCYmB,CmBDK,AoBA5B,AtCV4B,CsCUD,AtCVE,IOsCI,AW5BA,CX4BC,EyBL9B,ChCjCc,ADWe,CAAC,CzBHhC,A0BRE,G1BQF,EiC8BE,A+B5BJ,AvCCM,EuCDoC,AvCCA,CAAC,GAAG,CmBDlB,CnBCtB,CmBDF,C5CFF,AyBGgD,EAAE,CAA9C,EAAiD;EjBcrD,AkDSC,A7DrBD,AmEFA,AGNA,AGYC,A3DHD,ALiBA,CoDXA,AYdA,CrCkCE,AjC/BA,AjBdA,AQKA,AsCqIA,EmC1HE,ArDGJ,ALiBM,C0DpBD,ArDGL,ALiBO,C2BSC,AlD7CF,CiBcC,CyBGD,AnBmBI,CTlBV,ANbS,AsCqIA,ChCxHT,AsERA,AtCgIU,CsChIV,C1COU,EzBHR,AWKF,AkBuHE,AvBtGc,C2BSC,AtB1BjB,ALiBiB,CvBpCf,A0CiBY,AnBmBE,CAAhB,C2BSoB,AlD7CF,CyB8BlB,AXZA,ANbE,CiByBF,AXZA,AmEFA,AGNA,CAAA,CHMsB,C/B6BG,AR5BJ,CAAC,G0CPtB,AxDSA,EHWA,CAAA,A2DpBA,AxDSA,CsB0BoB,EAAlB,CR5B8B,CAAC,C5BCjC,A4BDgC,CAAX,E5BCrB,A4BDqC,C0CP9B,ExDSP,CwDTA,EAAU,K3DoBV,AiBbqB,C5BCrB,A4BDM,EjBaN,UAAqB,IAArB,EAA2B,OAA3B,EAAoC,UAApC,EAA8C;AuCgF1C,AxEpFA,EoEFJ,AeiBA,A1D1BC,AsESD,A/ElBC,Ae+BD,CNxBA,ATbA,CiB+BE,AyBeA,AW9BA,A/CGA,A8B8IA,AqChJA,AGNA,AxDSA,AedA,AGqIA,E9C1IE,AuBoCE,CAAC,CENC,AyBeA,AW9BF,AjBiJA,AwCtJA,AzCLC,ADYF,CsB4FS,AxEpFA,AgBpBP,CoDkBP,ArCaU,CqCbV,AqBPS,ArDGA,AkBuHA,C9C1IC,A8C0IA,CrB5GG,A2DpBF,ApFVA,A2CKC,EsCWV,CxDcc,AzB9BN,A4BmBI,ALiBE,CyCyEZ,AoBnGE,ApFVF,A2CKY,ApB+BC,CyC0EjB,AdjEkB,A1DpBd,A+BWY,C/BXQ,A+BWxB,CqCbA,A5DvBkB,CyB8BG,AyBeA,AUtBrB,AdmHE,CFsBkB,AwCtJA,A5FehB,CqEVF,CrEU2B,CqEVN,AjBiJA,AwCtJrB,ApFVE,A4BmBF,CgB6IA,CwCtJuB,CxCsJC,ApDvItB,CiCKY,CyBec,A1DpBG,CiCK/B,AyBe6B,APxCf,CAAM,CqBwGlB,EAEJ,IrB1GO,COwCc,CcgEjB,CdhEF,AUtBF,CIyFA,ArB3GiC,CAAC,CiBkBlC,CIsFI,EAIJ,KrB5GM,CqBwGF,CJtFkB,CI2FtB,CrB7GgD,QqBwG5C,CrBxGqD,CqB8GzD,GrB9G6D,CiBkB7D,EAAsC,WjBlBuB,CAAM,OqBwG/D,ArBxGF,EqB+GF,ArB/G4E,gBqBwGxE,EAOY;EAEhB,A/CtGA,AiB+BA,A+C9BC,ArDGA,ApCMD,A+BWA,CKnBA,CsB4BE,AUtBA,A5DvBC,AQKD,CRPA,C6DiBE,A/CEK,A8B+IL,AwCtJA,A5FeA,AmDpBA,ApB+BE,CAAC,C2BSC,EW9BE,AjBiJF,ArB5HE,CqCbD,AhByIA,AwCtJA,ApFVA,ARyBT,AgBpBS,C0ByCT,A1BzCU,C0ByCV,E0BvBS,AwBbL,CvBKY,ArDVP,Ae+BO,CAAC,C6D1BD,A5ELA,Ae+BA,CsCrBG,AtCqBnB,E6D1BI,AzCLe,COwCG,AhBCtB,A1BzCS,C0ByCT,C2B/BwB,ArDVF,AmCAA,COwCG,ENmHrB,CpC3JK,CoDkBA,AhByIkB,CpC3JC,EoDkB1B,CCRiB,CrDVV,AmCAL,COwC+B,AW9B/B,ArDVF,C0CwCkC,QhBCpC,GgBDyB,AhBCzB,EgBDE,QhBCoB,IAAtB,EAA0B;E8BwE1B,AJ9FC,AhCHD,ApCKA,AgBpBC,AegCD,CqChBA,CnCQE,AyBgBA,AhBCA,ASzCC,AGqID,CHvIA,CqBkHE,AHtGA,A/CC4B,AsEN5B,ApFVA,ARyBE,EiCIA,AyBgBE,ANmHF,AEtBA,AJ1HF,AnBqBE,CWSC,AXTA,CsCtBH,A7DfM,AuBqCJ,CTrB+B,AsEN5B,A5FeE,AmDpBF,ApBgCT,CyCgFU,ApB2CE,CnBnID,CAAC,AXboB,AtBSlB,A+BYF,CTrB6B,AtBS1B,A+BYF,CyCgFC,AdxEE,ENmHE,AwCtJd,ApFVc,ARyBA,A+BYF,CyCgFhB,AdxEmB,A1DpBA,EwE4FA,ApB2CE,A5ChKA,AuBqCrB,CqB2HsB,CAAC,CAAC,ApDvIT,CiCIT,AmBmImB,ApDvIA,CiCID,AmBmIA,CiBjJpB,AjBiJmB,A5ChKI,CAAC,CkD6CC,AW7BvB,CpCaA,AyBgBwB,ANmHA,CnBnI5B,AmBmI6B,A5ChKJ,CcgBc,AoB8BvC,AUkH8B,A5ChK5B,CyB6B2B,AXbwB,A8BgJxB,AEtBA,CFsBT,CVlHW,A1CrBE,EAAV,CoDuIa,CVlHpC,AUkHmB,ApDvIkB,AsDiHF,CAAC,CFsBG,CAAC,ApDvIjB,CoDuIkB,CiBjJvC,AjBiJwC,ApDvIF,CoDuIC,CiB/IrC,AjB+IoC,CiBjJtC,A/CC4B,E+CE1B,AjB8I2C,CAAC,CAAC,CAAD,CAAT,CMnHtB,CAAoC,AJ6FrD,EFsBuD,AEtBF,CFsBlC,CAAf,KiB9Ie,CX2BF,AW3BG,CX2BpB,KW9BE,EAIE,MAJF,EAKE,KALF,EAME,MANF,EAOE,eAPF;ArDTL,EoDmBC,A1BsBC,AakCD,AkCjEA,AKLA,ATeA,AtDYA,CWOA,C8ByEE,AdxEA,ApC9BA,AsELC,A5FeD,EiCIE,AoCNA,AoBRA,AjFfA,A2CKA,AGqIA,AJ1HD,EQ6BK,ANmHF,ArB3HA,C2BQG,AoCnCT,A9FeO,A+BYA,CERG,A6DnBV,ATeA,AtDYM,CyCgFG,AH9FA,AoBRA,AJUT,AtDYA,C2BQY,AHmCZ,AHgFY,AqCjJF,AjFfA,ARyBA,CuDuDV,A/ChFW,CuBqCC,C/BZV,A+BYW,CvBrCH,AuBqCE,CERG,AzB7BX,C6DuBA,CoBRA,AKLJ,A/D2BiB,CERC,AyBgBE,A+B9BF,AKLlB,ATeA,A7EzBkB,CkD6CG,ANmHA,AiCvIrB,C9BuDA,AxB3CA,CwB2CA,CtBnDsB,AmBmIE,C5ChKpB,EgEqHF,AjBrCF,AuCtEA,CTeA,CjCuI6B,CGhF7B,AuCtEA,CTeA,IIVI,CAAJ,ExDckB,AyBgBN,A+B9BwB,CxDe9B,AyBeiC,CoCnC/B,CAAR,ATeQ,C9BuDR,AHgFwB,CnBnIN,AmBmIyB,A0CtJhC,CAAX,ATeA,CpDMM,C6DrBQ,ATeD,CSfb,E1CsJwB,A0CtJT,C7DqBJ,AmBiIL,CiCvIN,E3BoBY,A2BpBM,E3BoBqC,UAAU,CAAC,KzBhBhD,EAGZ,GyBaM,CAAV,MzBhBgB,EAIZ,OAJY,CAAd;AjBtBN,EwD+GG,AlDtGA,AoBgCD,AkDrCC,AFyDD,A3D9BA,CyC2EgB,AlDnGhB,AsERA,CpBiHA,AdzEE,AWtBC,AdyDD,AkCjEA,AKLA,ATeA,ArFAA,EiCSE,AkB7BA,AGqIA,EI7FI,AHmCF,AHiFA,A0CvJE,A/D2BF,CsDZC,AtDYA,C2D8BP,A3D9BM,CEHG,AwDnBA,ACoDT,A1F1CS,A+BYT,CEHU,AmB+HA,AiCxIR,ArFAQ,CuDuDC,A8BvDA,A/BiHA,CFuBC,AEvBA,AvBrGA,CAAC,CsDZX,ArFAY,A+BYF,CqB4HA,ApDxIG,CuDuDT,A8BxDY,CACD,ArFAH,A+BYG,C+D3BG,AJyDpB,ApCuEI,CmC3He,ACoDnB,A1F1CmB,AsDiHA,CI7FG,AHmCF,AHiFR,ArB5HZ,CqB4HM,A0CvJiB,AxCgInB,CtDjHU,CiCSV,AyBWqB,AJ6FF,CrBxGC,AjCTA,C8FfD,AxCgInB,EtDjHU,AsD+GyC,CoCrEvD,A1F1CE,AsDkHE,CmC5HK,ExDmBL,AyBW6B,A+B9BJ,ACoD7B,ChCtBkC,MHmCd,CAAU,IAA5B,AmCbF,EhCtByB,AHmCW,AuCtEb,CpCmCyB,CAAvB,AoCnCQ,CpCmC/B,AoCnCqB,EAAa,CAAb,EAAgB,CAAhB,CAArB;EzBcD,A/CPD,AsELA,A5FcC,A+BYD,CsC7BA,ArEce,CiCYZ,AyBYD,AgCqBA,A1F7CF,AkDPE,EKiEE,AkCjEA,AjFhBA,A2CMA,EOyCE,A3BTA,CAAC,CvBtCC,AuBsCF,CwB2CG,AmCbA,A3D9BT,E0DtBW,C/B+BC,A3BTA,CAAC,CwB2CT,AmCbU,ChCrBC,ClD/CC,AuBsCA,CwB2CC,ExB3CjB,E2D8BE,AlFpEmB,IkD+CI,CAAC,A+B/BtB,AjFhBA,EAAwB,IkD+C1B,GHkCe,CAAU,OAAvB;AlC1DA,EYaH,AoCVD,A5CXA,AsEQA,AL8CC,AvE9CD,AnBIA,A+BYA,CEdA,AyD0CA,ChCnBE,A+B/BC,AKND,ATeA,CIXA,ClCmEE,AJ3EA,AGqIA,AJ5HO,CzBDX,CiCiCQ,AjCjCR,A2BmJM,A0CvJA,AtFVA,AuBsCA,CsDbC,AlEHP,AnBIO,AqBJO,AUgBP,CZhBP,AgChBU,AGqIA,AvBrGJ,CwB2CG,AwC3DT,AhEgBA,CqB2HU,A2C3IV,CDZW,AtFVA,CR0BC,AqBJR,AUgBQ,CVhBQ,AiCqHL,AvBrGF,CVhBT,AUgBU,CNxBd,A4DWE,ArFCa,CyBZf,A8BmEI,AHgFE,AiCxIU,AhEHO,AiCqHL,CI5FC,AlD/Cb,AWsBN,AmCqHI,AvBrGa,CqB2HC,A5CjKA,AWsBlB,AYgBa,CgEhBb,AVGE,C3BuBE,AqC1BJ,ADZM,A9FgBM,AmDpBQ,C2CIC,ATeA,A7EzBf,AuBsCe,CAAC,CvBtCC,AR0BA,AmDpBA,CnDoBC,AqBJpB,CrBIJ,A+BYyB,CVhBM,AUgBnB,CsDbV,ClEHF,EuC0Bc,A2BvBgB,AtDaA,C2BUf,AlDhDT,AWsBN,C2EZM,CAA2B,A/D4BjC,EsDbE,E3BuBE,IAAqB,EjClCzB,ANQA,C4EAA,CrC0ByB,AoCtCnB,CrEIN,AqEJE,CCYF,CDZgD,E3CJE,CAC5C,M4CemB,CtERzB,G0BRkD,EAE5C,EOwCmB,CPxChB,COwC+B,AqC1BxC,A5CdU,E4CcyB,QrC0Be,CAAC,APxC1C,CAFyC,CAA9C,IO0CqB,EAAkC,UAAlC,CADvB;A1DpBH,EwE2FC,AvCjFA,AwDpBC,AJSA,AK4CD,AtDlDA,AfGA,AUgBA,CsDhBA,C5DRE,AsEQA,A5EAA,EqD+FE,AjBnCA,AuCxEA,AtFVC,A4BmBL,AkBwHI,ClBxHJ,CoCkGM,A/CvGA,AsEQA,A7CPF,AnBuBE,CgEhBC,A1EAA,AUgBA,CwB4CC,AH+EA,AEtBE,AvBrGJ,CyC+EG,AsB3GA,A/D4BT,CuBqGY,C7B7HD,AJQA,C+B2IG,A/B3IF,A6BPF,AnBuBE,CyC+EC,AlBsBE,CkBtBD,ApClGd,ALmBc,CKnBd,AkBwHiB,AvBrGF,CmBvBD,C7BOP,CyEZH,AzEYc,AiCqHE,AvBrGF,C+D5BC,A/D4BL,CwB4CI,ADyDd,CJ5HM,C4CLN,A5CKgB,AnBuBE,CwB4CD,AuCxEE,A1DSvB,ALmBuB,CwB4CnB,ClC5DqB,CeHzB,AfG0B,AUgBA,CNxBxB,A2BmJ2B,A/B3IJ,AUgBb,EyC+EiB,A/CvGA,AJQA,CmD+FC,ApB6CpB,CAAC,ArB5HoB,GAA/B,CqB4HW,A0CxJP,CtB2GyB,CAAhB,AnD/FY,CeHzB,AfGO,CmD+FgC,AnD/FvC,E0EAE,EAAiC,I3C4IxB,CoB7CE,CAAb,ApB6CkB,IAAI,CAAC,AFnJ6B,CEmJ9B,CAAX,EAAgB,AFnJjB,CAAN,eEmJO,IACC,IAAA,YAAA,EAAO,IAAI,CAAC,CAAD,CAAX,EAAgB,gBAAhB,CADF,IAEA,CAHF;ApDrIV,AqBLC,EmD+FC,AW9EA,AEbA,AtDaA,E2BQE,AoCrCC,AtFVA,A4BmBD,EoCkGE,A/CvGA,A8BqEA,AwC7DA,A5EDK,AgCbL,AGmIA,AJ5HD,EsBsGG,AdtEA,CyBRN,ApDAO,CoDAP,A1DzBI,A2BsJI,AD5JA,AGmIE,CkBtBD,AjBlCA,AnBhEA,CgBiJC,AEzBE,CyCrHD,EvB+FE,ApB+CA,AEzBE,AvBpGf,CyC8Ec,ApClGA,CkBwHG,EI5Ff,AyBRF,AYjBW,CZiBX,AYjBW,AzCqHS,CI5FD,AtB5BjB,CeXgB,AGmId,KHnImB,E4CcZ,C3C8IiB,A2C9IX,CvB+FY,A/CvGzB,A8BqEA,CiBkC0B,C/CvGZ,A2BsJa,CGjFC,E4B5ChC,A5B4CI,CHiF2B,CoB/CK,A/CvGb,C0DyBvB,EX8EuC,CAAV,CAAhB,CrB7GL,CqB6GmC,GrB7GC,CC4Jb,E+B7H/B,A/B6HsC,ED5JW,CqB6GpC,A/CvGT,AsEQO,CvB+FX,AuB/FyC,G5Cda,C4Cc3C,C3C8IoC,A2C9IN,C3C8IO,CAAD,CAAhB,C2C9IpB,C3C8IyC,C2C9IV,M5CdY,CAAM,G4CcjD,CAAP,G5CdA,CC4J2B,CAAvB,AD5J6D;AH8CjE,A3B9BN,AUgBC,EyC8EC,AiBrGA,AKNC,AtFVA,A4BmBA,AchDD,C4CkCA,AtFhBA,A4B4BA,C+CsBE,AYjBC,ErCyBC,AjCjCA,A8BqEA,AkCnEA,AtEI2C,EqDiGzC,ApB+CC,AD5JD,CCsJA,AJzGQ,EmCdL,A1DzBA,A8BqEA,ApC/D2C,CqDiG1C,AdtEA,C+B/BC,CtEIoC,CuC2BlC,AyBRA,A/B6HA,AjChJ2C,A6BiCpD,CAAiB,EwBgErB,CATgB,Ad7DH,CcuEb,GjBnCI,ApC/D4D,CoC+D1C,ApC/D2C,E6BiC7D,CvBvCA,CgEEA,AzCqC6B,CmCdxB,CAAU,A1DzBS,C8BqExB,ApC/D2C,CoCgEzC,CkCpEyB,AzCqC3B,CvBvCA,C0DyBoB,AnCcc,OUNzB,AHqCG,CkCpEhB,C/BgCM,C+BhCqC,ClCoErC,EAAgB,CAAhB,CGrCO,CHqCY,CGnCnB,EHmCA,C4B7Ca,CzBUb,AHmCsB,C4B7CnB,EAAuC,iBzBU1C,EAAe,IyBV2B,CAAe,GAAtD,CAAP,CzBU6B,CAAC,MAA1B,EAAkC,UAAlC,CAFO,CAAT;A3BNN,EqCjBE,AegBC,A3EtCD,A4BmBA,AYiCA,CmChBA,CzBaG,AjCpCA,AgEED,AtEGA,E6BkCI,AMqFF,ECtDI,AJ5EF,EiBeN,AhB6IQ,CgB7IR,AqBPS,AnC0HA,CCtDK,AHgFJ,EJ/GI,CI+GD,AE1BA,CF0BC,CGhFK,AP/BF,EMqFA,CcnHjB,Ab6DsB,AHgFJ,CgB7IlB,AhB6ImB,AJ/GE,CI+GH,AJ/GI,AMqFF,CF0BN,AD5JO,AGkIjB,CCtDsB,CAAC,AP/BV,AMqFM,CF0BC,AqCpJtB,AzCqCwB,AG7CF,EiBexB,CdmH2B,CF0BC,CgB7I5B,AhB6I6B,AJ/GZ,CI+GW,AJ/G5B,AMqF8B,CCtDR,AHgFT,EGhFL,CJ5E0B,CC4JC,AE1B/B,CF0BS,CD5JwB,AGkIA,EF0BE,EgB7IvC,AdmHyC,EAArC,EAAyC,EHlIE,CC4JC,AD5JA,CC4JC,CAAD,CAAxC,aD5J6B,EAA/B;AnCFF,EwDgHJ,AW7EA,AzCMA,A+C9BC,AGND,AEDF,A3EUG,A6BkCD,AEvCA,C/BGA,CiDME,A2BFA,E/CgCI,AG7CD,CAHD,CC+JG,A2C/IC,AzCqHF,CwCjIR,A9EJgB,AkCSP,EkBSE,C1BuBT,AkDpCA,ClDoCA,AkDpCA,AzCFW,ADMX,CFuCc,CoB9BL,C2BFO,ADZlB,C9C4CmB,E+ChCE,E/CgCE,CNPrB,AkDpCA,A5C2CsB,CNPtB,AkDpCA,CGWwB,C/CgCP,CAAS,CwBgED,CAAC,AxDhHtB,CoDkBK,ApDlByB,EgCgDjB,CoB9Bf,AwBbF,A5C2CA,G4C3CA,EGWmB,EAAjB,A/EhBE,EAAwC,GwDgHF,C9BvE1C,AkDpCU,CpB2Ge,CAAzB,C9BvEA,E8BuEgD,EAAhD,GoB3GA,EAAoB,GlDoCpB;AoDnOF,A5CoMC,C4CpMD,CtB2SE,AJ9FC,A0B7MmB,A3E0MpB,A6BiCA,AhChDA,CoDgBA,CV6BE,AjCrCA,AiBiCA,AkDpCA,E5C2CI,CAAC,CUHC,AjCrCA,A8BsEA,AJ3EF,AGkIA,CtCrIC,CgCgDG,CNPD,AkDpCA,CrCyEG,AJ3EF,E1BKI,CqEnMhB,AxCgUe,CZ5FC,AkDpCA,AEhMhB,AxCgUgB,C7B7HG,A8BsEA,GP9BG,AG7CF,CI2EG,AP9BA,CUHC,AjCrCA,AuBwCF,AMqFd,CsChIJ,A5C2CQ,AhChDW,AmCGA,AGmIb,CtCtIc,AmCId,COyCiB,AJyFf,CNtFgB,CwBgED,CAAC,AlBsBb,CHlIA,CAAC,C1BIG,A0BJJ,CnCJQ,AmCIb,C1BIN,CuBwCQ,AhChDsB,C0C6CG,APzChB,COyCiB,CVGC,CMsFd,CZ7FrB,AaqCmB,ADwDI,CCxDM,ADwDL,EtCtIL,EwDgHqB,AjBlC9B,AvC9E8B,AsCsIZ,CtCtIa,AmCId,CqB4GJ,CAAzB,AxBhE+C,AMsFd,CCxDM,AP9BS,AG5ChB,AGkIP,CNtFsB,AG7C1B,CqB6G2B,AxBhEX,CG3C7B,CqB2GR,AlBsBsC,CkBlCtB,AdvDS,AHiCmB,AP9BS,AhChDhC,CwDiHrB,AdpEsD,AJyF9B,CtCtI6B,CAAC,AmCKzC,CIyEmC,AJzElC,AGiI8B,CHjI/B,CAFQ,EH6CrB,AG1CQ,CGgIe,CADjB,CIxFmB,A1C7CJ,C0C6CnB,AJ0FM,CIpHsB,A1CnBkC,AmCMnD,COyCX,APzCY,AGiIJ,CHjIG,CAAL,CGiIK,EHjIM,GIwE6B,CAAU,AvC9ErC,CAArB,GsCuIuB,CAAE,CHjII,CIwErB,EAA2D,AJxEnC,AGiIH,CHpIR,EAIb,AGgIwB,EAAR,GHhIX,CAAC,AGgIyB,CHhI1B,CAJQ,EAKb,CG+HoC,GAAG,CH/HlC,AG+HW,CH/HV,AG+HS,CH/HV,AG6HP,CHlIe,CGgIwB,CH1HrC,AGgIF,KHhIO,CAAC,CAAD,CAAL,GAAW,UAAU,GAAG,CANX,EAOb,KAAK,CAAC,CAAD,CAPQ,EAQb,KAAK,CAAC,CAAD,CAAL,GAAW,UAAU,GAAG,CARX,CAAf;AnCFP,AkCUD,EsBuGE,AJ9FA,A9CTA,AoB+BC,A+C9BD,AGNC,A5C2CD,CNTA,AkDpCA,CGYE,E/CiCI,CAAC,CI8GD,A2C/IA,A5CHA,CsCDC,ClCmEG,AP9BA,C1BtCV,CAAA,A8BoJY,C2C/ID,C3C+IG,EDlJA,CCkJG,CAAC,CqCnJD,AtCCA,CHoCG,C1BtCpB,AyEKM,A/CiCe,C1BtCrB,AiCoEoB,AHgFE,AJ9GF,CI8GG,AJ9Gb,CI8GY,CAAJ,C2C/IM,A/CiCE,C+CjCD,C3C+IG,CqCnJrB,EAAoB,AtCCA,C7BF3B,A8BoJgC,ADlJJ,CCkJK,CAAD,AJ9GtB,C1BtCV,A8BoJiB,A2C/IO,E/CiCa,EI8GE,A2C/IF,C3C+IpB,ADlJU,EAAW,CCkJK,A2C/IN,IzELrC,A0BsC+C,CAAC,CAAD,CAAV,AGpCV,ECkJyB,ADlJJ,CCkJK,AJ9GA,AGpC1B,CCkJyB,ADlJ9C,CCkJA,I2C/I+B,EAAW,A/CiChD,Q+CjCqC,EAAqB,UAArB,CAA/B,CAAJ,EAAsE;A/Eb1E,EiB4BE,A2DvBA,APaA,AK2CA,A1CdA,EUFE,ApCpCA,AGHA,AgEIA,EMIE,ErC+BE,AjCvCA,A2BuJA,ADlJA,AG4HA,ECzDI,A8B5DV,AK2CA,CDnDS,AJQT,AK2CA,CtCgGY,AqCnJF,AzCqCA,AGpCE,AG4HF,CI1FC,AqC/BA,A/CiCA,CvBzCT,A8BwEc,AP/BN,C8C7CG,A9C6Cb,CUFc,AjCvCA,A6BiIA,CH5HG,C4CGD,A/CiCA,CAAhB,CUFkB,A2B3BlB,AK2CA,AvClDoB,AG4HF,CrB3GlB,AyBiBmB,A2B3BnB,AK2CA,CzDjCA,EoDVA,AlCPoB,CG4HG,CI1FT,AqC/BV,CrC+BqB,A+BnChB,AJQT,CIRE,AnC6HwB,CAApB,ErB3GN,AsBkD+B,AmCjB/B,ApC0E6B,CrB3G7B,CmBiIiC,CG/EC,AmCjBlC,EtCgGoC,CMhHD,A2B3B/B,C3B2BgC,AHiCF,AH+EI,EiC3ItC,CpDUA,AmBiIyC,CMhHhB,A2B3BhB,C3B2BgC,ANgHL,ADlJhB,ClBiBpB,AyBiByB,CPlCO,CCkJc,AsChG9C,CL3CA,C3B2B8C,ANgHE,CiC3IlC,EjC2IqC,CG/EjB,CH+E5B,ADlJkC,ClBiB9B,AsBmDE,AJpE6B,IImEP,CJnEF,CIqEpB,AJrEmC,ClBiB/C,AkBjBgC,COkClB,CzBjBK,AyBiBjB,APlCgD,CAAlB,CAAZ,EAAkC,MlBiBtD,EAA6B,AkBjBiC,CAAC,EIqEnD,CAAU,EJrEgC,CAAe,CAAf,EImEpB,AJnEsC,CAAlB,CIsE1C,AJtEQ,CAAd,SIsEgB,CAAV,EAAW;EiB+BvB,A9BxEF,A+C7BG,AzCqCD,CyCvCA,CxDoBE,AyBiBA,AqC/BC,AVID,AK2CA,CKjDA,CvBmGE,AlDvGK,AGFL,E+CyGJ,AdlEM,ANgHA,AiC3IJ,AlCPI,ClBiBC,ASWT,C8BwEU,AlBwBA,C7BjIC,AsEQA,AL+CA,ClBkDT,AjB9Bc,APlCJ,AGpCE,CHoCD,CUFC,AVEF,CAAV,COkCoB,AmCpBN,ChChBC,AJ0FA,CNxFC,AGpCE,AG4HF,CrB3Gd,ASWJ,AMQE,EUFmB,AHoCM,AJtEJ,ClBiBD,AyBiBA,C2B3BlB,AK2CA,CnCoB0B,AH4EN,AEtBd,C+BrHC,AlCPY,AG6HX,EI3FK,AjCvCX,A2BuJqB,AiC3Id,A/BsHC,CI3Fc,AHoCM,CAAC,C9B3EL,A4DYd,A/BsHC,ErB5Gb,ERtB0B,A4DYV,G9B+DU,CGpCQ,CAAC,AHoCvB,A8B/DS,C/BsHE,CAAE,CAAC,CI3FF,CAAgB,APlCrB,COkCK,CPlCO,AG6HD,C+BtHvB,C5DZmB,A2BuJkB,AiC3I5C,C3B2B6C,AJ2FZ,C7BjI7B,A4DW4B,A/BsHP,CFqBsB,CiC3I/C,EADY,AlCN2B,AG6HD,C+BtHD,AlCPG,C1BLd,A2BuJ0B,AErB5B,E7BhIpB,C6BgIwC,CH7Hb,CAAe,CAAf,COkClB,CAAb,APlCiD,AG6H1B,CH7HQ,AG4HzB,CH5Ha,CG8HX,CH9H6C,CG8H3C,GAAG,I7BjIT,A0BGyD,C1BH/C,A0BGgD,CCkJ1D,IDlJiD,AG8H9B,C7BnIG,A0BK0C,AG8H3C,CH9H4B,AG8H3B,C7BhItB,C0BEmE,CAAlB,CAAlC,AG8HW,CH9H1B,C1BFK,C6BgIwB,CAAR,IAAa,EAAd,IAAqB,KAAK,E7BnIxB,C6BmI2B,C7B/HjD,A6B+HoB,CAAD,CAFjB,E7BjIoB,CAAxB;AiBxLN,A+C6LC,AzFSK,C0CtMN,CgDgPG,A1CdD,CNlOF,AgD8OE,CzD/BE,ARjBC,EHJ6B,A8BsJ3B,A2C/ID,E5CHE,AG+HC,CrB9GA,AjCTO,AgD4BP,C+CjCG,CzEP2B,GAAL,CAAS,EyEOxB,A/FKb,CAAmB,CgD4BvB,C+CjCoB,C/FKhB,EAAwB,AmDRP,C4CGD,E5CHI,CAAC,ElBiBvB,CAA0B,CjCTxB,CsBZqC,A6BIX,C7BJyB,AtBYjB,EmDRL,C4CGb,EAAO,GzEPK,A6BIR,EnDQpB,EAA4C,AmDRL,CAArC,ElBiBsB,A8DdR,C9DcwB,A8DdxC,S9DcF,EAAqD,OAArD,EAA8D,UAA9D;AeoBH,AjBfK,EyC8EJ,AvClFC,AoCXD,AqB6CA,A1F3CA,CiCMA,CyBoBE,ApCvCA,A+DWA,Cb6FC,CxE3FG,AmDRD,AG+HA,CApBkD,CIzEjD,A2B5BE,A/B0HJ,CvB3GU,GwBgDA,C8B/DD,ArFEA,G0D0BX,AW5BF,AdgEgB,A8BhEA,ArFEA,CqEFhB,CX4BgB,E3BbZ,CwBiDiB,AxBjDK,G/BbF,A+BapB,CwBiDqB,CchEzB,AtCe6B,CsCf7B,CrEE4B,IqEF5B,GAAA,QdgEyB,CAAU,CchE7B,EAAN,EAAU,CdgEM,GvD9DhB,CuD+DgB,CcjEhB,EAAkB,EdiEG,IAAI,IcjEzB,EAA4B,YdiEH,CAAU,KADnB,IAEA,KAAK,IAAI,kBAAA,CAAU,KAHrB,EAIE;APnClB,A3BjCM,EYcJ,AXvBC,AtBaD,A+BaA,CT5BA,CkD0GE,AH7FA,A5CPA,E+CoGE,AdjEA,AN+GA,A2C/IA,AVIA,EhBAE,CG6FC,A/CpGA,AzBSA,AqBJO,AUiBP,C2BaG,AW5BF,AjB2IA,A2C/IA,AVIA,EUJE,AVIA,ArFEA,A+BaA,CyC8EC,AH7FA,ArEEA,AqBJP,AUiBO,CyC8EC,AdjEE,AHuCE,AlCrEG,AUiBT,CWMG,A+C5BA,AJMG,AhEDZ,AUiBG,CNtBL,CiCmCe,ArC9BK,CkCqEN,AvDjET,A+BaS,CsCfd,A0BJe,A/FMA,E0D0BI,A3BbF,C2BaG,A3BbF,CgEnBC,AhEmBF,CAAZ,CVjBH,C+B6IA,CM/Ga,ArC9Ba,AUiBL,C2BaG,AN+GF,A2C/IA,CvBiGC,AxE3FA,CwE2FC,AzC9EA,CAAC,C2BaG,A3BbJ,C2BaK,A3BbR,GyC8EE,AzC9EO,CyC8EvB,AdjEiB,CAAU,CciED,AjB1BrB,AvDjEC,A+BaoB,CAAC,CwBoDR,AvDjES,A+BaF,CAArC,C2Ba2C,GAAG,A1D1B7B,EwE2FN,AxE3FiC,CwE2F1C,AuBjGM,CAAJ,CrCgCkC,CqChCY,ErCgCI,IHuCtC,EGvC4C,GAAG,MAAnC,CAAX,CAAb;A3BZL,ETzBC,AGGC,AmEPD,ApFVA,AWmBA,AEGA,CIpBA,C+CmHE,AxE3FA,EwE2FE,AdjEA,A2B5BA,AlCPA,ECkJE,A2C/IA,A/FMA,CwE2FC,ArDlGP,AEGO,CFHP,AgCFU,COmCD,A2B5BA,CjC2IC,AwCzJV,ApFVA,CgEqHW,AoB3GX,AGUW,AVIA,A7ExBX,AR0BW,AqBJA,CmD+FC,AdjEA,AHuCI,AlCrEJ,E+B6IE,CAAC,AiC7IC,C3B8BZ,A1D1BY,AqBJT,CFHP,AnBOE,AqBJe,C+B6IP,AjChJV,CiCgJmB,ApDzIA,CoDyIC,AwCzJpB,ApFVA,C4CmKqB,AwCzJrB,ApFVA,A2CiBuB,CCkJH,CAAD,AjChJnB,CoCwE0B,AlCrEF,A8BLE,C9BKD,C+B6IC,AjChJ1B,AEGwB,CmD+FG,ApB8CA,CoB9CC,ApB8CA,A/B7IA,C+B6ID,CAAjB,E2C/IJ,CAA2B,A5CHE,CqBoGD,AhErHlC,C4CmKmC,AwCzJnC,CvEYwB,A8BJhB,CqBmG6B,AhErHrC,AasBO,CmD+FoB,AoB3G3B,AzESA,AEGA,CmD+FW,ApB8C4B,CAAC,A2C/IlC,CvBiGmC,EpB8CN,CAAS,A2C9IpC,C3C8IqC,CAAC,CAAD,A5CnK/B,C4CmK8B,A2C9IpC,EvBgGG,AoB3GX,CpB2GE,ApB8CiD,CAAC,CAAC,A5CnKrD,C4CmKoD,CAAjB,A5CnKb,C4CmKhB,EAAoD,ADjJlD,CAAgB,M3ClBxB,EAAgC,C2CkBxB,CAD2B,GAE3B,E4CEA,EAAyB,M5CFf,CAAC,G4CEX,CADF,Y5CDE,EAFJ;A9BML,AUkBD,EoDDE,A1DrBA,AWCA,EoCkGE,AH9FA,AuBbA,ApFVA,AWmBA,EuCiCE,AqC/BC,AVGD,AjDLJ,ApCOI,AsDsHA,ClB7HJ,CiCIM,AuBbA,CT6BN,AS7BO,ApFVA,CgEqHC,AW9ER,AdhBQ,AjB4IA,CiC3IC,AlELA,CuCiCC,C2B5BC,A7ExBE,AR0BF,AsDsHA,CkB3BC,AoB3GA,AtCsIA,CI5FC,AW7BA,C7DvBX,AWmBY,AiBAd,CAAA,ApCOI,CqFFY,AlELd,CuCiCE,AyBbJ,CX8EE,AW9EF,A3EvCoB,A8CgJhB,CAAe,CsCtIjB,CtCsIE,CezHF,AuBboB,CPWN,AjDFhB,AkB6HuB,CezHC,A7DvBtB,C8CgJE,C9ChJwB,A4BmB5B,U+CoBA,A/CpBS,G+CoBT,E/CpBA,EAAc,Q+CoBd;AnEjCI,EGcH,CAFD,CuCmCG,AyBbD,A/CpBA,ApCOC,AsDsHA,CAvBD,CelGE,AuBbA,APcA,A7ExBA,A2CkBA,EkBKE,AjCJA,CpBdQ,CoC8JN,ADjJA,CgCqBC,AdhBA,A7DvBA,A8CgJA,C+BxHC,ChBDN,AuBbO,AxDSA,CmBuEK,AHyEF,AiC3IF,A7ExBR,CAAS,C2EuCC,A/B4HE,CwCzJZ,CrCgFgB,A/C1FhB,A4BmBE,CgBgJa,CAAC,A5CnKF,C2EuCT,A/B4HY,C+B5HD,A/B4HE,CAAC,AhBhJF,AeDA,CCiJC,CAAD,C5CnKG,CAAC,C2EuCvB,A/B4H0B,ADjJF,CCiJG,CGzEC,AHyEA,A5CnKN,C4CmKK,A5CnKzB,C4CmKgB,C5CnKW,E+C0FI,CAAnB,AHyEoB,CAAjB,ApC9Jf,AmCaA,CIwEkC,AvCrFK,CoC8JJ,ADjJF,CCiJG,CAAC,AhBhJpB,CgBgJqB,AhBhJX,CgBgJU,A5CnKrC,C4CmKoC,GAAO,AhBhJzC,CgBgJ0C,ApC9J5C,CoC8J6C,CAAD,ApC9JO,CoC8JhB,AhBhJC,IgBgJe,CAApC,AhBhJ0B,CgBgJrC,GpC9JJ,CoBcoC,CpBdyB,EoBcZ,KAAnD,EAA0D;E+CqB3D,AhEnBD,AHfA,CmEgCA,CX+EE,AH7FC,AuBbA,APSa,A7EnBb,C6EmBD,CUCE,A3DDA,ApBdE,AsC2IF,CtC3IG,CwD+GD,ArBlGA,ECiJE,ApC9JE,EoBcA,C2DCC,AzC4HA,CkB5BC,ApB+CE,AEnBF,ECtDM,AnBvEJ,EoCiGE,AuBhGA,C3C+IG,CpC9JC,AsC2IhB,CkB5BF,AjB1BqB,AnBvEb,ApBdW,AsC2IF,CFmBG,AhBhJF,ApBdA,CwD+GC,AxD/GrB,AmCaqB,AG8HjB,EAAmB,EFmBI,ADjJF,AG8HrB,UCtDc,EwCtEP,C3C+IW,A2C/IgB,A5CFhC,CCiJmC,EAAnB,CAAd,G2C/IG,CAAP,I3DDM,CAAN;E+CsBJ,A3ExCC,AQKD,CRTA,CkDwDE,AqChCC,A3DDA,ApCMD,EwE2FE,AxD/GE,AmCaD,AG8HD,CtC3IG,C0C+CC,A1D3BA,E0D2BE,AN+GF,ApC9JE,ChBoBC,E0D2BG,AJ4FH,CFmBG,ApD1IA,AsDuHF,ECtDM,AHyEF,GAAG,CAAC,ApC9JA,AsC2IhB,CCtDmB,AHyEF,ApD1IA,AgBpBA,AsC2IF,CFmBG,ApD1IA,AgBpBF,CoC8JG,ApC9JvB,AsC2II,CFmBkB,CAAD,ApD1II,AsDuHF,CtDvHG,C0D2BE,AJ4FxB,CFmBwB,CAAC,CM/GE,AN+GD,CGzEZ,AHyEW,ApD1IE,CoD0IX,EpD1Ic,C0D2BrB,A1D3BY,CoD0IW,ApD1If,CoD0IF,CM/GqB,A1D3BF,C0D2BzB,AN+G0B,CAAC,CAAC,CM/GG,AN+GF,CAAD,CAAD,GAAO,CAAC,ApD1I3B,CoD0I4B,ApD1I/C,CoD0I8C,CAAT,IAAgB,CM/GrD,AN+GiB,CAAX;EgB3IR,A2BHC,AL+CD,AlFlEA,AQIA,C+EAA,CrC+CE,AW9BA,AuBbA,APcA,ArFEA,AmDPC,EqBkGC,AlB4BA,EI5FI,AW9BF,AgBCA,CAAC,ArElBA,C0C+CG,AU7BV,AhB4IQ,AsChGR,CtB5CA,AwBdS,AF0DT,A1F1CS,E0D2BK,A1D3BH,AsDuHA,Ce1HC,AdoEK,AHyEH,AiC5IF,A/ByHA,EsCvIE,A5FgBA,CqEHC,EjB6II,ApD1IF,CoEFjB,AsB4CA,A1F1CW,AsDuHP,CczHJ,AiBAE,AK4CF,ApC6EmB,CFmBG,CiC5ID,ArElBA,AsC2IjB,CsCvIK,A5FgBc,AgBpBD,C4EIC,A5EJF,AsC2IE,EI5FK,AW9B1B,AjB6IyB,ApC9JF,AsC2IrB,CtC3IiB,E0C+CU,A1C/CH,C0E8D5B,A1E9DqB,EAAU,C0E8D/B,A1F1CiC,AgBpBZ,CoDkBrB,CV6Ba,A1C/CqB,EoDkBlC,ApEEqC,C0D2BI,AkC3ChC,ClC2CI,AN+GS,CAAmB,AwC1JvC,A5FgBsC,E0D2BK,AN+GvB,CAAd,EsChGR,A1F1C6C,AgBpBxB,ChBoBZ,AgBpBT,CoDkBe,ApEEb,S0D2BA,EU7BF,EAA0B;ApDjB3B,EiB6BC,A2DzBC,AGYD,A/FIC,AmDPA,CyCdD,A5FeO,C0DiCL,AU7BA,AsB4CA,AtDjDA,ApCCF,AsD6HG,EkB5BC,Aa7FA,E3B6BI,AU7BN,ChCLK,CgBkJC,CiC7IC,AK4CA,CnCuBM,EnBxEb,CgBkJW,CsCjGC,CtDjDC,CiDKX,E3B6BgB,CzBlBpB,AoDXmB,CpDWnB,AmCXE,AhCLA,CsBkCqB,ANgHf,AsCjGN,ChCdE,ANgHM,CADF,CiC7IJ,CjC+IM,CAFF,EAGE,CnBrIV,CAAA,AmBkIQ,EM/GM,ANmHJ,CMnHK,CAAD,AN+GN,CM/GJ,CNoHM,EMpHU,EzBnBpB,AyBkBuB,ANgHf,EM9GJ,ANoHM,CnBxIV,GmBkIQ,EAOE,IMrHI,CzBpBH,AyBoBI,AN8GP,CM9GM,CAAV,ANsHM,GMtHU,EzBpBpB,AyBkBuB,ANgHf,EnBlIY,AyBqBhB,ANsHM,UnB3IV,AyBqBc,CAAC,CzBrBe,AyBqBhB,CAAV,CNsHoB,EMtHJ,CNsHO,CMzHJ,ANgHf,EM5GJ,UAAU,CAAC,CAAD,CAAV,GAAgB,EAJG,CAArB;A1D1BH,AgBnBD,AkCQM,AnBwBN,EqCfG,AwBbD,AFyDC,CtB9CD,AsB4CA,CzD/BE,AyBwBA,AWrCA,AgBEC,AjDLD,ALoBA,CsDjBA,Cb+FE,Ed1DI,AWrCF,CpCaC,AoCbA,AjCHA,AcJO,CK4ED,AHoFL,CGrG0B,A8BlDzB,E9BoEG,EctEV,AjByJW,AFhKT,CdIF,AcJmB,CQ4CJ,AWrCF,AdoDmB,CAAxB,AL3DN,EQ4CgB,AR5CK,EnBwB3B,CqBwIU,CACE,EADF,EMpHoB,ANsHlB,AFlKN,CjBoBF,AyBwB2B,CzBxBD,AmB4IpB,AFhK2B,EEmKzB,CAHF,EAIE,CAJF,CFhKJ,CEqKM,CFrKkC,IEgKpC,EAME,GnBlJkB,CAAgB,AiBpBxC,CEgKI,CFhK8C,CEuK5C,EM3HU,CAAmC,CNoH/C,EAQE,CnBpJR,EAAsD,AyBwBpC,CNoHZ,CMpHuD,CAA3C,AN6HV,CM7HR,GzBxBA,EAA+D,QmBqJzC,EnBrJtB,CmBqJyB,CATnB;ArBtIV,EELG,AmCVD,A9CZA,AGIA,AiEoDA,AtDlDC,AeDD,ADHA,CjBkBA,AGpBA,CsB+CE,AJqFA,EkB5BE,AH/FA,AgBEA,AnCTE,CzBEN,CAAA,A2BwKO,CA7BD,AD1IC,CI2EG,CjChFV,A+DWS,A/ByHA,Ce3HC,A/CTV,AgCoIU,AJlIE,GmBOC,AduEE,AH4FF,AF1KE,CIkIb,C7BhIF,CAAA,A4DOI,ChBFS,AgBEI,E/DXjB,CAAA,E+DWI,AlCNJ,CDHyB,EmCSA,E5DPzB,AyBF6B,EsBsGA,CAAC,AlDxG9B,AGIA,A4DOI,G/DXJ,AiCgFU,CcvEG,AduEuB,EcvEb,EduEb,CAA+B,C9B5E7B,C4CKgB,AnBP5B,I5BFA,AGIA,C+CoG8C,C/CpG7B,C+CoGY,CAAzB,CH/FmB,EG+F6B,AH/FvC,CAAT,CG+FA,EjBxBM;AJ1EX,ElBkBC,AGhBA,AcLA,EmBOG,A/CTD,AGIA,A4DOC,A/B0HD,EkB7BE,AtBtGE,EzBEA,A8B4EG,C9B5EF,C2BwKC,AF1KE,CImID,CAAC,CJnIG,CzBED,GyBFC,IImIX,CACE,C7BlIF,EAAqB,M+CoGM,CAAC,AtBtGjB,CIoIE,CAAC,AJpIO,CIoIR,CADb,AJnIuB,CAAC,CIqItB,AJrIqB,CAAZ,CAAb,QsBsG8C,ClB+B/B,CkB/Bc,AlB+Bb,CkB/BZ,AlB+BW,CAFb,EkB7BkD,AlBgChD,EkBhCA,SlBgCW,CAAC,CAAD,CAHb,EAIE,WAAW,CAAC,CAAD,CAJb,EAKE,EALF,EAME,EANF;AH9HJ,EDJE,EI2IE,EkBrCE,AlDzGK,AGKL,A8B4EG,AL9ED,CKmDA,CA2BE,EH4FA,AF1KE,CI2ID,CCxFH,ADwFI,CkBrCC,A/CpGA,A8B4EE,AL9EA,CE0KC,EAAE,C3BxKD,A8BiDT,ALnDO,CKkDT,CHwHe,CAAC,CAAC,AE/BnB,CF+BoB,AE9BlB,CF8BmB,C3BxKZ,A2BwKW,C3BxKC,A2BwKF,GAAO,CoBpExB,ApBoEyB,CAAC,CAAD,CAAT,AF1KP,EAAU,CzBEC,C2BwKY,AF1KX,CE0KN,AF1KO,CI4IN,AJ5IK,CE0Kc,AE9BlB,AJ5IR,CE0K2B,AE9BpB,AJ5IpB,CE0KyC,AE9BrC,C7B1ImB,A2BwKmB,CAAD,C3BxKV,A2BwKS,AE9Bd,GF8BqB,CAAC,CAAC,CAAD,CAAT,IAAgB,CAApC,CAAX,QE/BN,EAEE,gBAAgB,CAAC,CAAD,CAAhB,GAAsB,qBAFxB;EJ1IF,EsBsGG,AHhGD,AgBEA,A/BuIA,EhCnJ8B,A4BI1B,EmBME,A5CL4B,C4DO7B,CjCkKC,AF1KE,C5BJ2B,AgCmJ5B,CAAC,CJ/IG,C5BJmB,A8B8KlB,C9B9K2B,AGKL,C4DOlC,C/BuIA,CACE,CF0Be,AiClKF,EnCRI,CzBCsB,A2ByKrB,CiBpKC,A5CLqB,C4DO1C,AnCRsB,CzBCmB,C4CKjB,A5CLU,C2ByKT,GF1K3B,CmBM+B,C/CVU,CAAc,CgCoJnC,GAAG,GF0BD,C9B9KU,A8B8KS,EAAnB,CAAd,GE3BN,EezIwB,Af2ItB,CAAC,Ce3IH,ef2IE,GAAoB,UAFtB;EkBxCD,AuBjGD,AvFpBA,AWmBA,A+BJA,CsByFA,Cd7CE,ApCjDA,A+DaA,A/B2IA,E7BnJ6C,A8B+E3C,AL/EE,CzBAK,CiC4CH,AjC5CJ,C4DQG,AlEJP,A+BJS,CK+ED,AH2FA,AjCtKR,CqDkGS,AuBjGT,AzC8IS,CyC9IT,AvFpBA,A8CkKU,AJnJE,CsBsGD,AhErHX,C4CyLc,EAAE,AF1KA,CsBsGD,Aa9Fb,AnCRe,CmCQD,Cb8FP,ApBoEU,AjCtKnB,CiCsKoB,AjCtKpB,CiCsKqB,A2CrKrB,AVGE,A/B2IA,AJnJU,CQ4CU,AHmCJ,AH2FI,A2CrKtB,AvFpBA,A8CkKoB,AJlJlB,CsBqGmB,ApBoEE,A5CzLvB,C4CyLsB,CoBpEC,Ad1DE,AN8HJ,AiClKE,ClEJvB,A+BHM,CQ2CJ,AHmCqB,AL9EhB,CK8EH,AH2FwB,CoBpED,ApBoEE,AjCtK7B,CoC2E0B,AH2FI,AiClK5B,AnCPA,CsBwFF,ApBiF6B,AFzKlB,CEyKS,GEvBa,AJlJ/B,CEyKkC,AEvBF,CFuBf,C5CzLnB,C4CyLuC,AFzKpB,CEyKqB,CAAC,A5CzLzC,AWmBA,CiCsK0C,AEvBxC,CFuBuC,AFzKlB,CEyKiB,AEvBE,AJlJlB,CIkJtB,EFuB6C,A2CrK/C,AzC8I6C,AJlJ1B,CEyK6B,AEvB9C,AJlJ0B,CEyKqB,CAAD,A2CrKhD,C3CqKuC,A5CzLvB,C0CgBG,CAAjB,EEyKqD,CAApC,AFxKf,CEwKI,A5CzLR,EAAsB,CuFoBI,A7CHlB,CAAC,GAAL,CAAS,IAAT,C6CGJ,EAAoC,C7CHf,IAAI,CAAC,GAAL,CAAS,IAAT,CAAjB,GAAkC,IAAI,CAAC,GAAL,CAAS,OAAT,CAF1B,CAAZ;E5BJC,A4BQD,C5BVA,CoCmDE,AWvCA,A5CLC,AsEKD,AVGA,A7EvBA,AWmBA,AmC+IA,E+B3IE,AnCLE,EmBEA,Ad0EA,AwC1EA,AvFpBA,CuFoBC,AvFpBA,A0CkBE,CEuKD,CiClKC,A/B2IA,CAAC,AJ/IR,EEsKY,C5CzLD,CAAC,A0CmBR,CmCIJ,C3BoCc,AHmCA,CGnCC,AHmCA,AH2FE,AEvBjB,AJ9IA,CQuCc,CAAd,CN8HoB,CiBrKpB,A7DpBA,A0CoBI,CQuCgB,AHmCA,AL1Ef,CmBAgB,A7DpBA,CkD2DrB,CN8HyB,EFrKzB,CACE,IKyEa,ALzET,CKyEyB,ALzExB,GAAL,CKyEa,ALzEJ,CKyEyB,AH2FhB,CAAmB,EAAnB,A2CrKpB,CxC0Ee,AH2FT,CG3FQ,AwC1EmB,C7CC/B,CKyEyC,CAA7B,CAAV,CLzEkB,IAAI,CAAC,GAAL,CAAS,IAAT,CAApB,GAAqC,IAAI,CAAC,GAAL,CAAS,IAAT,CADvC,EAEE,IAAI,CAAC,GAAL,CAAS,IAAT,IAAiB,IAAI,CAAC,GAAL,CAAS,IAAT,IAAiB,IAAI,CAAC,GAAL,CAAS,GAAT,CAFpC,CAFF;AlCZI,EwD+GJ,AlDzGA,A+DYC,A/B2IA,AJ3ID,CmChBA,A/BkCA,CImBE,EWxCE,Ad0EC,AwC1ED,AvFpBA,AWkBK,CoC0EL,CGhCI,CcwDD,AxD/GO,AkCkBP,CmBHG,AjBsKF,AFnKA,GKuEG,AwC1EA,C7CGH,CsB6FK,ApBsEA,CiBtKG,EGgGA,CHhGG,A0BAR,CAAA,CvBgGX,EAAqB,AdxDE,AN8Hf,CiBtKgB,AjBuKd,CADF,CM9HkB,CNgIhB,EAFF,A2CtKG,A7CGH,C6CHS,CrCwCc,ANiIrB,AFtKQ,EmBHC,AjBsKX,CFnKA,CmBHJ,AjB0KM,AFvKH,CEmKC,CFnKgB,CEwKd,ApC1LN,CAAwC,EkCkBpB,CEmKhB,EAME,KANF,CpCrLJ,CoC4LM,CpC5L+C,C0CuD/B,CACtB,CqCzCO,C3CsKH,A2CtKkC,A7CGlB,EE2Kd,AF3KwB,E6CHvB,CAA+B,A7CGlB,CEmKhB,ApCrLJ,AkCkBG,CAAP,CQqC0B,ANuIhB,ApC9LyD,C+EexD,CrC0CP,CqC1CuC,SrCwCjB,CqCxCf,CrC2CP,ANoIoB,A2C/KpB,G3C+KuB,CATnB,UM9HkB,CAAxB;ARpCH,AnBgBK,EsDfJ,ArEnBA,EwD+GE,AdnDA,AjCnDA,AsEMC,AvFpBA,E6DoBC,AlDFA,AHbE,E0C4DE,AH6BF,CxBvDQ,CsCnBV,AjBgLI,C3BtLC,ANIA,CHbG,CuCyFD,CpC5EP,CiCkLS,AjClLA,AHbE,CSSD,CiCmDG,A3B1Bb,CAAmB,E2B0BH,C3B1BhB,EqB6JI,AjClLa,AYqBK,CqB8JhB,AjCnLY,CuC+CG,AjCnDhB,A8BgFH,Cc1EF,A5CNoB,A8BgFA,AHsGhB,CjClLJ,CkDGE,AjBiLI,CAFF,EAGE,CAHF,AjClLsB,CoC4ExB,CG7BJ,AH6B8B,AH0GtB,ApCnMwB,CAAC,CoC+L3B,C3BtLC,CAA2B,A2B2L1B,KiBrLN,A5CNK,A2BsLD,C3BtLN,A8BgFwC,CcxEpC,AjBoLI,ApCrMwB,CqDe9B,ArDfJ,EqDkBM,AduE0B,CHsGxB,CGtGwC,CAAhB,AH6GtB,EG7GyC,EHsG3C,CGtGwB,CH8GtB,CG9G4C,IHsG9C,CiB7Ka,CAAC,AjBsLZ,MiBzLN,EAIE,MAJF,AjByLoB,EiBpLlB,CjBoLqB,CiBzLvB,AjBgLI,EiB1KF,EANF,EAOE,MAPF,EAQE,eARF;EDIJ,AegBA,A1DzBC,AiEqDD,A1E9DA,AsC6JA,AvB3HA,CN9BA,C+C2GE,AdnDA,AvCjDA,EkDaE,AfqIA,AvB3HE,EyC6EE,AdnDA,AN6ID,C+BvKP,AnElCO,CwD+GG,AJ7FV,AegBA,A5BuDQ,AmC3BR,CtB5CA,ACMS,AqBsCT,ElBiDa,CjBtBC,GiBsBG,CAAC,AHvFd,CcUJ,A5BuDmB,CG7BC,AU1CpB,AegBA,AO4BA,CtB5CA,AsB4CA,ApC+FA,AvB3HqB,CwBuDC,CG7BC,AJiGF,CvB3HG,EwBuDE,AvCzFF,CuCyFG,AvCzFF,C0C4DG,EgCE5B,GlBiDiC,AW7EjC,AO4BA,A1E9DwB,CwD+GU,CjBtBZ,AvCzFW,CmEkCjC,ApDAoC,CqChBpC,AbuEQ,ExBvD+B,CyC6EN,AJ7FjC,ArCgBwC,CyC6EvB,AdnDf,EcmDyC,AkBjDjC,CAAV,A3D5BoC,CAAS,CoDA/B,AO4BH,A1E9Da,CAAxB,EekCoC,CqChBnB,ArCgBO,CoDAxB,CX6EiB,CAAf,AW7EiB,ApDAkC,GqChBrD,ArCgBA,EqChBuB;ApDjBxB,ESUC,ANGC,CAJD,CqDsGE,AdnDA,AU1CA,AegBA,AdVC,A0BVD,ALgDA,AlFpEA,A8CmKA,IkB9CM,AW7EF,AYpBE,ALgDF,AlFpEJ,CkDkEK,CcmDG,CJ7FD,Ad2IA,CAAC,CkB9CG,AW7EF,AO4BA,EtB5CF,CegBK,AYpBE,AzC+Id,CkB9Ce,AW7EX,CX6EY,AdnDhB,CqC9CiB,AvFpBjB,CkFoEA,ChCFiB,AyB1BA,A3ExCV,CkFoEW,EKhDI,ErC8CtB,AyB1BsB,A3ExCV,G4DwBL,EegBU,CfhBjB,AegB4B,CX6EG,AhErHxB,CgEqHyB,GuBjGf,CZoBA,A3ExCO,CuFoBxB,CvBiGsC,EW7EA,CX6EG,AhErHZ,CgEqHE,CAAhB,EAA8B,AW7E7C,EAA6C,C3ExCrB,GAAe,EAAhC,CgEqHQ,AhErHf,CgEqHA,ChErH4C,MAAM,CAAC,OAAnD;AwCwDE,AhChDN,EoDiBG,ACMA,AuBpBD,ApFVC,AWoBD,AiBDA,ALoBA,CqCjBA,AChBA,A7DXA,CgE0HE,AlB+CA,E6B5HE,AO4BA,AtDjDJ,ALoBI,CKpBJ,CgB2LM,CJvJQ,CwB8DN,AjBvBA,CDsEC,CsC1JT,AtC0JU,C6B5HC,AS9BX,AF0DW,ClBiDC,AjBvBA,APvCR,CAAgB,CZpCpB,C+CqBI,A/CrBJ,CsDiDgB,CnC0BC,CiBuBf,CAJmB,ApC9FrB,CoCmGE,AoB5GF,CrCoFqB,AqCpFrB,CxDSA,CsDiDI,A1CbA,EAA4B,G4C7ChC,E5C6CI,C4C7CJ,C5C6CqC,AjBhBrC,EKpBA,AkBiJE,AvB7H2B,GuB6HQ,ECtEhB,CAAU,CqCpFvB,CAAR,ErCoFQ,AqCpFG,CAAX,CrCoFqC,CqCpFvB,CAAd,EAAiB,AtC0Jf,UsC1JF,EAA6B,UAA7B,EAAuC;AzCSnC,EiBOJ,ACMA,A7D9BA,AwCsDA,EUUE,AyBzBC,AS9BD,AGSA,ALiDC,AtDjDD,AkBiJA,AvB7HA,C2D2BA,CtC4IG,E2C3LC,A3DAJ,CsB8CK,AqC9CA,A5CDO,EyCRL,AF0DA,ApCgGA,AvB7HA,CwBuDC,APvCA,AM6GA,CInGC,AVVA,CUUC,AVVF,C4C7CD,A5C6CT,COuCc,CG7BC,AH6BA,AwC3ET,E/CoCW,EOuCP,AwC3ES,C3DAjB,CkBiJA,CN7GF,C+CpCmB,CrC8CK,AJmGA,AvB7HtB,C2B0BuB,EkCvDhB,ElCuDP,CkCvDA,ClCuD6B,AP/C3B,AGkJF,CInG8B,AP/CO,IO+CH,GqC9CjB,EAAW,E5CD1B,EO+CyC,AP/CK,CO+CJ,GqC9C3B,CrC8CjB,CqC9CsC,CrC8CY,EAAE,CAApD,EAAuD,IqC9CtC,CAAjB,EAAmD;EHRpD,AxDSA,AYoCD,AGrCA,ApBqBC,C6D/BD,AxDSA,CoCoGE,ApByFC,AE1CD,EInGE,AqC9CA,ALiDA,ElBiDE,EAAE,AjBvBC,CG7BA,AJmGA,CN7GC,AM6GA,CyCjJC,ALiDA,A1CbA,CwB8DC,AxB9DF,CUUG,AVVb,CwB8DM,AdpDQ,AP/CA,CAAC,C4CCC,ALiDA,ChCHC,AVVA,CwB8DC,ClB+ChB,CkB/CkB,ExB9DpB,AM6GsB,CAApB,CkB/CsB,AkBjDb,CKjDP,ALiDqB,ClBiDvB,AdpDwB,AgCGf,AvClDG,CO+Ca,AgCGvB,AvClDJ,CqBmG4B,GdpDxB,EAA6B,CAAC,IAAI,SAAS,CAAC,IAA5C,EAAkD,EAAE,CAApD,EAAuD;EkCrD3D,AxDSA,AYmCA,AGrCA,EgCqBE,AYpBC,ALiDA,ApCiGD,CyCpJA,CvBoGE,EdpDE,AH6BC,CALD,APlCC,EmChBE,AYpBA,CrC8CG,CP/CD,CAAC,CgCqBC,CzB0BG,CJoGD,CAAC,CIpGG,AVVnB,EGrCA,CAAoB,EO+CI,MJoGtB,CIpGiB,CAAa,AP/CF,CO+CX,AJoGY,C6B9HtB,CzB0B0B,AyBzB/B,CzByBe,EAAmB,AP/ClB,CO+CD,CyBzBV,AhCtB2B,AGmJlC,CIpGuC,AJoGF,UIpGpB,AJoG8B,CIpG3C,GyBzBF,CAAqB,G7B6Hc,E6B7HnC,A7B6HuD,C6B5HrD,A7B4HiC,EAAuB,G6B5HnD,A7B4H4B,EAA0B,G6B5HjD,CAAV,GAAc,CAAd,GAAkB,KAAK,KAAL,CAAW,KAAK,GAAG,CAAnB,CADpB,EAEE,KAAK,KAAL,CAAW,KAAX,CAFF,CADK,EAKL,KAAK,MALA,CAAP;AnCiBH,EmCVE,A7DnCD,A+DaA,AK6CC,A3D9BD,CoDJA,AO4BA,ClBuDG,ApByFD,AD5LA,CqB2FmB,CASnB,AjBxBG,AwC3ED,AzCkJA,AvB/HE,EqBwKA,E2C3LI,AVIV,A/B8IU,AvB/HA,CT5BV,A+DaA,C/DbA,CS6BE,CqBuKA,CD5LW,CC4LC,AD5LA,AGmJE,CyClJC,EzCkJE,CyClJC,AVIpB,C/DbA,A+DaA,C/DbA,C6BQE,C4CCkB,A5CDE,GGmJK,C+B9I3B,A/B8I4B,G+B9I5B,AtDgBoB,CT7BpB,E6BQgC,AGmJ5B,ChC3JJ,CyESoB,AhEoBK,EgEpBE,GVInB,IAAR,AlCLsB,E7BRtB,A+DaY,AlCL+B,C4CCvB,CAAhB,KhEoBuC,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAA1B,CADpB;AiBmBF,EfrBE,AkDWA,A1DhCA,AiEuDA,A3D9BA,ET7BE,AiCoFC,A8BvED,EjCuLE,AD5LA,AGmJA,AvB9HA,CNzBJ,AMyBK,C2ByBC,AjClDN,C4DSO,CjCuLC,AD5LA,AGmJE,CFyCD,CM9IC,AJqGE,AvB9HZ,CAAW,EuB8HI,CFyCD,AD5LA,AGmJE,CIrGD,AjClDf,CAAA,GQqBA,AkBjBmB,ClBiBnB,AoDZE,A/B8IoB,AvB9HtB,CuB8HuB,CAAD,C7BvJtB,A4DSuB,A/B8IP,AvB9HO,CuB8HG,CAAV,C7BvJhB,C4DSE,EpDYF,AyB6BU,AJqGqB,CrBlI/B,AyB6B8B,AP9C1B,CC4LA,CD5L4B,CC4LC,CM9IvB,CAAJ,CjClDE,CiCkD6B,C3BzBrC,GNzBA,C6BuJ4C,C7BvJ/B,A6BuJgC,CAAD,CAA7B,GrBlIf,CqBkImD,ErBlInD,UACE,IqBiIE,ErBlIJ,EAEE,UAFF,EAGE,QAHF,EAIE,UAJF,EAKE,KALF,EAME,MANF,EAOE,OAPF,EAOS;EsBqDR,A8BvEA,AtDgBD,CwBKA,A8BvBA,CpDsBE,AR7BA,EHLO,AyESL,AzCmJA,ErB1HI,AR7BF,A2BgMA,AD5LA,C1BJC,AMyBA,C2ByBC,AqC9CA,AzCmJE,CrB1HC,C8DzBD,A5CAJ,AGmJM,CvB9HD,CEIG,AyBqBA,AjClDF,AMyBA,CuB8HG,EIrGE,AJqGA,ErB1HE,A8DzBF,AhEqBV,C2ByBa,A3BzBF,EEII,CAApB,AR7BI,AsEIe,AzCmJE,CIrGH,AJqGI,CAAD,CAAN,C7BvJQ,A0BInB,AGmJqB,C7BvJD,AsEIA,AzCmJT,CHnJM,ApBqBvB,GuB8HgC,C7BvJD,E0BIzB,CO8Cc,CP9CW,CO8CJ,GjClDzB,CiCkDkB,CAAZ,AjClDiC,E6BuJI,CAAC,CAAD,CHnJvC,AGmJS,EyCnJP,A5CAoC,C4CAxC,CzCmJgD,CyCnJD,W5CA7C,IGmJF;AvB7HL,EwBwDC,EiBqBE,AvCzEA,EXnC8B,AGM5B,A2BgMC,AD5LA,AGmJD,EkBjDI,AvCzEA,A8DzBF,EzCmJI,CkBjDC,AvCzEA,AXnC0B,CgC6JzB,C7BvJD,AsEIA,CvBkGG,AvCzEA,AXnCkB,CAAS,AgC6J1B,CkBjDC,AlBiDA,C7BvJZ,E+CsGe,CvCzEC,CuCyElB,ClBiDoB,CrB1HC,AqB0HA,CrB1HrB,AqB0HoB,CAAN,CAAU,CAAV,IAAe,ChC7JU,CAAc,EyEUjD,CAA4B,IzEVF,GyEU1B,CzCmJsC,CAAC,CAAD,CyCnJC,AzCmJ9B,IyCnJkC,AzCmJE,gBAA/C,EyCnJyC,CACrC,KAAK,SAAL,CAAe,aADsB,CAAvC;EVKR,AlEJE,EqDkGE,AvCzEA,AXpCA,AGOC,A0BIA,CAJD,C4CMG,AzCiJD,EkBjDI,AvCzEA,CoDrBV,AlEJE,CcyBU,AyBoBF,AvC7CR,AmCmJU,CkBjDC,ClBiDC,CrB1HC,CuCyEC,AdrDF,CJsGG,CkBjDC,Ca9FlB,A/B+ImB,CItGD,CcqDG,AdrDF,AvC7CjB,CAAA,CqDkGE,CAXmB,CAYnB,AvC1EqB,AqB0HA,CAAC,CAAD,CrB1HG,AqB0HT,CItGL,AJsGe,CAAV,CnCnJjB,GAAA,AmCmJgC,CItGD,GzBpB7B,QdzBF,CmCmJ6C,CAAC,CAAD,CAA9B,GItGgB,CAAU,AJsGW,MItG5C,EAAyC,QJsG7C;A+BxYN,CAAA,C/D2OG,AdRD,A2CmBC,C7BbD,A+DzOF,AlCgPE,ClB+BE,AdzBA,EiC2LE,AExCA,ErB1HI,EAAE,AqB0HA,CFwCD,CM9IC,AlDhEV,A8CsKY,CrB1HC,AzB5Cb,CyB4Cc,CqB0HC,CrB1Hb,AqB0Hc,M9CtKhB,A8CsKsB,C9CtKtB,A8CsKuB,CAAD,CAAN,CItGQ,AN8IpB,AExCsB,CItGD,AJsGT,CItGQ,AlDhExB,CkDgEU,AN8IiB,CM9IC,ClDhE5B,A8CsK+B,EFwC3B,CM9I4B,CAAC,MlDhE3B,GkDgEsB,AlDhE5B,A8CsK4C,CItGD,AJsGE,C9CtKlC,A8CsKiC,CAA7B,IAAoC,EItGvB,EAAlB,ClDhEV,EAAqB,CkDgEoC,IAA/C,IJsGN;AtC/JA,AmCaL,EkBWC,A/CrBA,AsECA,EpB2GE,AvCzEA,AR9BA,A2BgMC,A5C9MD,C4CuCyD,CAyKzD,A2C5LE,A5EFK,AmCoJL,EkBjDI,AvCzEA,AzB5CF,CQMQ,CsCgKJ,CkBjDC,AvCzEA,AR9BF,CiCkDC,AkCtDV,AtC4JY,CsC5JZ,AGUW,AvFpBA,CgEqHG,AvCzEA,CAAC,AqB0HA,CkBjDC,AdrDA,AWlChB,A5ChBc,C4CgBd,AfwIiB,CyClJD,CvBiGG,ChErHb,CgEqHJ,AvCzEmB,CAAC,A2DlCtB,C3DkCqB,A2DlCrB,AtC4JuB,CrB1HT,AzB5CQ,A8CsKE,C7BxJf,A6BwJc,CexIvB,A5ChBwB,A6BwJP,CrB1HU,AoCd3B,A7D9ByB,A8CsKE,CItGC,AJsGX,GItGc,AlDhEF,C8CsKG,C7BxJvB,CQ8BP,AR9B8B,AmEJhC,ClCsDmC,CAAC,AWlCpC,A7D9BkC,CoFUlC,EvBoBA,A5ChBS,CAAP,AsEMS,CAA4B,C/EdnC,CRNF,AQOF,ERP2C,A8CsKE,CAAC,CAAD,CItGd,AqC5CpB,AzCkJI,CItGkC,AWlCvC,AuBpBV,AGUI,GrC4C2B,AJsGqB,CItG1C,EWlCV,EAAkB,CrDxBd,EAEJ,GqDsBA,EAAwB,CrDxBpB,EAGJ,AsC6JI,GtChKA,EAIJ,MAJI,EAKJ,UALI,EAKM;AmCUZ,EiBIE,A3CVC,AWKD,ApBPA,CSHA,C+C4GE,AvCzEA,AoCdA,AjBkLA,AwCtMA,AGUC,EvFpBC,AWiBmC,AiBEvC,ApBPM,AsC2JF,ClBpJJ,CoCkGQ,AvCzEA,AoCdA,EDNR,A5DxBU,CgEqHC,AvCzEA,AmCpBX,AwBdS,AzEOmC,CHLhC,CsC2JD,CkBlDG,AvCzEA,Ad3ByB,AmCsJ3B,CrB3HG,AoDtBF,AlELmC,AHLjC,CwDyGC,AoB3GF,AxDSd,CAAA,C5BnBkB,CgEqHC,CJ7FnB,CI6FE,AvCzEmB,AmCpBrB,A5DxBqB,CgEuGA,AvC3DC,CuC0EpB,AvC1EmB,AoCdE,AlDbiC,AmCsJpD,CrB3HF,A2DlCA,AzEOuD,CiBEzD,CiCW0B,A7D9BA,E4BmB1B,EgCKA,AjDPuC,CkDaR,EDN/B,A5DxBqB,CAAa,AQYA,CAAC,ERZd,CAAjB,A4BmBK,EAAT,EAAa,CgCKH,EpDZwB,CoBOlC,ApBPA,EoBOiB,CgCKjB,ACM0B,EDNR,ACMhB,MDNF,EAAwB;ApBgCpB,EmCVJ,A1D9BA,A8B+EA,AqCpFC,AGUA,A/ERD,C4EJA,AGJA,CvBkHE,AvC1EA,AmCpBA,AhBwLA,AjChMA,AiBGA,E5BnBE,A8CuKA,Ec/IF,AhCLI,C+C0BN,A/C1BO,AYoCO,AhC3CP,CmEiCP,ClDDS,CyBmBC,AH+BV,CAAA,A/C9FW,A8CuKA,ClBpJC,AkBoJA,CrB3HH,CyBoBG,CAAC,ClDhEG,C2E6ChB,CAAA,A7B0HI,CAAe,CIvGD,AUxChB,AbsEF,CAAA,ADyEI,CNhHA,CxCvDO,A4BmBT,AYoC4B,AMgHP,C9CvKC,C4BmBC,AkBoJrB,E9CvKO,CAAP,AQYwB,C0CoDhB,AVTR,AhC3CyB,EiBgCpB,AeW6B,CmCVtC,ClDAI,CyBoBS,CyBpBb,AnEjC4B,EuCkF5B,APvCI,AhC3CiC,CiBiC5B,CeUmC,COuC5C,MG7ByB,CyBpBzB,GzBoB6B,CzBrBpB,CsBkDT,AvClF4B,CiBkCxB,CjBlCkD,C0CqDpB,CzBrBzB,EAGL,EjBnCwB,CiBgCnB,CjBhCqD,CiBoC1D,EAJK,AjBhCmB,EiBqCxB,AjBrC+D,C0CqDtC,CzBrBpB,AyBqBuC,EzBf5C,CAAC,CjBtCuB,CAA5B,E0CqD6B,CAA2B,GzBrB/C,CyBqBoB,CzBdzB,GAPK,EAQL,AyBa8D,CAAC,CADvD,CzBpBH,AyBmBC,CzBnBR,CyBsBU;A1CrDb,EiByCE,AmC7BA,AwBbD,AGUA,AL+CA,AvEpDC,A6BuCD,Cf3BA,AmCNA,AjDRA,CqDwGE,AWzEA,AdhBA,AdiEA,AHkHA,EhB7LE,AYoCE,AMgHF,E6B1HI,AdhBF,ArB0BE,COuCD,CmC1BP,CAAA,A1CbW,EZpCA,AkBoJA,CIrGC,AyBrBE,A/C1BV,AkBoJQ,G6B1HK,AnCUA,CAAC,CUWD,AVXA,C0CajB,A1CbW,AMgHP,CoCnGJ,ApCmGmB,C6B1HG,CdhBpB,ArB0BqB,AMgHnB,Ee1ImB,Af0IA,EAAnB,CIrGQ,AyBrBV,C5BiDA,APvC2B,COuCD,APvCE,CUWD,AVXA,CAA7B,E0CaA,ChCFY,EH4BV,AmC1BF,CnC0BoC,SmC1BtB,CAAd,EAAe,SnC0Bb;AvChFJ,EiByCE,AmC7BA,AjDRA,A6BsCA,EmCVE,A5BiDA,AmC1BA,AtDjDC,EiCUC,A7D9BA,AwCwDE,AMgHF,E6B1HI,AnCUA,COuCD,CcjEG,A7D9BF,CkFqEC,A1CbE,CUWA,CJqGA,C9CxKH,A8CwKI,Ee1II,AqBuCF,C1CbG,CAAC,CqB1BC,ArB0BF,CAAN,AMgHP,CAAe,E6B1HI,AnCUA,AMgHnB,Ce1IoB,Cf0ID,C6B1HG,A3E9ClB,C8CwKJ,CoCnGK,AlFrEO,C+C+Fd,AmC1ByB,A1CbE,C0CapB,A1CbqB,CmCVC,AOuB7B,A1Cb2B,COuCC,APvC9B,CqB1BmB,A7D9BE,E6D8BjB,CdiEF,I/C/FM,CAAJ,EAA2B,G2E8C7B;E5BkDD,AmC1BA,A1CbD,COoCA,AmCzBA,ClBmDE,AWxEA,EdhBE,Af0IA,EkBjDA,AWzEI,A3E9CF,CwCwDC,CUWE,AWrCL,CGyFG,AxB/DE,CmCVG,C3E9CD,A8CwKA,CkBjDD,AxB/DE,AMgHA,C6B1HG,CnCUR,CwB+DH,ExB/Da,CmCVG,A3E9Cd,CgEuHW,AxB/DE,ExCxDE,A8CwKjB,CkBjDgB,AxB/DE,CmCVpB,CnCUF,CwB+DuB,AhEvHjB,GgEuHF,AHzFA,EACE,GGyFA,GAAG,GAAG,CAAN,IAAW,CH1Fb,EG0FgB,AHxFd,CAFF,EG0FmB,AHvFjB,GGuFD,IAA0B,GAAG,IAAI,CHvFjB,CAAC,CGuFjB,IAAyC,CH1F1C,EG0F6C,AHtF3C,GGsF8C,CAAN,EH1F1C,EG0FqD,AHrFnD,GGqFsD,GAAG,AH1F3D,EAME,CGmFF,KHzFA,CG2FE,CHpFA,EGoFG,GAAG,CAAN,IAAW,GAAG,EH3FhB,CG2FmB,GAAlB,IAA0B,GAAG,IAAI,GAAjC,IAAyC,GAAG,GAAG,CAAN,IAAW,GAAG,GAAG,GAF3D,CADF,EAIE;AxBjEL,E1BhDC,AoE8DA,EPxBE,A/BiKA,AhB3LA,EoCsGE,AHpFA,A7DtCC,A8CwKD,E6B1HI,A/BiKF,AhB3LA,CgB2LC,EiBzKE,A/C9BT,CAAA,CcYW,AkBoJA,CAAC,ElBpJE,EiCkBV,CcQe,C/BiKD,AEvCd,ChChKJ,AcYmB,C+C0BG,A7DtCtB,C8BuMqB,C+BjKnB,E/BiKI,KAAuB,CAA3B,EAA8B,E9BvMhC,EcYc,CdZd,AcYqC,EAAvB,CAAZ,SdZF;A8D0CF,ApCQA,EOqCA,E4BhDI,AdRC,A/C9BD,A8DyCJ,A9BuHK,CAfD,CkB/BE,ApBqFA,EoBrFE,AW5EA,ACGR,C7B6CA,CG5BU,CcwDC,AlDlHA,A8BuMA,EoBrFL,CdxDQ,AyBpBA,C7DtCH,E6DsCM,CzBoBC,AyBpBd,CzBoBe,AH4BnB,IHiHM,CAAkB,CAAlB,EM7IQ,AN6Ia,CM7IC,AN6ItB,C9BvMK,C8BuMmB,CM7IhB,AN6IR,C9BvMF,CoC0D6B,AN6IA,IAA3B,EAAiC,IM7II,AN6IrC,CM7IsC,CN6IC,GM7I/B,CN6IR,KM7IgD,CAA5C,EAA+C;AHxSzD,A6BuRA,C7BvRA,Cc6QG,A/C9BA,AiC/OsB,Cc8PvB,A/CjBA,C8ByMG,AhB5LD,AkBsJA,EkB/CE,AhE3HA,EgE2HE,ApCvGA,CAAC,C5BpBC,CgE2HC,AhE3HA,A8C0KA,CIvGC,AJuGA,CkB/CN,CpCvGF,CmB1PJ,CAAA,AnB0PgB,GkBsJZ,E9C1KE,EAAiB;A4EiDvB,E9DtCE,AsECA,AtC+JC,E6B5HC,EX6EE,ApCvGA,E5BpBE,C2E8CC,CCET,ChD5BW,CsB+CC,AkCxDV,CTmCW,ASnCX,ApFXW,C2E8CC,A/C1BA,EgD4Bd,CDFiB,CAAR,A/C1BH,AgD4BN,C5EhDQ,C2E8CY,A3E9CA,E2E8CE,ASnCpB,CAAA,ApFXM,E2E8CiB,A3E9CA,I2E8CI,CAAC,G3E9CtB,G2E8CJ,EAAkC,CAAC,GAAG,EAAtC,EAA0C,CSnC5C,CTmC8C,CAA5C,CSnCF,CTmCiD,SSnCxB,UAAzB,EAAmC;EvB4BrC,AeSmB,EZ4Ed,ApBoFD,AwCpMA,CpBqFmB,CA4BnB,AW9EE,A3E9CC,A4BoBD,EgB2LE,AwCpMA,CvB2BR,AjByKS,AwCpMA,ClCwDE,AyBrBC,C/C1BD,AgD2BQ,CAAA,CDDJ,CSnCD,CrCmFC,C4BhDG,ACCC,EAAA,EDDG,A/BiKF,C+BjKG,CAAD,ASnClB,CTmCE,AdRN,AjByKuB,CwCpMC,ARoCL,CAAA,ChCgKX,EhB3LF,CAAuB,EgB2LE,AhB3LzB,CgB2LF,EAA8B,ChB3LC,KAA7B;AiCtQN,ArDgQM,CqDhQN,CAA6B,AekS3B,A9B0HA,EkB7CE,AhE5HC,A4BoBA,CAHD,C+C6BE,A/BiKA,AwCpMA,ElCwDG,C1CtDO,AsC4JP,C6B3HG,C/BiKD,AhB3LA,EwDTE,ExDSE,CkBqJC,CsC9JH,AtC8JI,Ee5ZjB,CciSsB,AdjStB,AjCuQoB,G+C0BK,A/BiKnB,AEtCJ,CFsCsB,CAAlB,AhB3LmB,CAAC,C+C0BG,A/BiKF,AhB3LhB,CgB2LL,ChB3LuB,CgB2LC,CAAxB,CpClMA,CoCkM2B,ApClMO,IoCkMlC,CpClMA,CoCkMiC,CpClMQ,GoCkMzC,AwCpMO,ExCoMgC,AwCpMP,CTmCb,CACjB,E/BgKF,CpClMA,EAAmD,G4EF5C,CAAP,MToCiB,CAAC,KAAhB,CAAsB,MAAtB,EAA8B,GAA9B,CADiB,EAEjB,MAFiB,CAAnB;AdPN,AfmIC,E7B1JC,AjBfC,AQaD,CRxBA,CgEuIE,ApBmFC,AwCpMA,CAFD,CTwCE,A/C7BA,ApBPE,CSEN,CAAA,GmEJS,C5EEG,CoBOD,CAAP,CpBPW,EmEoCA,A1DlCf,C0DkCgB,A1DlChB,I0DkCI,CAAiB,C1DlCrB,GAAA,M0DkCI,CnEpC8B,CAAC,ESE5B,QTF2B,CAAlC,CSEA,EAAmB,MAAnB,EAAyB;EiEuDzB,AvEpDA,AHJA,ESEE,AWKC,E+C6BC,AStCA,ElCwDE,AjCpDE,CNER,AHJO,C0EwDP,AvEpDA,CuEoDA,ChCFY,AyBlBF,CStCC,ETsCE,GAAT,AStCY,CzEMhB,CuEoDA,AvEpDA,AHJkB,CSEG,AiEsDrB,A1ExDmB,GSEK,EiCoDE,AkCxDtB,C5EEc,E0CsDW,AjCpDA,ATFF,EGI3B,GAAA,AHJkB,C0EwDlB,A1ExDA,E0CsDqC,CAAC,AgCEtC,EjEtDwB,EAAtB,INEF,IuEoDA,chCF6B,CACrB,IAAI,CAAC,SADgB,EAErB,YAFqB,EAGrB,SAHqB,CAAvB;AVVF,AhC3CL,EiByCC,AzBvDF,E2EkDK,A/B6JD,AwCnMC,AF0DD,AvEpDA,IuCuDI,ANsIA,C5C/MR,AwCyDgB,E0CaL,ChCGC,IgCHI,C1CbV,CAAmB,CUgBN,ANsIf,A5C/MJ,EyBuDE,AmBwJmB,CnBxJnB,AyBkBoB,EVhBhB,EAA2B,CUgBzB,CgCHJ,GzDfF,CAAA,AeEI,EAAiC,YfFrC,GAAA,UAAe,KAAf,EAAsB,UAAtB,EAAkC,YAAlC,EAA8C;AzBpOhD,AQ6LA,CR7LA,CoF0LG,AGUD,ALgDC,AlFpPsB,AwCuOvB,C4CnDA,AF8DA,ClBuDE,AvCpEA,ARvCA,AWKA,EgB0LE,AjC9LK,EcsCD,ARvCF,AWKE,CYoCD,E+CnCP,CAAA,C3DDa,AYoCF,CAAC,EZpCI,EYoCT,CfFY,AeEF,CZpCG,CXLD,AsEMnB,AvFpMF,CyBqOwB,ARvCF,AsEMpB,AvFpMF,C4BmMyB,GHkCD,EGlCN,CoCsGW,CAAC,CpCtGG,E2DC/B,CtENM,AuByC0B,CvBzCC,AuByCA,C+CnCjC,E3DDsC,EAApC,CAbe,AYiDe,CfFV,AGlCoB,CYoCD,CfDrC,CRxCE,C+C2GsC,A/C3G1C,AsEMU,CAAZ,CvBqG2B,A/C3GmB,C+C2G5C,AvCnEO,A8DlCM,A/CmCiB,C+CnChC,A/CmCO,CAAP,CwBkEkD,AuBrGhC,CAAlB,CvBqGE,CuBrGmB,UAArB,EAAiC,G9DiCX,EAElB,KAAK,A8DnCT,C9DmCU,C8DnCmC,GAA7C,C9DmCI,C8DnC4C,C9DiC1B,CAApB;AeGH,AGpCK,EyCRJ,AF0DA,ANzBA,EZ6EE,AvCjEA,AkDTA,AY3BA,EtENE,A2B+LA,AjC9LA,EcyCI,AyBcF,AqClDE,C5CDM,CC0LN,C+B9JC,A1DjCA,A2B+LA,AjC9LA,AiE6BT,C1B0BU,EvCvDN,CcyCW,AdzCF,AiE6Bb,CAAY,CWxBK,C9DoCC,CR1Cd,CsEMgB,CAAC,CZ2BnB,A1DjCkB,A2B+LA,A2CzLA,C9DoCG,AdzCF,C4EKG,A5ELF,CiC8LC,A2CzLH,CrCkDd,AjCxDF,CsEMuB,AXwB3B,C1B0B0B,ANuIlB,A2CzLY,CvBqGO,AuBrGzB,AXwBqB,CZ6EK,AvCjE1B,EdzCE,AgCIA,CC0L2B,ADzL/B,CCyLI,EAA8B,SD1L9B,CqBsGwC,CrBpG5C,CqBoG2B,CAAzB,GAAgD,EAAhD,KrBtGE,EAGJ,gBAHI,EAIJ,gBAJI,EAIY;AHkClB,EmCTG,A7DxCD,A6BiBA,CgCOA,CX0FE,AvChEA,A8DrCA,A5EPA,AiBKA,AgDyBF,EZ8EI,A/C3GA,EQ2CI,AmBoJF,A2CzLE,A3DFF,AgDyBN,CZ8EO,CdnDC,CcmDN,AlDlHF,CAAA,CWkDa,AR3CF,A2B+LA,AhB3LA,AgDyBX,CjCnBY,C3C3BC,A2C2BA,ClBiCG,AmDbd,C1B0Ba,AtBpDA,GsBoDG,AqClDE,C9DqCC,AXlDrB,CAAA,AcWoB,AgD0BlB,AjCpBF,C4CJuB,AXwBrB,AjCpBmB,ECqLf,C3B/LkB,A2B+LA,C3B/LC,A2B+LnB,AgCjKJ,CWxB0B,AXwB1B,CnDac,AmBoJW,CAArB,CnBpJJ,CXlDF,A8BsM8B,AgCjK5B,ChCiKI,AhB3LJ,AeM6B,EO8CE,ApC/DjC,A8BsMiC,AhB3LA,CsBoDC,CAAC,A0B1B1B,C3D9BE,CAA0B,A2B+L/B,CMvIgC,CAAL,ANuIM,AgClKvC,E1B2ByC,CP9CpB,CCqLf,CDrLoC,C7BjB1C,A8BsM6C,E3B/LlC,EAAsC,A2B+L3C,MMvI2B,AjCxDtB,CiCwDH,AjCxDJ,AsEMmB,CACnB,SADmB,EAEnB,UAFmB,CAArB;A1BgBJ,EcaE,AhEjCC,CAJD,CqD8GE,AvChEA,AXlDA,AGOC,AsESD,AXsBA,AjCrBA,EqBiGE,ApBoFC,AhB3LD,EHuCI,AyBaD,AqC/CC,CvBkGD,AHtFA,EGsFL,EpCvGS,CAAP,C2DKW,C5CCD,CAAC,C4CDG,C9DkCC,GAAG,EkBjCpB,CAAqB,ElBiCI,AoCtB7B,CpCsB8B,AoCtBF,E0BZI,GACxB,C1BWR,ClBXmC,CkBWD,CpCsBV,C8DjCX,C9DiCT,OkBjCqB,EAAqB,K4CAtC,CAAqB,YAArB,EAAmC,UAAnC,EAA+C,UAA/C,CADwB,GAExB,SAFJ;E1BaF,A5CrBC,ANED,CMTA,C+CkHE,AuBhGA,A3DPC,EoCuGC,AHtFA,A/C7BK,A6BkBL,E4CCI,CvBgGD,CrBjGH,CqBiGF,CHtFF,A0BVY,GAAG,IAAI,KAAK,C5CDpB,EAAiB,M4CCN,CACX,I5CFA,EAA8B,G4CCnB,EAEX,M5CHA,C4CGO,C5CHoC,I4CG/B,SAAZ,GAAwB,A5CHxB,kB4CGwB,CAAU,IAAlC,GAAyC,kBAAA,CAAU,KAFxC,EAGX,OAAO,KAAK,SAAZ,GAAwB,OAAxB,GAAkC,EAHvB,EAIX,KAAK,WAJM,EAKX,KAAK,gBALM,EAMX,KAAK,WANM,CAAb;EtETF,E+C0GE,AvCjEA,A8DxBA,EvByFE,AlDpH6B,A8BuM7B,ADpLA,ElBgCE,AyBaA,AqCrCA,CvByFC,AuBzFA,C3C4KC,ADpLJ,CqBiGF,AlDpHoC,A8BuM7B,CMvIC,AqCrCR,CrCqCS,CpChEsB,CAAS,AyE2B7B,GAAX,C9DwBA,CyBaI,CzBba,CyBaC,ANuIA,GAAG,ADpLnB,EAAiB,CCoLb,I9BvMkC,CAAc,A8BuMzB,CAA3B,EAA8B,EDpL9B,E7BnB6B,A6BmBC,WAA9B,EAA2C,gBAA3C;EqBkGH,AJjGD,ACUA,CGoBgB,CAoEhB,AlDtHE,AyE4BA,A3DfA,AeOC,CAHD,ClBmCE,AoCtBA,EjB0KE,A2C5KA,CAAC,C9DwBG,AyBaF,AU7CR,CAAA,AhCPS,CiCiBC,CjB0KC,EhB3LF,CiCiBK,CAAd,CXmCgB,CAAC,AWnCA,CDVjB,CAAA,IhBoLM,A2C5KJ,C9DwBwB,AmBoJF,A2C5KA,C3C4KlB,EnBpJuB,AmBoJF,AhB3LlB,CgCOT,AhBoLM,ChB3LU,CgB2Lc,CnBpJD,AmChC7B,AhBoLM,EAA2B,ChB3LZ,GgB2Lf,AhB3LkB,EgB2Le,EgBpL7B,C2BQc,A3DfK,CgB2LvB,A2C5K4B,E3C4KW,EnBpJhB,AmChC7B,CV6CQ,CzBZF,AyBaI,AU9CQ,AhBoLZ,A2C5KJ,EAAwC,ErCsC5B,AtBrDL,CsBqDM,AtBrDb,E2De6C,G9DyB/B,CAAC,AmCjCjB,EAA6B,CV6CrB,EAEE,OqCvCgC,CAAsB,IAAtB,CAA2B,ErCqC7D,EAGE,AqCxCgC,CAAxC,G9DwB2B,EAEvB,KAAK,CAAC,AyBWJ,EAIE,GzBfJ,EAFuB,CAAzB,GyBaI;EpChEP,AcaA,AeOA,C7BtBD,AcHA,AeoBA,CiBKE,ACUA,A0BFA,E9D4BE,AmBgJC,EMlIE,EWxCC,C0BFC,E1BEE,E0BFT,qB1BES,CAAe,EAAxB;AlBTH,EgCsBC,AdZC,A/C7BD,AsEIA,AGuBC,A3DdD,CiCcA,A0BpBA,C3BYE,AhBoLC,AgCjKD,E1B+BG,EUlDG,CesBR,AdZO,AeSD,CDGN,ACHO,EQlCP,ARkCE,CfTS,AuBzBX,KxBekB,CesBlB,AdZiB,CcYjB,CftBqB,CwBfrB,CvByBqB,AuBzBrB,CvByBO,CDVc,CCUG,QDVH,EAAc,MAAd,CAAnB,GesBF,ESrCA,CTqCA,ESrCA,UTqCA,ASrC0B,UAA1B,EAAoC;A5EGhC,AmCcN,EqB+FE,ApBoFC,A2C3KD,ALkCA,CtCnDA,CM0DG,AUlDD,AesBA,AdZA,AuBzBA,ARmCA,EnDeE,EmCnCI,AesBF,ASrCJ,C5EEY,CiBgDN,AoCzBA,AqBiCR,CzDRS,AyDQT,EPrBW,AdZA,EpCyBF,AjBhDL,CAAiB,GoDaF,CsB2CnB,CAAA,CtB1CI,CwBhBF,A5EEE,E4EDA,A5EC0B,EwD6GL,CAAC,CoB9GtB,CToCE,EfrBQ,ApDdV,CoDcW,CeqBiB,AnEnCK,EqDuB1B,CAAe,EcYW,CdZnC,CpCyBO,AmClCL,EnCkCwB,CuC6Dc,CoB9GtC,CpB8GqB,CAAzB,AJ/F6B,AwBfd,AFyDf,GlBqDgD,AW1EhB,AOqBhC,ElBqDA,AW1EE,ASpCkB,E3DiDX,AkDb2C,ElDaX,IyDQd,CtB1CE,CAAM,GwBfpB,EAAX,EAAiC,AFyDrC,EAAsC,CzDR7B,CAAL,AmClCA,EnCkCwD,CmCjCpD,GwBhBJ,CADF,EAEE,EAFF,AF0DF,CExDO,CxBeW,AsByCmC,UAArD,EAA+D,CtBzCvD,EAAyB,cAAzB,EAAyC,MAAzC,EAA+C;EI+FvD,AHtFC,A5CrBD,A2BgMA,ApClMA,CqDqBO,CuBxBL,AF2DA,EtBzCQ,AeoBN,C1DjCJ,CQ8CM,AR9CN,AiEsDM,CrBjCC,ArDtBL,CoDcc,AeoBN,GdZC,EpCyBE,CjB/CJ,CSCT,AiEsDe,A1EvDL,CSCV,AiEsDgB,A1EvDP,CiB+CH,AoCzBW,AqBiCF,A1EvDb,C0EuDI,CtBzCqB,ECQN,AqBiCA,A1EvDL,CoDcc,ACQvB,CcYkB,CdZD,A5CrBxB,C+C2GyB,CAAC,AW1EE,AOqBF,CjEtD1B,CTDuB,CAAC,CAAD,CmEkCU,AnElC/B,CoDcsC,CAAC,AsByCvC,EAAiC,A1EtDjC,ISAF,G+C2G0C,AJ9FZ,ApDbrB,CAAC,CwD2Ge,AJ9Ff,ApDbD,CwD2GT,AxD3GE,CmEiCE,EX0E4C,CxD3GhC,CwD2GhB,MxD3GuB,CAAC,CAAD,CADrB,IAEA,OAAO,CAAC,CAAD,CAAP,IAAc,OAAO,CAAC,CAAD,CAFrB,IAGA,OAAO,CAAC,CAAD,CAAP,IAAc,OAAO,CAAC,CAAD,CAJvB;AAMD,EwDwGC,Ed9CE,AWxCA,A5CrBA,AmEFA,E3DgDG,AmCjCK,AsByCN,EhCOI,Cc8CD,A/C3GA,C2CaS,ACQR,AqBiCA,CExDC,EvBuBE,EqBiCE,CExDC,CnEEZ,EiC6DiB,CjC7DD,EiC6DI,Gc8CtB,AJ9F+B,A3Cb7B,AmEFA,CFwDM,EtBzC0B,GsByCL,CAAzB,EAA4B,EhCOI,AWxCzB,CAAe,CDRkB,CVgDL,AUhDM,ECQ3C,YXwCA,AUhDgC,CV1DJ,CA4G5B,AUlDQ;AI+FX,AxBlEK,AhCrCN,EqDiBG,A5CrBA,AmEFA,CnEAD,AmENA,C3DsDG,EmCjCO,AemBN,EOsBE,C1CbQ,CoB5BE,AemBR,EOsBI,EPtBJ,CfnBa,CsByCL,EtBzCQ,CsByCL,GtBzCK,MsByCI,CAAC,CAAD,CAAT,E1Cbf,C0Ca8B,A1CbK,C0CajC,ItBzCkB,EAAU,GemB1B,AnCSJ,EmCT2B,AnCSoB,OAA/C,EAAsD,CoB5BlC,IAA6B,CemB7C,EAAwC,CfnBK,AemB7C,EAA2C,KAAK,KAAhD,EAAuD,GfnBV,EAAU,AemBK,MAA5D,CAAJ,EAAyE,EfnBxB,CAA3C;AIgGZ,E/C3GE,AmEFA,AzEEA,A6BwCA,EUqBE,A0BhCA,EhBjBQ,EViDR,AyB9BI,AOsBA,CvErDN,AiE6BM,ApCWC,CoB5BG,AjDZV,AiE6BO,EMwBK,CPtBD,CCFT,EMwBc,GAAG,AvErDnB,CAAA,I6BwCsB,CAAC,CUqBrB,EACE,AUlDM,AsByCkB,CAAC,CtBxCjB,AsBwCgB,CAAT,EhCSV,CgCTyB,AvErDlC,CuEqDM,A1CbgB,EmCThB,AhE/BN,A6BwCmC,GmCTG,EfnB5B,EAEE,GV+CV,EAEE,AvC/DJ,I6BwCmD,CAAC,CmCT9C,IzBgCQ,AUjDa,CViDZ,AUjDa,CAAD,CAFjB,EVmDN,AUhDQ,ApByBuC,CUuB/B,CAAhB,AVvB4D,IUuBvC,CAFvB,EAGE,AVxB+C,CAA7B,CAAtB,IoBzB2B,CAAC,CAAD,CAHjB,CVoDI,CAAC,AUhDH,IVgDR,CAAgB,AUpDV,CVoDN,CU/CQ,CAAC,EV+CY,CAHvB,EAIE,AUrDM,EAME,CANF,CVqDF,CU9CI,CAPF,EAQE,CARF,SViDR,EAKE,IAAI,cALN,EAME,QANF,EAOE,CAAC,KAAD,GAAS,CAPX,EAQE,CAAC,MAAD,GAAU,CARZ;AVpBH,AG/BK,EkBUJ,EpC0BE,AyB0BA,AvCvEA,AiE8BA,EhBTQ,AeUL,CAFD,ClDgBI,AyB0BA,AgClBF,CzDRG,AkBpCK,CiBYJ,EnCwBE,CkDdD,EOsBE,CzDRG,CAAC,EyDQJ,GzDRD,CAAW,AyB0BA,GAAG,EP9DtB,EO8DsB,CP9DO,EiBYvB,CnCwBwB,CAAC,AmCvBvB,CnCuBsB,CAAtB,CAAV,MyDQW,EACL,EtBjCE,CVkDgB,CUhDd,AsB8BC,ChCkB+B,AUlDlC,CsBkCF,CtB/BI,GV+CqC,AgChBrC,GAAG,CAFF,EAGL,ItBhCiB,AsB6BZ,CtB7Ba,CsBiClB,EhCckB,CAAxB,CgCdU,CtBpCF,EAIE,AsBgCG,CAJF,EAKL,GtBrCE,EAKE,QsB2BC,CAAP,GtBhCI,EAME,cANF;ApBqBZ,EGhCE,ElBoCE,AyB2BA,AWtDK,EDUG,AsB+BL,AvE5DI,AgCUT,ElBoCQ,AkDdF,ClDcG,AyB2BF,GzB3BK,CmCjBK,AeGN,GlDcK,CAAC,AmCjBA,IV4Cf,CzB3BU,AyB4BR,CzB5BmB,CkBpCvB,IO+DE,EAEE,IzB7B8B,CAAC,AmCjBlB,CnCiBiB,CAAtB,AmCjBkB,AeGxB,ClDcJ,EkDdoC,KzByCpC,EAGE,AU/Ca,EAAyB,MeGW,CAAC,CzB4CxC,CAAC,EU/CE,CeGqB,CfF1B,CeEN,EzByCJ,EAIE,KAAK,GUhDQ,EAEL,QV8CR,CAAmB,KUhDN,EAGL,GV6CR,CAJF,EU5Ce,CAAP;EjBlBV,ElBoCE,AyBgCA,AU7CO,ACfoD,CDbzD,CjDLA,AgCUJ,ElBoCM,AyBgCE,AU5CA,AeFF,GhEhCG,CiDkCD,CeFG,ChEhCP,CuC8EW,AvC9EF,GuC8EK,EzBhCA,GAAG,AyBgCE,AvC9EF,AgCUrB,ChCVsB,Ic8CI,EyBgCxB,AU5CM,EAAa,GjDlCjB,EgEgCE,CAA8B,GlDclC,CmCZM,EAAyB,AeF3B,GAAuC,IAAA,IfErC,CA9BN,oBe4B2C,EACrC,KAAK,wBADgC,EAErC,CAFqC,EAGrC,KAAK,KAHgC,EAIrC,KAAK,MAJgC,CAAvC;AhCrBP,EkBOC,A/C3BA,A8BwMA,AhB3LA,EsB2EE,AU5CA,AjDpCA,EgEuCG,AOsBD,AtDxDJ,CAAA,CsB2EQ,CU5CD,CsByBG,CpErEV,CAAA,EoCwFc,CNgHd,CAAA,AhB3LA,CsB2EiB,AtB3EjB,IdbA,CAAA,C8C4CE,CV4CsB,AU5CF,CV4CG,ANgHzB,AsCnIyB,CtCmIzB,EsCnI4B,CtDxD5B,EsB2EE,ApCxFF,CcaA,CsDwDiC,CpErEjC,C8C4CE,OhC/BW,EAAb,EdbA,Acae,CgB2Lf,GAAA,CsCnI4B,CACtB,SADsB,CtCmI5B,CsCjIM,UAAU,IAAI,KAAK,UAFG,CAAxB;ArBzCL,AlBND,EhCXG,CAJD,CciDE,AyBkCA,AU7CA,A9C5CA,A8BwMA,AhB3LA,AgD2BA,EMgCE,EzDjBE,AyBkCJ,AN+GM,AhB3LF,CH0CC,AG1CA,AgD2BD,CAAC,ChBIE,CgBJP,CMgCS,CtCgIG,AhB3LF,CgC+BV,EhB4Je,CsChID,GzDjBd,AmBiJe,EnBjJI,EG1CnB,EAAuB,GsB4EvB,EAAY,KAAK,GN+GF,GAAf,AsChIS,CACL,chCgBJ,CgCjBS,ChCiB+B,CgCfpC,IhCeyC,KgCfhC,CAAC,CAAD,CAAT,GAAe,CAFV,EhCiBT,AgCdI,EhCrHwB,CAqI5B,UgCnBS,CAAP;ArB3CN,EDgBG,A3CnCD,AsEmBA,A5EjBA,CiDHA,ChBiME,AsC7HC,ANnCD,EnDcE,AkDTA,A7D/CK,AccL,CXJJ,CAAA,A2DgCQ,ChCgKD,CnBlJG,CkDTD,AYlBT,CAAA,C3DfW,EgD4BI,E3DhCf,CAAA,AWII,AgD4Bc,ChCgKhB,CAAgB,CnBlJG,A8D3BrB,CAAA,AXakB,EnDcM,GmBkJtB,C+B3JE,A/B2JsB,C2C7K1B,EZkB6B,ClDSG,AR9ChC,AsEmBA,C9D2BiC,AmDdf,E3DhClB,A2DgCyB,CDKS,CCLhB,ChCgKkB,CgChKP,GWbrB,CAAR,EtEnBe,AsEmBJ,C9D2Ba,AmBkJE,A2C7K1B,C9D2B+C,AkDTlB,C1DrC7B,A2BgM8C,A2C7KhC,CZkBV,A/B2JsB,A2C7K1B,CtEnBkB,A2DgCA,ChCgK+B,A2C7KhC,AXaf,GhCgKwB,CnBlJF,CAApB,AmBkJgD,K2C7KpD,EAA6B,UAA7B,EAAuC;IrC+DrC,AyB5CC,A1DrCD,AsEmBA,A3DfC,AgD6BD,EnDaE,AXzD4B,A8B2M5B,EM/GF,AjCjFI,AsEmBE,CtEnBD,C2BgMG,C9B3M2B,CGWnC,C2BgMW,C9B3MmB,AGWpB,CHX6B,C8B2MzB,CnBlJD,CAAC,KAAZ,CmBkJoB,A2C7KA,C3C6KC,CnBlJD,AyBmCtB,CzBnCE,A8D3BuB,CrC+DvB,GN8GA,C9B3MqC,AyE8BT,CrC+DvB,ApC7F8C,OAAvB,KyE8BL,CrC8DzB,CqC9DA,CrCgEE,KAAK,GAAG,CAFV,EAGE,MAAM,GAAG,CAHX,EAIE,WAJF,EAKE,WALF,EAME,CANF,EAOE,CAAC,KAAD,GAAS,CAPX,EAQE,CAAC,MAAD,GAAU,CARZ;A1C7EE,EoD+BN,E9C9CI,AoE8EA,EzDpBE,AR9CA,A2BgMA,GgB9JN,ApD/BgB,CoC6LV,C3BhMK,AiEkEA,IAAP,EzDpBa,AmCZjB,CnCYkB,CR9CZ,KQ8CA,GAAqB,CAArB,AjB3CA,CAA8B,KoC6L9B,EAAiB,ApC7LjB,EAAuC,IoC6LvC,EAAyB,CpC7LzB,EoC6L4B,ApC7LoB,CoC6LnB,CAAD,CAA5B,MpC7LA,EAAyD;AoDxQ/D,CAAA,CAAuB,A9C0PpB,AsEUD,AFoEC,A1E/DD,CMjBA,AoEwDA,ChCgDE,AyBtDA,A1DpCC,AsEkBD,A3DfA,EH2CE,AmBkJA,EMtGE,AqCvEF,CAAC,A/EfH,CoC4LE,C+B5JK,A/CjCA,CwDLT,CAAA,A5EMM,C0CsFM,A1CtFL,C0CsFM,CyBtDC,A/CjCA,CgCzQhB,ApD0QI,CiB0Cc,AmCpTlB,ApD0Qa,E0CsFL,CzB5Ca,C2DhDnB,CAAA,ClC4FsB,C1CtFJ,CAAC,CAAD,CAAP,C0CsFL,E1CtFkB,CiB0CM,CAAC,AyB4CA,AtBvFtB,CgB6LL,AhB7L4B,EgB6LX,AhB7LZ,EpBCsB,C0CsFM,A1CtFL,C0CsFM,AyBtDpC,AStCF,A5EM+B,CAA7B,CoC4LE,AhB7LoC,CH2CrB,A2DhDnB,AGqBI,A3DhBqC,CH2CC,AmBkJb,AhB7L3B,CpBCoC,C0CsFP,CNsGC,A2C5K5B,C9D0Be,AmBkJc,A2C5K5B,C9D0BD,AmBkJ4B,CMtGgB,ANsG5C,GwClMc,C5EMhB,E0CsFA,EAAsD,A1CrFtD,IAAI,C4EPN,A5EOO,C+EcH,CHrBwB,C5EO1B,CAAS,C+EgBP,CAAC,K/EhBa,CAAC,CAAD,CAAP,E+EcP,C/EdoB,G+EiBpB,IAAA,A/EjB2B,CAAC,CAAD,CAA7B,IAAoC,S+EiBlC,A/ElBF,E+EkBa,E/EhBb,IAAI,CAAC,GAAL,CAAS,K+EgBP,EAA6B,A/EhBf,CAAC,CAAD,CAAP,GAAa,I+EgBpB,CAJF,EAKE,A/EjB2B,CAAC,CAAD,CAA7B,IAAoC,SAFpC,IAGA,IAAI,CAAC,GAAL,CAAS,OAAO,CAAC,CAAD,CAAP,GAAa,OAAO,CAAC,CAAD,CAA7B,IAAoC,SAJtC;AAMD,EmE4BE,A7D/CD,AoE8EA,AtDhEC,C+CgBD,A/CrBA,CwDAE,E3DgDE,AyB4CA,ANsGA,A2CzKA,I3CyKA,CnBlJK,A2DhDA,ClC4FC,CAAC,AqCnEA,GHzBG,ElC4FV,AqCnEY,GrCmEG,GzB5Cf,EyB4CA,CzB5CqB,I2DhDvB,EGyBS,C3CyKP,A2CxKE,CADK,C3CyKU,C2CvKf,CAFK,C9DuBP,C8DpBE,CAHK,C3CyKP,C2CrKE,C3CqKuB,GAAG,CAAC,CAAD,CAA5B,G2CzKO,EAKL,gBAAgB,IAAI,UALf,CAAP;A/EbN,EmE4BE,ASvCC,AzEED,AiBIA,CwDRA,C3DkDG,AR/CD,A2BiMC,A2CnKA,C3C8JD,A2C3KA,CrC0EE,GjC3FG,ANCP,CAAA,C4E6BS,CrC6DC,AjC3FR,CiC2FS,AjC3FA,E2CkCE,IVyDT,AvC1FJ,CAAA,EuC0FoB,MAAhB,EjC3FO,CAAc,GAAvB,EAA4B,GAA5B,CNCF,GAAA,YAAA;AkDkBI,AlBPA,E1BXH,AmEAD,CnELA,CiCgGG,ANuGD,AjCjMA,AiEgCA,C1BuDA,CqC1DE,E5E7BF,CkDiBY,AeeR,AjCtBQ,C4CmBJ,AXGH,C1B0DE,ANuGA,IMvGI,AqC7DE,CrC6DD,A0B1DZ,ChCiKA,C2CpKgB,CXGF,CAAC,C1B0DE,A0B1DH,EWHO,AXGH,CAAJ,CAAd,AjCtBE,CAA2B,CkBO3B,AlDjBF,CkDiB+B,ClDjBhB,KkDiBb,AlDjBkB,EuC0Fb,AWzE8B,AlBPnC,EOgFgC,APhFO,GhCVzC,O4E6BgB,CAA+B,A5CnB7C,EAAkD,Q4CmBpC,CAAd;E1BXJ,A5CjBA,A2BiMC,ADvLD,CC4KA,CnBzIE,Ad7CA,AiEiCA,E1ByDE,AWzEA,A0BYA,A5CnBA,CAAC,ChCVG,E4E6BE,E1BZV,CXyEW,CAAC,CvC1FG,Cc6CD,CAAC,AkBnCf,ChCVkB,C4E6BC,A5CnBF,G4CmBK,CrC6DlB,AqC7DmB,A5E7BA,CuC0FD,AqC7DA,CrC6DlB,CzB7CF,A8DhBwB,C9DgBD,AyB6CA,AqC7DH,C9DgBpB,AyB6CE,CqC7DyB,C9DgBD,AyB6CA,AqC7DN,C9DgBpB,A8DhBE,E9DgB2B,Ad7Cb,Cc6ChB,CyB6CE,AvC1FF,Cc6CgC,CAAhC,AyB6CiC,MAA/B;AckBA,EpBuFJ,EnBrJE,AyB6CC,APhFD,E4CmBE,E9DgBE,CuC8DQ,CuB9EN,C5CnBC,ClBmCP,E8DhBU,A5CnBA,CAAC,E4CmBD,KvB8ER,AuB9EQ,CvB+EZ,AuB/EI,G5CnBQ,CAAV,WqBiGE,EAEJ,MAFI,EAGJ,IAHI,EAIJ,MAJI,EAKJ,SALI,EAMJ,yBANI,EAOJ,gBAPI,EAQJ,cARI,EAQU;EAEd,AHpGA,AlBNC,CAFD,ChCTE,EkDiBE,A0BaA,CvBuFC,CrDrHC,CgCWC,C4CmBG,CvBuFD,CAAC,AHpGA,ClBNC,EqB0GE,ArDrHX,CqDqHG,AHpGS,ClDjBC,CqDqHC,EAAE,ArB1GA,E4CmBI,CvBuFD,EuBvFI,EvBuFA,CAAC,CuBvFD,C5CnBd,IqB0GX,CrB1GiC,CqB0GC,CAAC,EHpGrB,CGoGwB,AHpGT,EGoG7B,AHpGA,ClBNO,CqB0GmC,AHpGT,ClBNU,CqB0GC,AuBvFnB,CvBuFzB,CuBvFgC,CvBuFe,QuBvFtB,CAArB;EzEzCJ,EkDiIE,AvCxEA,AyB8CA,AW1EA,AlBNA,EhCXE,EqDqHI,AvCxEF,AyB8CA,EW1EE,CGoGG,AlDjIX,AHYS,AgCWA,C7BvBT,C+C6BW,CGoGG,AHpGZ,AlBNU,CAAC,GqB0GK,ArDrHd,CqDqHe,Ad1BjB,AvC3Fe,CqDqHC,CAAhB,Ad1BiB,ApCvGnB,CAAA,G6BuBY,CAAV,IhCXE,CAAyB,IGZ7B,GAAA,AHYI,UGZU,cAAd,EAA4B;E+C8B3B,AjCdD,AeQC,CkBID,AlBNO,CqB4GL,AlDjIA,AHYC,Ec6CC,AyB8CA,AqC9DA,A3D1BJ,CAAA,EiCcO,A/C7BA,A6BuBA,C4CkBC,CrC8DC,EW1EE,E0BYE,CAAC,A3D1Bd,CAAA,CH0CgB,CAAC,AoC5BA,CGoGC,AlDjIhB,GkDiImB,AHpGA,A/C7BA,CoCuGjB,CAAmB,EqC9Df,C9DgBJ,A8DhBsB,C9DgBC,CG1C3B,CoCkH6B,CACzB,Ad3BA,CtBxFJ,CsBwFgC,EzB9CE,CAAC,AXzDjC,GyEyCM,CAAJ,E9DgBA,A8DhBqC,A3D1B3B,CsBwFV,CzB9CuC,AG1C3C,CH0CI,AyB8CwC,AW1EvB,CGoGQ,AHpGO,AjCdpB,CH0C8B,CuC0E1C,AvC1EA,CoC5BO,CpC4BsC,CAA7C,EAAgD,AoC5BT,CGoGd,AvCxEzB,EuC2EA,AvC3EmD,AyB8CnD,CzB9CA,EuCwEyB,AvCxE6B,AoC5BT,CpC4B7C,CuC4EA,CvC5EyD,CAAzD,AoC5BiD,EpC4BW,CAA5D,CuCwEyB,EAKzB,SALyB,EAMzB,MH1GiD,CAAe,GAA7D,EAAkE,aGoG5C,EAOzB,gBAPyB,CAA3B;EWhFF,AO8BA,AvElEC,CAND,CqDmIE,AdlCC,AW1ED,A/C7BA,AceA,AgD8BA,AjCtBA,ElBkCE,E8DhBE,A3D1BA,C+CiCN,A7DhDO,A8D6CD,CnDYE,AkDTR,AdnBQ,AqBiDR,ANjCO,CMiCP,CKrCU,C9DgBC,AoC5BA,AjCdA,CiCcT,C0BYW,CzEzCX,EkDyIc,CAAC,AWzFjB,CAAA,AYPkB,ALqClB,CKrCmB,ALqCnB,ANjCE,EZ4FA,CAAoB,AuBhGT,A3D1BX,AgD8BmB,CnDYE,A8DhBA,C9DgBC,AG1CA,AgD8BtB,WWJW,C9DgBF,A8DhBL,C9DgB+B,CuCgFnC,AvChFS,EAA6B,CAA7B,EAAgC,CAAhC,EAAmC,CAAnC,AkDTX,AO8BA,EzDrBiD,CkDTjD,AO8BA,GzDrBI,OkDT0B,AO8BD,SAA7B,EAAwC,CAAxC,EAA2C,EP9B3C,EAA8C,SO8B9C,EAAwD;ErBhDvD,A/C7BA,AGWD,A2BkMA,AjChMA,CkDcO,A/C9BP,CkD4IE,AvChFC,AkDTD,AO8BA,ANhCA,CnDQA,CAGE,A8DhBC,A3D1BD,AeOK,C1BXT,C0DqCQ,A1DrCR,AiEmEM,CrBjDC,AqBiDA,ClB2DC,CpC1HC,CsD+DC,ClB2DC,AvChFA,AoC5BA,EjBgLX,CoBpEE,AvChFE,AmBoJJ,C3BlMA,AiEmEe,CzDrBC,AR9ChB,C4CkBiB,IAAI,CqBiDf,CtC+HN,CAAA,EsC/H0B,AtD/DtB,CsD+DuB,AtD/DA,EAAvB,CXJJ,AiEmE8B,CP9BG,E1DrCjC,AWIiC,C+CiCG,A/CjCF,CsD+DC,AtD/D/B,C+CiCF,A/B6JF,GAAA,GsC/HE,ErBjDmB,AqBiDuB,CrBjDR,A5ClBpC,I4CkBO,EAAmC,AjBgL1C;ApCxLI,EwDqHH,AlDxID,AsESA,ElC6FE,AyBvDA,AdnBA,A5ClBA,A2BkMA,AhB9LC,EH0CC,AyDqBA,AvCzDgC,EOkF9B,AyBvDE,CzBuDD,A1CnFO,CiBqCN,AoC5BA,C5ClBC,A2BkMA,CwCnMT,C3D+CW,AoC5BA,AuBnBX,AFoEW,CzDrBC,AoC5BV,CrDTE,CSTU,A2BkMA,ApCzLO,C0E0DjB,CzDrBI,CyB8CS,AjC5FR,CiC4FS,AjC5FA,E0DqCI,AStCtB,C3D+CqB,A2D/CrB,A5EUI,EmE4BqB,AnE5BK,CoCyL5B,C+B7JA,KnE5BE,E0CmFG,A1CnF8B,E0CmFnC,CjC5FgB,CQ8Cd,AyB8CgC,AjC5FJ,CmEDhC,C3D+CsC,CR9C7B,CAAP,AmEDF,UAAiB,CAAjB,EAAoB,UAApB,EAAgC,UAAhC,EAA0C;EvBoBzC,A5ClBA,A2BkMA,AhB9LA,ApBKD,CSXA,A2BkMA,AhBhMA,C+CqCE,AStCA,AFoEC,AvC1DD,EOmFE,AqC/DA,A/EpBA,EiBqCE,A2D/CE,ElC6FJ,AqC/DM,GAAG,A/EpBF,CAAC,CAAD,C4EVK,AG8BA,A/EpBZ,G4EVe,A5EUF,E0CmFb,AqC/DiB,ErC+DV,CkC7Fa,E5EUA,C+EoBR,A/EpBS,CAAD,CmE4BG,AYRvB,A/EpBJ,C0CmFI,AyBvDwB,CnE5BC,C0CmFT,IyBvDlB,GAAmC,IAAA,KStClB,CAA8B,UAA9B,CAAjB,IlC6FE,EyBvDiC,EACjC,KAAK,eAD4B,EAEjC,CAFiC,EAGjC,KAAK,KAH4B,EAIjC,KAAK,MAJ4B,EAKjC,IAAI,CAAC,IAAL,CAAU,gBAAV,CALiC,EAMjC,yBANiC,EAOjC,CAPiC,EAQjC,cARiC,CAAnC;EXyFF,A/C5HA,A0BQC,EOmFE,AyB9CD,AS/CA,A5EUA,IiBqCI,A2D/CE,CpB8HD,EW/EE,AnErCA,CAAC,CiBqCC,AjBrCF,CAAP,CmEqCW,EnErCE,KmEqCN,AS/Ca,CTgDlB,CnEtCkB,CwDoHtB,AoB9HyB,A5EUF,CiBqCjB,AjBrCgB,CAApB,EiBqCyB,C2D/CG,G3D+CxB,c2D/CmB,CT+ChB,AS/CuC,ETiD5C,QSjDqB,CAAvB,cTiDE,CAAe,EAFV,EAGL,cAHK,CAAP;AXgFH,ArBpHA,EgCyCE,AdjCD,AjBgLF,AhB9LA,ApBMG,CmEuBD,CSjCE,AFoEA,EKvCE,E9DkBE,A2D/CE,AFoEA,CtC8HV,AhB9LA,C2DyBU,G3DzBV,C2DyBc,C9DkBC,C2D/CG,EG6BA,ALuCE,CzDrBD,A2D/CE,EFoEE,CtC8HvB,A2CrKsB,CH7BD,AG6BE,GAAL,G9DkBH,C8DlBe,ALuCE,CzDrBxB,AyDqByB,CAAD,CKvC1B,ALuCF,EEpEiB,AG6Bc,EH7BP,QAAQ,CAAC,WAAT,CAAqB,CAArB,CAAP,EAAgC,KAAK,OAArC,CAAjB;ApBgIJ,ApBrYA,AhB2BA,AesPA,CCjRA,AhB2BA,C+C+RE,AhEnDA,AiB5OiB,CgB3BnB,CMmWI,AW5EK,AqBmDL,ANjCA,EnDYG,E8DlBC,ALuCE,ChCyBD,AvC5FP,AiEkCM,CjElCN,AiEkCO,KWNM,E3DxQf,CsBwUI,AgCzBgB,AtD/SpB,CsBwUmB,AqChEX,A5E5BN,CAAA,CuEmEqB,KhCyBnB,EAAwB,C0B1DxB,CMiC4B,CAAC,CAAD,CAA5B,GvEnEF,EuC4FE,CvC5FF,YAAA;EHSA,E0CqFE,AW9E4B,AuBjB5B,AFqEA,AvEnEA,AiEmCA,EWPG,A/EpBD,C+EkBA,CH5BE,AFqEE,AvEnEF,CuC6FC,IqCjEI,A5E5BA,AHQA,CAAC,CAAD,CAAP,E0E2Dc,C1E3DD,E0E2DI,ChC0BnB,AkC/FkB,ClC+FC,GkC/FG,A5EUA,C4EVtB,A5EUuB,CAAD,C0CqFtB,AkC/FyB,A5EU3B,C0E2D8B,CAAC,A1E3DF,C0CqFC,AgC1BA,ChC0B5B,AgC1BA,IvEnEA,EAAmC;EkDerC,EX+EE,A1CrFA,EiBqCE,A2D/CA,AzEEA,E4E4BE,E5E5BF,CHQK,C+EoBG,A/EpBF,CiBqCC,A2D/CA,A5EUF,CAAP,CoCwLW,AhB9LA,EH2CT,AjBrCW,I4EVX,G5EUkB,CGRlB,AHQmB,C+EoBG,A/EpBJ,CGRP,AHQb,E+EoB2B,G5E5BT,E4E4Bc,K5E5B9B,mB4E4ByB,CAA8B,gBAA9B,CAAvB;A1BbP,ErDNE,EiBqCE,A2D/CA,AFqED,CEvEA,CzEIE,E4E4BE,ALuCA,CAAC,CvEnEH,CyEFK,CG8BG,ELuCA,UAAV,EKvCwB,ALuCF,GKvCK,E5E5BzB,EAAc,C4E4BgB,I5E5BX,oB4E4BM,CAA8B,G5E5BvD,O4E4ByB,CAAvB;A1BZR,IX6EI,EkC9FE,AFqEA,AvEnEA,EuC4FE,AqChEA,ErCgEE,CvC5FC,C4E4BG,CrCgED,AkC9FA,AFqEA,IErEA,AFqEA,EhCyBM,CAAC,IAAP,CAAY,GkC9FZ,AG8BiB,EH9BP,CG8BU,I5E5B3B,C4E4BgC,EH9BzB,AzEEyB,CuC4FzB,CkC9FoB,ClC8FQ,CgCzB5B,AvEnEP,EuC4FO,AgCxBL,ChCwBqC,MAAhC,CAAT,EkC9FS,AFqEA,EErEoC,AFuEzC,KEvE8C,KG8BrB,ALuCpB,CKtCH,CH/BG,AFwEL,CExEF,OG8B2B,EAEvB,ALqCG,EAIL,QK3CyB,CAAzB,CLuCK,EAKL,aALK,CAAP;EpE9EJ,ANmBA,EiBsCE,AyB+CA,AkC9FC,AF2EA,AvEzEA,EuC4FC,A1CrFA,C0CqFC,CzB/CC,A8DdA,GrC6DJ,ApCxGF,CWyDU,AyB+CA,ApCxGV,AyE2CY,C9DcD,AjBtCA,CiBsCD,AjBtCE,CiBsCN,AjBtCK,CAAP,G+EwBe,A/ExBF,CiBsCC,CAAhB,AXzDF,CAAA,AyE2CsB,C9DcD,G8DdK,A/ExBF,CAAC,CAAD,CAAxB,EMnBA,ANmB6B,GMnB7B,KyE2CsB,CACd,IrC4DN,ApCxGQ,MAAV,EAAgB,IyE2CM,EAEd,cAFc,EAGd,UAHc,EAId,cAJc,EAKd,SALc,EAMd,gBANc,EAOd,KAAK,iBAAL,CAAuB,UAAvB,CAPc,EAQd,KAAK,SAAL,EARc,EASd,UAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,UAAnB,EAA6B;A/CIjC,E4C7CH,CATD,ClCwGE,ApCzGA,ANmBA,EiBsCE,EyBgDE,CpCzGC,A0BuDO,C+CHJ,C/EjCD,CMnBP,ANmBQ,CiBsCC,AyBgDT,ApCzGS,ANmBF,CAAP,C0CsFW,EzBhDT,A8DLa,A/EjCF,I0CsFb,AVlDE,C+CHkB,A/CGK,CUkDN,C1CtFC,CAAC,CAAD,CAApB,GMnBS,CAAc,C0BuDrB,EUkDF,AVlDqC,G1BvDrC,AyEoDe,CAAqB,CzEpDL,AyEoDhB,EAAwB,CAAxB,EAA2B,CzEpD1C,AyEoDe,EAA8B,K/CG3C,EAAqD,G+CHxC,EAA0C,gBAA1C,CAAP;EZUV,A7D7DC,AsEWD,A5C4CA,AhCpCC,CMrBD,CW2DG,AyD4BD,AvE1EA,AiEmCA,EpCSE,E+CHK,ALiCH,AvE1EE,CgEkDR,AYXQ,AXJF,CDeN,AYTU,AXNH,CjEnCI,EuE0EA,CKnCH,A5EvCM,C4EyCC,C/CGf,EAAgB,CmCMhB,AYXQ,A5EvCW,CgEkDnB,AYpBsB,CXKpB,CWOM,ELgCN,ANvCmB,CjEnCP,CuE0EU,CPxBxB,AYRa,A5E1CX,CiEmCmB,EDerB,YAAA,QCfqB,EAAiB,EWLhB,EAad,GXRqC,CAAC,CWQjC,SXRQ,EAAqC,WAArC,CAAnB,CWLoB,EAcd,KAAK,cAAL,EAdc,CAAhB;EzEvCN,EoCuGE,AyB3CA,ACdA,ApCQA,E0C8BE,EhCoBA,AqCjDE,EL6BI,CPxBD,AnCLL,I+CAS,CAAC,AL6BE,EhCoBF,CAAC,AqCjDT,AL6Ba,GK7BC,CL6BG,CAAC,CK7BlB,CrCiDF,CgCpBe,CAAS,E1C7BL,CUiDI,AVjDH,CUiDpB,AyB5CK,CAAa,AOwBW,E1C7BV,EUkDlB,AVlDyB,CUkDxB,EyB7CJ,GzB6CS,CgCrBQ,EAA2B,CAAC,A1C7BP,CAAC,CAAD,C0C6BU,A1C7B3B,EAAsB,MUkDxC,EgCrBc,CAAf,ChCsBE,QVnDiB,CAAnB,CUmDY,CAAC,CVlDb,GADA,GAEA,EUiDE,CAAqB,UAAU,CAAC,KVjDf,CAAC,GUiDG,CAAqB,AVjDzB,EAAO,QUiDxB,CAFF,CADF,AV9CsC,CAAC,CUkDrC,AVlDoC,CAAjB,EAAsB,kBAAtB,CAHrB;AGlCE,EgCyCH,AnCFA,AhCzCD,CmEyCA,AnCNA,CfGE,Ad9CA,EuCkGE,AgCvBA,A1EnEA,E0C0FE,AvClGA,C6BiDC,AGvCO,CuCiEJ,CzD7BD,AyBoDA,AvClGP,EuCkGS,AvClGA,AHQA,C0C0FC,AgCvBE,A1EnEF,CiBsCV,AjBtCS,CAAP,C0EmEa,E1EnEA,E0C0FR,AgCvBY,CAAC,ChCuBlB,G1C1FoB,C0EmEP,A1EnEQ,C0EmEG,A1EnEJ,CAAxB,EAA6B,O0EmES,GAAG,MAAxB,AvCjEb,CuCiEA,AvCjEiD,cAAjD,EAA+D;ElBqClE,AkDMD,AhC1CA,ClBbA,CyBqGG,AVjDD,AhCzCA,C0CoFA,CgCjBE,AvE3EA,E4E8CE,EL6BI,ChCuBD,AvClGA,A6BiDA,AhCzCA,C+EsCC,A/EtCA,CgCyCR,AhCzCO,C0EmEK,A1EnEZ,E+EsCI,CL6BW,A1EnEF,C+EsCC,GL6BK,CAAC,E1EnEA,CAAC,CAAD,C0EmEL,A1EnEf,C0EmE0B,OvE3ExB,GuE2EkC,AvE3EF,GuE2EK,CvE3EL,KuE2EnB,CAAb,QvE3EgC,EAC9B,GAD8B,EAE9B,qBAAA,CAAa,UAFiB,EAG9B,KAAK,MAHyB,EAI9B,IAJ8B,CAAhC;EcgDJ,AeEC,AhCzCA,EmCEC,EOwFE,AvC7FA,I4EyCI,CrCoDC,AvC7FA,GuC6FG,EAAR,CqCpDW,CAAC,WAAR,C5EzCJ,E4EyC0B,IAAtB;A1B9BJ,ArBkCL,EvBhDC,IiCiGI,AgCxBA,AvErEA,CMJJ,CAAA,C4Ccc,C0B+BN,AL4BA,AvErEE,CuEqED,ChCwBC,EgCxBE,ChCwBC,EAAT,AjCjGJ,AsE6Ce,CtE7Cf,AsE6CgB,C5EzCG,GAAG,EkDUlB,A5CdJ,AiEyEI,CrB3D0B,CqB2DN,CjEzExB,ANI2B,SAAL,CMJf,AsE6CC,E1B/BJ,AlDTI,CMLR,C4Cc8C,C5CdpC,ANKC,CAAC,OkDSR,EAAqD,QAArD,EAA6D,SlDTzD,EADc,GAEd,GAAG,CAAC,mBAAJ,EAFJ;A6B8CN,EqBnCE,ArDRA,E0C2FG,AjCjGD,A2DmCA,EfrBI,E5CdA,AiEyEA,CNtCA,ApE7BC,C+EuCC,AXVD,G3DnCI,EsE6CE,AL4BA,CK5BC,A/EvCd,G0EmEa,ErB3DQ,E0B+Bb,AXVN,CfrBsB,A0B+BF,EXVC,CAAC,G3DnCtB,A2DmCqB,E3DnCO,A2DmCD,GAAN,CWUf,AXVN,EfrBoC,A0B+BF,C1B/BG,KqB2D1B,CK5BL,CL4B6B,IAAxB,EAA8B,IAA9B,CrB3DW,CqB2DyB,CrB3DjD,GqB2Da,EAA0C,IAA1C,EAAgD,aAAhD,CAAP;AlBqDF,AxDvHL,IoE8BG,E3DpCE,AiEyEC,AvEpED,E4EwCG,CvBgFO,AuBpFR,CtEzCF,ANKI,K4EwCK,A5ExCA,WAAT,CqDwHA,CACJ,ArDzH0B,GMLtB,EAAc,KAAK,K+C6HnB,EAEJ,MAFI,EAGJ,E/ChII,G+C6HA,EAIJ,MAJI,EAKJ,SALI,EAMJ,yBANI,EAOJ,gBAPI,EAQJ,eARI,EAQW;AxD7HjB,EwD+HE,AHzHA,EXmFE,EWnFE,A5CbA,C+CsIC,AHzHA,ClDRC,CuC2FC,CqCnDC,CvByFC,A/CtIA,C+CsIC,CdtCC,CAAC,CcsCC,AuBzFA,CvByFR,AuBzFS,CrCmDC,AvC3FA,CqDiIC,ArDjIA,CuC2FC,AqCnDT,CvByFU,AdtCA,AqCnDA,E1BhClB,CGyHqB,CHzHC,EXmFP,EcsCW,A/CtItB,C+CsIuB,AdtCA,CAAzB,AvC3FI,CMLuB,ANKA,CuC2FC,AqCnDtB,CrCmDuB,CqCnDC,CvByFhC,A/CtII,CNK8B,CqDiIC,AdtCA,CcsCC,AdtClC,EAAoC,CcsCC,AuBzF/B,CrCmDgC,CcsCxC,AdtCE,AvC3FI,EqDiIqC,AdtCA,AvC3FA,EqDiIE,CAA7C,EAAgD,IrDjII,CAAC,UAAV,CAAqB,CAArB,KAA2B,IAAhE;EcwCN,AXxDA,EkDkJE,AHzHA,A5CbC,EiCgGC,AgCvBA,AvEpEC,CAFD,CqDmII,AuBzFD,ErCmDG,AgCvBA,CrB5DD,A/CzBT,CkDkJY,AlDlJZ,CHiBW,CuEoEG,ClB6DC,AHzHb,EqB4De,ChCuBC,EcsCE,CAAC,AvC1FrB,AyBoDqB,ApC5GrB,AoEqFqB,ClB6DD,AvC1FpB,AXxDA,AoEqFsB,ClB6DpB,AdtCqB,CAAC,CAAD,CAAnB,CgCvBa,CAAW,GzD7B5B,CAAA,EyD6BkC,IpErFlC,AoEqFsC,GpErFtC,MWwDA,CyD6BgD,EzD7BhD,CXxDiB,AoEqFkC,CAAjB,CAAjB,IAAwC,CAArD,IzD7BJ,EXxDA,EAA8B;E+C0B7B,CAFD,CG2HE,AvC1FA,AXxDA,A6BqBA,EOuFE,AgCvBA,ElB6DI,ArDjIF,CkDQC,A/CzBA,CoC4GG,AgCvBA,CzD7BD,CXxDP,CAAS,CoEqFG,AvChEF,ElBmCE,CyD6BG,AvEpEF,CAAC,CgCId,EuCgEmB,AvChEF,CqB6HG,AkB7DA,GlB6DG,CvC1FvB,CuC0FA,AkB7De,CAAW,CvEpEtB,CuC2FwB,ApC5GnB,AHiBiB,CGjBH,A6BqBvB,EOuF+B,APvFF,CuCgEG,CvEpED,GuEoEK,IvEpEhC,CuC2FqC,CAAC,CpC5G1C,C6BqBA,C7BrBuC,CoEqFO,AvChEJ,GuCgEO,CAAjB,CAAjB,IAAwC,CAArD,EhCuB6B,ApC5G/B,CoC6GI,QAD2B,EAE3B,UAF2B,EAG3B,UAH2B,CAA7B;EyB9CJ,A7D7DC,AsEUD,CtEZA,CkDoJE,AHzHA,A5CdA,EiCqGE,AgC3BA,AvEpEC,AgCID,EkBII,A5CdF,AsE6CA,CZKN,A1DlDO,CiCqGG,AyBnDV,AhCxCU,E1BVR,AmEDF,CAAA,AF2EW,CrB5DG,A5CdF,CsE6CC,C5CnCG,CkBIC,AqB4DN,EPxBX,AhCxCmB,CqB6HD,AWrFlB,ESnDA,AG8CM,CvB0Fe,AoBxIrB,CzCWwB,CAAC,EO2FE,GAAG,CWvFC,AlBJ3B,CkBI4B,IGyHE,AWrFlC,CXsFI,CdnCkC,CAAC,AyBnDvC,EdpCiB,CqB4DN,CrB5DT,CqB4DiC,IAAxB,CPxBM,COwBwB,ElB6DP,AdlCJ,CAAuB,AkCtGrD,CpB0II,AkB/DO,CPxBX,CSnDA,AF2E+C,CPxBxB,GXqFW,AkB7DvB,ChC2BmB,CcqC1B,AdrCA,AgC3BiD,IlB6DnB,AoBxIH,AF2EpB,ElBiEP,AkBjEuD,MlB6DzB,CoBxIlC,CpB6II,CoB7IsC,IF2E/B,CAAP,GlB6D8B,EAM9B,IoB9IJ,EAAwD,mBpBwItB,EAO9B,gBAP8B,EAQ9B,cAR8B,CAAhC;ElDhJF,EkD0JE,AvCpGA,AkDMA,AdpCA,AuBfA,AF2EC,ANtCD,E1BiEE,AjCrGA,AsE6CC,A5CnCD,EyCXI,CRqCF,CnDQJ,AyByDQ,A0BjEH,AjC1BG,ClBkCR,AkDMO,AdpCA,A5CdA,I0DkDA,AdpCA,G5CdL,AmEDc,CpBiJD,ArBtIE,CqBsID,AvCpGhB,CAAM,A2D5CJ,ClCqGkB,AP3FA,CiC0BpB,CZ4GA,CAAqB,Ad3CE,C0BjEF,IAArB,KQpCgB,AzCUiB,ClBkCjC,CAAqB,AoC9Bd,EGkIP,AHjIE,CuBfmB,AzCUiB,ClBkCtC,CAAqB,AyByDmB,GAAG,CzBzD3C,G2D5CE,AzCUkB,GyCVa,AzCUiB,EkBI3C,EAEL,CAFK,CcoCA,CzBmDL,AWpFA,CckCA,KAAK,AhCzCa,CyCVlB,EzCUgE,CyCVhB,AzCUhD,KkBOe,AuBjBsC,CvBiBrC,MAHX,EAIL,IuBlBgD,EvBc3C,AuBfP,EToDE,AdhCA,Ec+BK,EAEL,CAFK,EAGL,EdvCK,EAML,CciCK,KAHA,EAIL,AdxCK,CAAP,IcwCO,MAJA,EAKL,MALK,CAAP;ElDLD,AkDYA,AdnCA,CpCoBD,AkDOA,CXgGE,A/ChJC,AmEAD,AG6CC,AXRD,E1BgEE,AvChGA,AgCKA,EyCVI,EpBgJA,Ad3CE,AP3FA,ChCLD,EqD2IE,Cd3CC,EkCrGI,AzCUA,CqBsID,Ad3CA,Cc2CC,CoBhJG,AzCUA,GqBsIC,CAAC,CoBhJG,CzEKpB,IqD2IY,ArBtIa,GqBsIC,CAAf,CAAb,ArBtIgC,GO2FC,CAAC,CAAD,CAApB,GAA0B,AP3FtB,GAA2B,EyCV3B,CAA8B,MlCqGlC,CP3FI,EO2FqC,CkCrGrC,AzCUwC,CyCVzD,GzCU6D,KAAJ,CO2FvD,AP3FiE,MAAV,CAAvD;AkBYL,ArDfK,EwD0IH,AWvFD,AYZC,CA7DD,CL0FE,AvErEC,EuCgGC,EgC3BI,C1EpEM,C0C+FJ,IAAE,GAAG,MgC3BQ,E1EpEnB,C0EoEsB,A1EpEK,K0EoEA,C1EpE3B,EAAmC,G0C+FJ,CAAC,CAAD,CAApB,GAA0B,C1C/FrC,EAA6C,G0EoEvB,CAAwB,KhC2BnC,GAAyC,CgC3B9B,EAAmC,KAAK,GhC2B9D,OgC3BsB,CAAxB;EzD9BJ,A8DGE,A5EzCC,AHCD,CG1BA,CMmBE,AmEAA,AF2EA,EhC2BE,A1C/FA,AmCGA,E1BVE,AmEAA,C3D4CR,CyB0DY,CgC3BD,AvCjEA,E1BVE,AmEAA,EzCUE,CuCiEC,A1EpEA,AmCGA,CnCHC,CAAD,CAAV,AmCGa,CAAb,CyCVE,C5EOc,AmCGA,CAAC,EO4FI,CjCtGvB,A0BUsB,CyCVC,C3D4C3B,AyB0D8B,AjCtGF,ATOA,CAAC,CAAD,CAA1B,CmCGI,CnCH2B,CmCGC,CAAC,CO4FG,CAAC,AkCtGF,CAAC,CzCUC,EuCiE5B,CAA+B,IE3Ef,EAAvB,AzCUE,EyCV4C,AzCUA,OuCiEvC,EAAgD,CAAhD,ChC2BmB,CACtB,AgC5BsD,IhC4BtD,SgC5BG,CAAP,QhC4BI,EAAW,YAAX,CADsB,EAEtB,QAFsB,CAAxB;AzB1YN,CAAA,CuCqbE,AvCrbgC,AyDgX/B,AvEpED,CuEkCA,C1ElCE,E0CkGE,AjCzGA,AmEAA,EzCUE,CqBsIC,CdvCG,AjCzGN,ATOI,CAAC,CAAD,AmCGI,CnCHV,EqDeW,AuBtBA,C3DrSf,AjB4SgB,CiB5ShB,AkB+SmB,CyCVD,EzCUI,EyCVJ,GpBgJhB,CdvC0B,A1ClGF,CAAC,CAAD,C0CkGK,A1ClG3B,ESPE,EAAc,C0BUgB,CAAC,CAAC,CO+FC,AkCzGrB,ClCyGsB,AjCzGf,CmEAD,EzCUmB,CAAC,CAAD,CAAN,EAAW,CyCV9B,EAAgB,EnEA5B,A0BU+C,CAAC,CAAC,GO+FxB,AP/F2B,CO+FC,AP/FN,CyCVnC,AzCUmB,CAAD,CyCVS,AzCUrC,UyCVU,CAAZ,ClCyGyB,CAAzB;AcwCL,EkBpEC,A1ErEC,E4EPE,ElCyGC,AjCzGA,E0BUE,EO+FI,CjCzGD,G0BUG,CAAC,CAAD,CAAN,CO+FU,EP/FE,CO+FC,GjCzGf,CiCyGe,AP/FI,CAAC,C1BVC,A0BUF,CAAjB,G1BVF,UiCyGe,EAAe,KAAK,aAApB,EAAmC,CAC/C,cAAc,IAAI,gBAAgB,CAAC,CAAD,CAAhB,GAAsB,YAAY,CAAC,CAAD,CAAtC,CAAf,GACE,cAF8C,EAG/C,cAAc,IAAI,YAAY,CAAC,CAAD,CAAZ,GAAkB,gBAAgB,CAAC,CAAD,CAAtC,CAAf,GACE,cAJ8C,CAAnC,CAAf;IjCxGD,A2DqCD,E1ByEE,EPpGE,CiC2BA,C1ByEI,A0BzEH,IjC3BK,ClBiCC,AkBjCA,CAAC,GAAG,COoGG,APpGR,CAAN,EOqGA,CPrGgB,GiC2BpB,EjC3ByB,CAAC,CAAD,CAArB,KOqGc,GAAG,UAAU,CAAC,sBAAX,CAAkC,UAAlC,CADnB;E1CvGJ,E4EPE,ARuCA,E1ByEE,A1CzGA,I0CyGM,CkChHD,IAAA,C5EOK,CAAC,CAAD,CAAV,E0CyGiB,C1CzGD,E0CyGI,I1CzGE,CAAC,CAAD,CAA1B,EAA+B,K0CyGO,CAAC,GkChH9B,EAAiB,GlCgHY,CAAlC,KkChHK,EAA4B,QAA5B,IAAwC,SAAxC,GAAoD,IAA3D;EtETF,AsEUC,CARD,CnEQE,ATOA,ISPI,A0BUA,EnCHE,CMjBR,AGUE,ATOO,CMjBT,ANiBQ,CSPG,ATOT,AmCGS,GnCHG,CmCGC,CAAC,G7BpBhB,A6BoBmB,C7BpBnB,INiBwB,CAAC,CAAD,CAAtB,CmCG0B,GAAG,CAAzB,EAA4B,CAAC,C7BpBnC,GAAA,A6BoBuC,CAAjC,EAAoC,EAAE,CAAtC,EAAyC,E7BpB9B,aAAjB,EAA8B;EsEY9B,AzEKA,AHCC,EMjBC,EoCyHE,AjC/GA,GHVG,AHgBP,CAAA,AgCIQ,COqGC,AjC/GA,CHVP,CAAS,EoCyHI,CPrGD,CAAC,CAAC,ChCJhB,CAAA,CgCImB,CAAL,CAAN,GhCJR,AgCIwB,COqGpB,CjC/GA,CNMJ,CGhBW,CoCyHoB,ApCzHN,AGUI,A0BUA,CAAC,CAAC,E1BVF,C0BUK,CAAL,CAArB,GhCJR,CuCyGI,EAAwC,CpCzH1C,EAAuC,EGUZ,EACvB,GADuB,EAEvB,IHZJ,eGYI,CAAgB,UAFO,EAGvB,UAAU,GAAV,EAAa;E0DuDnB,A7DnEC,CAFD,CHkBE,IuCyGI,AjC5GE,A0BOD,CgC+CP,AhEnDO,CgEmDP,EzBsDY,AjC5GE,IiC4GE,GyBtDhB,CAAA,G1DtDyB,KNGvB,MgEmDF,GAAA,UAAe,WAAf,EAA4B,UAA5B,EAAsC;E7DjEtC,AHeC,AHAD,CGFA,CgEqDE,EnEnDE,AmCIC,EOoGc,AjC3GT,C0DsDH,OnEnDO,CAAC,CmEmDb,AnEnDY,CmEmDG,AnEnDb,GAAgB,MAAM,CmEmDxB,AnEnDyB,CAAD,CmEmDG,AnEnD7B,EAA+B,SmEmD7B,EAAwC,CAAxC;EhEjDF,EiE+BE,ApEhCA,I0CwGM,AjC5GuD,C2DoCzD,CAAC,ApEhCC,CSLA,ATKC,CAAD,CAAN,GAAY,G0CwGK,CAAC,K0BxElB,CpEhCsB,CAAC,CAAD,CAAtB,G0CwGiB,CADb;E1CtGL,EmEkDC,ACjBA,EjC9BE,EOsGE,AyBvDA,A1DtDE,C0DsDD,GzBuDK,AjC7GE,C0BOH,CgC+CC,KhC/CR,EOsGiB,GAAG,IAAI,AjC7GE,CiC6GD,AyBvD3B,EAA2B,A1DtDI,OiC6G3B,CAJsC,CAMtC,EjC/GsC,CAAC,UAAZ,CAAuB,gBAAhD;EsE6CR,AL6BA,EvClEG,EgC+CC,E1DtDI,EiEyER,CPnBS,AYVT,AL6BA,CjEzEc,AsE4Cd,QL6BA,CK7BA,AL6BA,CjEzEwB,AsE4CxB,GtE5C2B,C0DsDvB,GAAuB,C1DtDK,C0DsD5B,MYVJ,EL6BA,CK7BA,EL6BA,CjEzE2B,CAAmB,KAAnB,CAAnB,AsE4CQ,CtEhDG,AsEgDnB,CtE3CQ,AiEwEW,CK7BA,AL6BnB,CK7BA,CL6BsB,CK7BA,CAAtB,EAAyB,KL6BzB,EAAiC,GK7BjC,EAAqC,KL6BrC,EAA2C,GK7B3C,EAA+C;EH9C/C,A5EMA,AmCjBA,EgCoEG,AYVD,AL6BA,E1EtEE,E0C2GE,AqClEA,AL6BE,IhCqCI,AkCjHZ,AG+CU,CH/CV,CF4Ec,CK7BD,C/EzCC,C0EsEG,A1EtEF,C0C2GG,A1C3GJ,C+EyCZ,A/EzCE,E0C2GiB,CkCjHrB,AF4EsB,A1EtEF,C4ENpB,KAAA,A5EM0B,CAAC,CAAD,C4EN1B,AF4EiB,A1EtEjB,C0EsEgC,CAAf,A1EtEc,C0EsE7B,EhCqCkC,CAAC,CAAD,CAAf,GAAqB,CkCjH1C,QlCiHmD,CAAC,CAAD,CAA7C;APtGP,IyCVG,AG+CA,AL6BA,A1EtEA,I0C2GI,AjC9GE,AsE4CA,AL6BA,CE5ED,C5EMC,CAAC,C0C2GG,AjC9GJ,ATGA,CAAN,GAAY,C0C2GG,CkCjHf,AF4EgB,CE5ED,ClCiHG,AqClEA,CL6BC,EK7BE,CrCkEC,AkCjHtB,ClCiHuB,CgCrCC,A1EtEF,CSHhB,AsE4Ce,A/EzCE,CAAD,CSFd,ATER,C0C2GkB,AjC7GT,CiC6GoB,QAAM,AgCrChB,ChCqCiB,AgCrCE,ChCqCH,AgCrChB,ChCqCU,AgCrC7B,GhCqCyC,CAAC,AjC7GjB,CAAC,AsE2CL,EAAU,CAAV,CtE3CZ,CiC6GuC,AjC7GjB,AsE2CG,CAAb,ErCkE8B,AqClEd,CrCkEI,AqClEpB,CAArB,GrCkEwD,EjC7Gf,EiC6GvB,CAAd,YjC7G2B,EAAyB;A0BQ5D,EyCXG,AzEMD,AHAC,C4ERD,CT0DE,AYTA,AL6BA,IhCqCI,AyBzDE,AYTA,AL6BA,CvEtER,CMFY,ANEZ,C4EyCW,CrCkEC,AyBzDA,EYTE,CZSC,COoBC,CjExEG,CiC6GD,CyBzDH,AYTI,AL6BA,AvEtEnB,CAAA,CuC2GqB,EgCrCF,EK7BL,EAAZ,KtE3CgC,CAAC,EiEwEhB,ChCqCiB,CAAC,AgCrCX,ChCqCU,AjC7GjB,CiC6GE,AvC3GrB,GuC2G0C,AgCrCX,AvEtE/B,CMF6C,QiC6GM,AyBzDpC,CzByDqC,CAAD,AyBxD/C,A1DrDmD,AiEwE7B,ChCqCpB,AjC7GkD,AiEwEb,AvEtE3C,CuEsE0B,CAAP,EPnBV,AOmBsC,CjExEnC,IiEwEwC,QAAjC,CAAjB,CPpBa,EAEX,CAFW,EAGX,WAHW,EAIX,KAAK,MAJM,EAKX,KAAK,KALM,CAAb;AnEjDH,ImEwDG,AOcA,AvEtEA,AiEiCA,I1B0EI,AjC7GK,AiEwEH,CPdD,A1D5DI,ANIJ,AiEiCD,C3DtCE,A2DsCD,E1B0EK,AjC5GF,AiEuEE,EjE3EJ,CiE2EO,EhCqCE,GAAG,CgCrCC,ANrCnB,CMqCoB,CAAD,ChCqCG,AyBnDtB,AOca,ANrCM,C1B0EI,AyBnDF,EOcI,CvEtEzB,AiEiCA,E1B0EkB,CAAW,AyBnD7B,GAA8B,EOcI,CAAC,CPdD,CzBmDC,AyBnDA,CzBmDC,CAAD,AgCrCV,ChCqCI,EgCrCa,ChCqCD,AyBnDX,CzBmDY,IyBnDI,CAAhB,CzBmDkB,AgCrCE,CAAC,CPdD,AOcA,ChCqCC,AyBnDrB,AOcL,ChCqCgB,EyBnDa,AOcE,EhCqCA,EyBnDE,CAAC,CzBmDzC,CAAd,EyBnD2D,CAAC,AOchE,MPd2D,GAAc,CAAf,CAA1D;AnEtDJ,E4EPE,AzEMC,CAFD,CgE0DE,AYhBA,AL8BA,ANpCA,I1ByEI,AjC3GE,AsEwCF,AL8BE,CPdD,AYhBA,GrCmEK,AkCjHZ,AF4EY,ChCqCC,AkCjHb,CG8CY,CL8BG,ChCqCC,AyBnDd,IzBmDkB,CAAC,AgCrCA,CE5ErB,AF4EsB,CE5EtB,AG8CO,AL8Bc,CjEtEG,AsEwCF,AL8BP,CjEtEU,CiC2GT,CAAW,AgCrCA,CAAC,CjEtEpB,CAAsB,AmEN9B,GAAA,ElCiHiC,AqCnE1B,CrCmE2B,AqCnEA,CrCmED,AgCrCI,ChCqCV,AgCrCW,EjEtE9B,CiC2G+B,CgCrCX,GE5E5B,AF4E6C,CAAlB,ChCqCkB,CqCnEtC,CAAL,CrCmE8C,AgCrCE,CK9BD,GrCmEjC,CAAV,GgCrCoD,CAAC,CAAD,CAA/B,GAAqC,UAA9D;EPbD,AhEvDD,CgEyCA,CShDE,AF4EA,EjEtEK,AsEwCH,CtExDyB,CiC2HvB,AgCrCE,CjErEF,AmEPC,CG8CC,ErCmEI,AgCrCA,ChCqCC,AjC3HgB,AsEwDlB,CtExDP,AmEUF,CF4Ea,ChCqCC,EqCnEA,ErCmEI,CAAC,AgCrCA,CAAC,CAAD,CAAN,EhCqCC,CAAW,AgCrCA,EK9BhB,CAAiB,CAAjB,EAAoB,CAApB,CrCmEsB,CAAC,AqCnEA,AL8BE,ChCqCH,AqCnEtB,AL8B0B,ChCqCV,CqCnEU,ErCmEE,AgCrCZ,GAAiB,GhCqCC,EqCnElC,CrCmEqC,CqCnEC,CL8BG,CAAC,ChCqCrC,AgCrCoC,ChCqC9C,AgCrCqB,GAA+B,GK9B/C,EAAkD,GAAlD,CAAP,CL8BF;A1CxBE,E1B7DJ,EoEsFE,EjEpEE,AsEsCA,ErCmEE,AgCrCE,C1CzBM,E1B7Dd,AGkBS,AsEsCA,CrCmEG,ApC3HZ,AoEsFY,ChCqCC,EgCrCE,ChCqCC,GV9DZ,C+CLA,A/CKqB,CU8DJ,ApC3HrB,AyEwDmB,AL8BE,CpEtFrB,AoEsFsB,CAAD,ChCqCG,AjCzGpB,AsEsCA,AL8BW,ChCqCT,AqCnEiB,EtEtCE,AiEoEE,CAAC,E1CzBxB,CvB3CqB,CHlBzB,A0B6DqC,G1B7DrC,EyEwDI,AL8BiC,CAAC,CK9BD,GL8BT,CK9BxB,EzExDO,AGkBc,AiEoEoB,CAAlB,CjEpEK,GiEoEkB,A1CzB9C,CvB3CqB,CHlBzB,A0B6DuD,CvB3CjB,CHlBpB,IoEsFwC,CAAC,CAAD,CAA/B,GAAqC,OjEpE1B,CAAU,EiEoE9C,IjEpEuB,EAA+B,GAAG,CAAC,MAAnC,EAA2C,GAA3C,CAArB;E0DsDN,AnCVE,E1B7DE,AsESA,AG+CC,AL8BD,CKjCA,CtEnCE,EiCyGE,CyBpDR,A7DvES,A0B6DA,C4CpDL,CnESO,AmETP,AG+CO,AL8BA,ChCqCG,ApC3HV,CoC2HW,ApC3HF,EoEsFF,A1CzBI,CU8DG,AyBpDlB,AnCVgB,EvB3CV,EmETF,ClCkHmB,AkClHb,GlCkHgB,CAAlB,CV9DO,E4CpDX,A5CoDwB,C4CpDX,CtETJ,CAAc,EsESvB,CAAa,GF6EN,CE7EP,A5CoDW,C1B7DX,AoEsFsB,C1CzBc,C1B7DH,EoEsF1B,EAAqB,GpEtF5B,CoEsFO,EAA2B,IAA3B,EAAiC,C1CzB7B,CAAb,E0CyBS,EAAuC,UAAvC,CAAP;AP5YJ,AnCoXC,CmCpXD,CAAsB,A7DuTnB,AsESA,AF6EA,CpExFD,AsEQA,AFuEA,CjE3DG,EsEsCC,ErCmEE,EqCnEE,ErCmEI,CqCnED,KAAK,IrCmEM,GAAG,AyBlb3B,CzBkb4B,AyBlb5B,CY+Wa,CAAe,GrCmEK,AqCnEpB,CAAmB,OrCmExB,KqCnEK,CAAP;A/CON,E1B7DE,AGiBC,AmERD,AF6EA,CjExGA,C2DkEE,I1B2EI,C0B3EA,CAAC,E1B2EK,YAAY,C0B3EtB,E1B4EM,UAAU,IAAI,IAAI,CAAC,QAAL,CAAc,IAAA,YAAA,EAAO,IAAP,CAAd,EAA4B,UAAU,CAAC,IAAvC,MAAiD,CADjE;EjCxGN,ANJA,EiEmCE,EWKE,ErCsEE,CvC9GN,C4EwCQ,A5ExCR,EuC8GU,EqCtEE,CZeC,AYfA,GAAL,C5ExCR,CAAA,E4EwCoB,ErCsEE,CqCtElB,ErCsEqB,AqCtEA,KrCsEnB,SvC9GN,GAAA,YAAA;AgEyDF,AnExDM,IGAF,I4EwCI,C5ExCC,AHAO,iBAAV,CAA4B,CGA9B,KHAE,EAAoC,WAApC,EAA+C;EACnD,EGAE,GHAG,C0C6GC,AqCrEA,C5ExCC,EHAE,C0C6GC,A1C7GA,C0C6GC,E1C7GE,CAAR,EAAW,EAAE,GGAhB,AHAmB,E0C6Gf,EAAmB,O1C7GO,CAAC,MAAjC,EAAyC,CAAC,GAAG,EAA7C,EAAiD,EAAE,CAAnD,EAAsD;EGCrD,CAHD,CHGE,I+EwCI,ErCqEE,IAAI,KAAJ,C1C7GU,C0C6GC,A1C7GA,MAAD,EAAS,WAAW,CAAC,CAAD,CAApB,CAAhB;EGEF,AHDC,M+EwCK,IrCqEI,AqCrEE,WAAW,GAAG,IAApB;IXLJ,IWMI,CXNA,CAAC,E1B2EG,AqCrEA,GAAG,KAAK,GrCqEG,A0B3EnB,G1B2EsB,CAAC,CAAD,EAAI,CAAJ,AqCrEX,CAAiB,CrCqEC,AqCrElB,CrCqEmB,CqCrEC,CAApB,CrCqEsB,CAAX,AqCrEY,CAAvB,CrCqEyB,CAAd,AqCrEe,ErCqEE,CAAC,GAAG,CAArB,EAAwB,CAAC,AqCrEpC,EAAsC,CrCqEC,CAA5B,EAA+B,CAA/B,EAAkC,CAAC,EqCrE9C,CrCqEiD,CAAtC,AqCrEuC,CrCqErD,EqCrEG,CAAP,CALmB,CAOnB;EHhDN,A5EMA,EoEoCE,KpEpCK,G4ENP,CAAA,E5EMA,O4ENA,CAAA,eAAA,GAAA,UAAgB,SAAhB,EAA2B,UAA3B,EAAqC;A5EOtC,I4ENG,IAAM,AGgDF,IrCmEI,AqCnEA,KrCmEK,AkCnHE,GAAG,ClCmHD,EqCnEE,CrCmED,AqCnEE,CHhDG,ElCmHF,CAAR,EAAW,EAAE,AqCnElB,GrCmEqB,GqCnEK,ErCmEA,CAAC,MAA3B,EAAmC,CkCnHzB,CAA+B,ClCmHL,GAAG,CqCnEb,CrCmE1B,AqCnEoC,ErCmEO,EAAE,AkCnHnC,AGgDd,CHhDJ,CGgDkD,CrCmE1C,EAAgD;A1C3G5D,ESEE,AiEoEA,KjEpEA,CAAA,EsEuCQ,AL6BR,CAAA,GhCsCY,GjC1GZ,CiC0GgB,AjC1GhB,CiC0GiB,CgCtCjB,CAAA,GhCsCsB,GjC1GtB,GAAA,EiC0GgB,IAAkB,IjC1GxB,IiC0GgC,EjC1G1C,AiEoEA,ChCsC6C,CjC1G7B,CiEoEhB,IhCsCmD,CAAC,GAAD,CAAvC,CgCtCc,ChCsC8B,KgCtCxD,EAAkC,CAAlC,EAAqC,aAArC,EAAkD;EpErFlD,AHeA,EMGE,AmEVA,AF8EA,IE9EI,AF8EE,CjEpED,ANHP,C4E0CQ,A5E1CR,CGfA,CAAA,AGkBE,CAAS,CsEuCC,CAAC,CrCmEC,CkCpHC,AF8EE,EvEvEjB,CuC6GoB,AkCpHF,AF8EE,AvEvEpB,CGfA,CAAA,EoC4HwB,EqCnEhB,CrCmEmB,EkCpHA,AGiDA,CtEvChB,AmEViB,CnEUH,CiC0GO,ApC5HhC,AoEsFE,ChCsC+B,EpC5HjC,CoC4HgC,CAAlB,AjC1GZ,EAA+B,CsEuCK,CAAC,EHjDrC,CzEOF,CGfW,AGkBT,AmEVyC,EzEO3C,KGfA,AyEyDQ,EzEzDU,KHelB;A6B+CI,EvB3CH,CAFD,CHhBE,AoEsFA,AvEvEA,EyEPE,EGiDG,CzEzDA,AyEsDD,ALgCC,AvEvEA,A6B8CO,G1B7DZ,CAAS,C0B6DP,C4CrDS,AGiDA,A/CIO,C4CrDN,S5CqDV,EAA4B,C7B9C9B,CyEPE,CtERO,CAAc,AoEsFvB,CE9E4B,AF8EA,K1CzB1B,C0CyBgC,CpEtFlC,AoEsFmC,A1CzBK,C0CyBN,CpEtFD,AsEQ/B,AF8EF,EAAuC,KpEtFvC,CoEsF6C,CAAC,CAAD,CAA7C,EAAkD,CAAlD,EAAqD,KAArD,EAA4D,SAA5D;EpErFD,AGmBD,ANJC,A6B8CD,C1B/DA,AHeA,CyELG,AF8ED,ANpCA,EpCWE,E0CyBI,CNpCF,CWOE,AXPD,EMoCK,EK7BA,CAAC,AL6BE,ChCqCD,AV9DA,CAAC,GU+DC,G0B1Ed,C1B0Ec,AgCtCQ,CAAC,A1CzBrB,C+CJI,AL6BgB,ANpCD,CMoCrB,A1CzBF,E+CJ2B,A/CIA,MoCXzB,KWOM,ErCmEQ,EACE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAC,GAAG,CAAX,EAAc,CAAC,GAAG,CAAlB,CADF,EAEE,CAAC,IAAI,CAAC,CAAD,CAAL,EAAU,IAAI,CAAC,CAAD,CAAd,EAAmB,IAAI,CAAC,CAAD,CAAvB,EAA4B,IAAI,CAAC,CAAD,CAAhC,CAFF,CADF,EAKE;EpC9HhB,AsEOC,AzEQD,CyEbA,CFmFE,A1CzBA,I+CJK,AL6BC,A1CzBA,I0CyBI,GAAG,GhC0CC,AVnEE,GAAG,CUmED,CAAC,CgC1CG,CAAC,A1CzBJ,C0CyBG,CAAtB,QhC0Cc,EAAmB,IVnEd,EAAS,UAAU,CAAC,SAAX,EAAT,CAAnB;AGxCE,EyCXJ,EF6EE,ANpCA,ApCWA,IoCXI,ApCWE,C0CyBD,AvClEO,MiC8BD,CAAC,EpCWI,EUmEA,CVnEG,KoCXnB,C1B8EuB,CAAC,A0B9EA,GMoCxB,ChC0CgB,AgC1CY,AvClE1B,CAAkC,CHyCJ,CAAC,G0CyBC,CAAC,AvClEjC,CuCkEgC,CAAlC,AvClE4C,EuCkEL,E1CzBP,EAAa,E0CyBA,CAAC,CAAD,CAA7C,AvClEE,EuCkEgD,AvClEO,CuCkEzD,EAAqD,A1CzBrB,EAAyB,E0CyBzD,AvClEE,EuCkEyD,AvClEO,MHyClC,CAAhC,AGzCE,EuCkEF,AvClEyE;EAC3E,EuCkEE,ENpCE,AjC9BE,E4CoCA,EXNF,CMoCK,CK9BC,CAAC,EL8BF,CvClEO,GAAG,CO4GD,EP5GI,CAAC,MAAD,CAAtB,EO4G8B,AqCxExB,GrCwE2B,IAAf,CgC1CT,ANpCL,EMqCA,IADK,EAEL,SAAS,CAAC,CAAD,CAFJ,EAGL,IAHK,EAIL,SAAS,CAAC,CAAD,CAJJ,EAKL,aALK,CAAP;EAOD,AvCxED,CuC2DA,CN7BG,ApCUD,EGxCI,E4CoCA,A/CIA,K+CJK,C5CpCG,GAAG,CO4GA,AVpEf,EAAgB,AGxCE,CAAC,C4CoCf,CAAe,OAAf,CAAuB,C5CpCT,CAApB,U4CoCM,EAAqC,IAArC;AZcF,EOwBJ,AvCzEA,I4CoCK,A/CID,AGxCJ,GgCiDc,OnCTA,CmCSV,AnCTW,CmCSQ,AnCTT,CAAV,EGxCJ,EHwCqB,AGvCnB,CgCgDE,EAA2B,MAA3B,CnCT2B,AGxC/B,CgCiDuC,ChC/CrC,CHsCgC,GmCS9B,EAA0C,EhCjD9C,EAGE,CHqCE,WmCSA,EAA0D,wBhC9CtB,CAAC,OAAD,CAHxC;EgCkDA,A1DpDA,A0BOA,E4CgCG,AXPD,ApCWC,EmCSG,AhC7CN,CgC6CO,A1DpDP,CAAA,A2DgCM,EDoBI,KAAK,ACpBF,CAAC,C3DhCd,CiC8GgB,AyB1DE,A1DpDlB,G0BOA,CiCyBE,CDoBa,AhC5Cb,CiCwBoB,C1B8EC,CAAC,AyB1DE,EAA1B,C1DpDA,E0BOA,C1BPA,C0BSE,EOqGc,GALA,CAMA,IPxGhB,C1BPA,C0BUE,sCAAsC,CAAC,OAAD,CAHxC;AnCTI,AmCcL,EgCyCC,AnCTC,EvB3CC,E2DgCE,E3DhCE,CAAC,ATHO,IoEmCH,C3DhCC,A2DgCA,MAAR,G3DhCF,A2DgCmB,E3DhCE,E2DgCF,GpEnCjB,CACJ,MADI,EAEJ,YoEiCqB,EAAmB,CpEnCpC,EAGJ,IoEgC+C,CAAC,CpEnC5C,EAIJ,GoE+BqB,ApEnCjB,EoEmCoD,ApE9BxD,KoE8B4D,CAAC,ApEnCzD,EAKE,SoE8Be,CAAjB;AjCnBN,EnCTE,E+EmCE,AXNC,E3DhCC,GTGG,ESHE,AsEsCA,IAAP,A/EnCW,G0C2GG,A1C3GA,ESHZ,CTGJ,ESHqB,ATGA,E0C2GE,CAAC,EjC9GE,CTGC,G0C2GX,CAAe,A1C3GA,MAA/B,EAAuC,CSHlB,EiC8GqB,AjC9GtC,CiC8GuC,CAAD,CAA1B,EAA+B,WAAW,CAAC,CAAD,CAA1C;EyB1DhB,A7DrEA,AyEwDC,A5EzCD,A6B6CA,C+ChCA,CtEVG,ATGD,EmEgDI,GhEtDN,A6B6CO,C7B7CP,CGfA,CAAA,ANqBU,CAAC,K0C2GK,CvCjHhB,A6B6CA,AhCvCU,CGNV,CgEsDqB,A7DrErB,ANqBmB,CMrBnB,E6DqEwB,CzB2DD,CAAC,AyB3DxB,IhEtDA,EuCiHgB,ApChIhB,CoCgI+B,AvCjH/B,EGfA,CNqBkC,CAAC,MGNxB,AHMuB,C0C2GQ,A1C3GhC,C0C2GiC,ApChIhC,CoCgI+B,A1C3GE,C0C2G5B,EAA+B,CvCjH/C,EGfA,AHekB,EGfA,MoCgIwC,CAAC,A1C3GA,C0C2GD,A1C3GE,C0C2G5C,K1C3GkD,GAAG,CAAV,CAAjD,CAAR;AgCwCH,E+CHC,A/EpCC,EMrBC,AHeA,AiEkCA,I9DjDA,A8DiDI,CjElCC,GAAL,CAAS,EiEkCE,CAAC,E1B+EE,GvCjHG,CAAC,AiEkClB,C9DjDA,C8DiDoB,C1B+EC,ApChId,CoCgIe,GvCjHtB,EAA2B,CuCiHb,ApChIA,CoCgIe,KvCjH7B,CGfO,KoCgIiC,ApChId,CoCgIe,CAAD,CAA1B,EAA+B,GpChI7C,EAAoC,EAApC,EADgB,CACyB,CoCgIe,CAAC,CAAD,CAA1C;AVnElB,EmCQE,AOwBA,AvE7EC,CAFD,CMIE,E2DgCE,CDmBC,GOwBL,CPxBS,A1DnDA,AiE2ET,CPxBU,CCnBC,CAAC,CDmBC,CAAb,A1DnDc,EiC+GE,AyB5DA,CAAC,COwBjB,AN3CI,CM2CJ,CPxBoB,CAApB,ACnBqB,E1B+EE,AyB5DA,A1DnDrB,CiC+GsB,CyB5DC,ACnBJ,CDmBrB,EAA4B,EzB4DZ,CAAe,MgCpC/B,GAAA,EhCoC0C,CAAC,CAAD,CAA1B,A0B/EK,E1B+E0B,A0B/EX,GM2CjB,IN3CwB,CAAC,G1B+Ec,CAAC,AgCpC3D,ChCoC0D,CAA1C,AgCpCY,AN3CP,E1BqEL,A0BrEoC,C1BgFpC,I0BhFwC,CAAC,WAApC,CAAjB;E3D/BH,AmETD,AzEQA,AHIA,CSRA,C0DwDE,A7DrEA,AoE6FA,AN3CC,IDmBD,AOwBM,CpE7FD,ANqBA,GMrBL,AsESF,CtETW,AsESX,CFoFc,C1ExEd,E0EwEiB,IPxBf,CS5DF,AFoFsB,CPvBlB,AS7DJ,OtETW,AsESX,CtETyB,AoE6FR,CAAe,CEpFhC,KT4DE,A7DrEA,E6DuEE,A7DvE8B,CoE6FO,CAAC,CEpFlC,AFoFiC,CPtBrC,AS9DJ,AFoFiB,CAAf,CEpFS,CtETT,AsESF,EAAc,CAAd,EAAiB,MT8Db,EAAa,ES9DjB,EAA2B,CAAI,CT8D3B,AS9DJ,ET8DyB,MAArB,EAA8B,IAAI,IAAI,CAAC,EAAT,GAAc,CAAf,GAAoB,CAAjD,EAAoD,gBAApD,CAFF;AnE/CH,EmEmDE,A7DxEA,AGmBD,CHtBA,CoEgGE,IAAM,UhCoCQ,AgCpCE,GAAG,IhCoCE,CAAC,AgCpCE,MhCoCV,CAAe,IAAI,CAAC,CAAD,AgCpCd,ChCoCL,AgCpCwB,EhCoCA,IAAI,CAAC,CAAD,CAA5B,AgCpCiC,CAAC,CAAD,CAA5B,CAAnB;A1EtEJ,EMrBE,AsEOF,EFqFI,AN3CA,IM2CM,CErFV,AR0CQ,CAAC,MM2CS,EhCoCA,CkCzHlB,AFqFqB,IAAA,AN3CjB,CAAmB,C1B+EE,CAAC,K0B/EtB,C1B+Ec,CAAe,EgCpCZ,EhCoCgB,AgCpCT,ChCoCU,CAAD,CAAnB,EAAwB,AgCpCT,IhCoCa,CAAC,CAAD,CAA5B,IgCpCU,CAAiB,SAAS,CAAC,CAAD,CAA1B,CAAP,EAAuC,KAAK,QAA5C,CAAjB;AEpZJ,CAAA,CT+XE,AS/XuB,EFqZrB,OAAO,CACL,KPvBW,AS/XjB,ClCybkB,AyB1DA,AS/XlB,AFsZY,CAAC,CAAD,CAAN,CPvBJ,CAAqB,COuBL,ChCmCO,AgCnCN,ChCmCO,MAAR,CAAe,CgCnCL,CAAC,CAAD,ChCmCS,AgCnClB,ChCmCmB,AyB1DA,CzB0DD,AyB1DE,CzB0DrB,AyB1DoB,AOuBJ,CPvBhC,CzB0DwC,CyB1DC,AOuBzB,GhCmC4B,CAAC,AgCnCN,ChCmCK,CAA5B,MgCnC+B,CAAC,CAAD,CPvBS,AOuBxC,CPvByC,CAAD,CAAxD,AOuBqD,UAD5C,EAEL,MAAM,CAAC,CAAD,CAAN,GAAY,CAAC,SAAS,CAAC,CAAD,CAAT,GAAe,GAAhB,IAAuB,QAAQ,CAAC,CAAD,CAA/B,GAAqC,UAF5C,CAAP;AEpFJ,ET+DE,AOyBC,CARD,MPjBO,IAAI,KzB0DK,EyB1DT,CAAY,IzB0DI,CAAC,MAAR,CAAe,GyB1DxB,CzB0D4B,CAAC,AyB1DA,CzB0DD,CAAnB,EAAwB,IAAI,CAAC,CAAD,CAA5B,YyB1DoB,CAAe,EAA5C,EAAgD,CACrD,eAAe,CAAC,MADqC,CAAhD,CAAP;AAGD,EYjBC,ALyCA,ANjDC,SWQD,CAAA,MrCyEgB,GqCzEhB,CAAA,GrCyEuB,CAAC,IAAR,kBqCzEhB,GAAA,UAA2B,MAA3B,EAAiC;AZmBnC,E1DzDE,A2DgCA,EWOE,GtEvCF,CAAA,AsEwCI,CAAC,OrCwEU,CjChHf,CAAA,WAAA,GAAA,WsEwCI,CtExCJ,GsEyCI,KAAK,wBAAL,IAAiC,MAFnC,EAGE;A/CCA,AG9BA,I1BZF,EsE0CE,G/CAU,AG9BA,E1BZL,CAAC,CAAC,CiCgHE,IjChHG,C0BYZ,CAAqB,EH8BrB,CAAwB,IvB1C1B,G0BYE,EAAiC,CH8BjC,EAAoC,UAApC,CG9BA,CH8BgD,CG9BD,oBH8B/C,EAAqE;EvBzCxE,AuB0CD,AG9BA,C1BdA,CsE4CG,E/CAG,MUsEK,UVtEW,GAAG,CG9BD,SH8BW,CAAC,SAAX,EAAzB;AhCtCI,ESFJ,ANHA,A6B4CA,AG9BA,IH8BI,G7B5CJ,AHKc,AmCSP,ChCdP,M6B4Cc,EG9BE,ChCdhB,A6B4CiB,AG7Bf,ChCfF,A6B4CA,AhCvCI,CAAsB,KGL1B,CHKI,EGLJ,AHKkC,AmCSlB,EAEd,GnCXE,EAAmC,GGLhC,GAAP,AgCcgB,EhCdN,AgCiBR,cAAc,KAAK,SAAnB,GAA+B,cAA/B,GAAgD,WAHlC,CAAhB;AAKD,E7BlCC,ANqBA,E+EsCE,A5E3CA,GHKG,E+EsCE,A5E3CA,EGhBP,ANqBS,C0C4GC,ApCjIV,AHgBE,AHKQ,CGLC,EHKE,CAAR,C0C4GU,CAAC,A1C5GA,EAAE,CMrBlB,AHgBmB,CuCiHT,ApCjIV,AHgBoB,CuCiHC,A1C5GA,EGLnB,EAAuB,CHKC,CAAC,CGLzB,EGhBF,CyE2DE,CrCsEQ,CpCjIV,ANqBA,C+EsCkC,C/EtCC,CAAC,GAAG,C+EsCrC,C/EtCF,EMrBW,ANqBgC,EAAE,CAA7C,EAAgD,EMrBhD,EAAkB;AsEQpB,AzC4BA,EhCnBG,A6B2CD,C7B7CA,CGdE,AsEOJ,A5EcI,EgCuCA,G1B5DK,GoCiIG,ApCjIR,CAAS,G0B4DC,CAAC,CUqEG,CAAC,AkC1HnB,E5EcqB,CAAC,C0C4GV,CAAY,CVrEpB,GhCvCiB,EMrBR,ANqBiB,CMrBH,CoCiIf,AVpEP,GhCxC8B,CAAC,CAAD,CMrB/B,ANqBiB,CAAjB,CMrBgC,E0B6DrB,CAAC,CAAD,CAAV,E1B7DD,C0B6DiB,gBAAgB,CAAC,CAAD,CAAhC,IAAuC,UAAU,CAAC,CAAD,CAAV,GAAgB,gBAAgB,CAAC,CAAD,CADxE,CADF,EAGE;A4CvDJ,EtENG,AHiBD,AiE+BA,ApE3BC,CMvBD,CyE4DE,A/CIA,EoCdF,CAAA,CpCcQ,C+CJD,CrCuEE,CAjCD,EqCtCK,EAAX,CXVF,C1BiFe,A0BjFf,EWUmB,KAAK,C/CIC,GACrB,EoCfJ,GAAA,UAAc,GWUZ,EAA8C,C/CKvB,CoCfzB,EAAqB,CpCeQ,IAAA,gBAAA,EAAS,gBAAT,CAD3B;A4CxDJ,EtEJE,E8D+CE,ApCeA,E+CLE,EXVI,EQ3CV,CGqDW,CrCuEC,EVlEE,E4C1Dd,C5C0DiB,C4C1DjB,AR2CoB,C1BiFD,CAAC,C0BjFG,ApCeF,CAAC,GoCfC,EpCeN,CACX,CUiEM,AVjEL,CUiEuB,CAAlB,EAAqB,AqCvE3B,CrCuEM,AqCvEsB,ErCuEE,AqCvE9B,AXViB,C1BiFX,CqCvE0B,AXVR,C1BiFS,AVjEtB,CUiEL,A0BjFW,ApCgBL,CAAD,CoChBiB,ApCgB3B,C+CND,E/CMiB,IoChBA,CAAnB,WpCgBmC,CAAC,CAAD,CAAjC,IAAwC,iBAD7B,CAAb;AmCWE,ESrE+B,A5C6DlC,AhC7CD,E+EsCG,KZeW,AnErDP,C0C6GE,CkC7H0B,CAAA,G5EgBnC,ImEqDI,CAAqB,MAArB,CSrE+B,CTqEJ,CSrEI,MAAA,CAAA;A5EiBpC,EmEqDC,ASrEA,AF4FA,ENjDE,ED0BI,EzBwDC,C0BlFA,CD0BG,AOuBV,CAAA,EPvBa,AC1BA,GAAX,GD0BiB,CAAC,AOuBpB,ANjDoB,CD0BD,AOuBnB,CPvBA,iBOuBA,ENjDE,CMiDF,CNjDkC,SMiDf,SAAnB,EAA8B,UAA9B,EAAwC;A1E1E1C,EmEoDE,A1DxDA,AuB+CA,E+CPE,ALuCA,EPvBI,AC1BF,C3D9BJ,CAAA,AiE+EQ,CKvCD,A/COA,CmCSG,GAAG,AC1BF,CMiDG,EKvCZ,CtExCF,AiE+EiB,CjE/EjB,C0DwDmB,AnCTnB,CmCSoB,CAAD,CAAnB,AOuBsB,CNjDD,CAAC,GAAD,CAAjB,GMiDa,CjE/EjB,AiE+EgC,GjE/EhC,MiE+EyC,CAAC,CAAD,CAAxB,CAAf,EjE/EF;AuBgDD,EmCSC,AYhBC,CAZD,CtE5BE,AiE+EA,ANjDC,ED0BG,EzBuDA,AgChCE,EPvBE,C1DxDD,EiC+GE,AyBvDE,E1DxDX,GiE+EgB,CPvBC,CAAC,CAAD,AOuBE,CPvBrB,IzBuDM,AgChCoB,ChCiClB,IADF,EAEE,MgClCa,CAAmB,GhCgClC,EAGE,CAHF,EAIE,CAJF,AgChC2C,CAAC,ChCqC1C,AgCrCyC,ChCgC3C,AgChCe,CAAnB,ChCsCM,CANF,EAOE,UAPF,EAQE,UARF;EyBtDN,A1DxDC,AsEyCD,CtE3CA,CiEiFE,EPvBI,EOuBE,EPvBE,GAAG,GOuBG,GPvBG,AOuBA,CPvBC,CAAD,CAAnB,COuBmB,YAAA,EAAO,KAAK,WAAL,CAAiB,SAAS,CAAC,CAAD,CAA1B,CAAP,EAAuC,KAAK,QAA5C,CAAjB;EPtBF,A1DvDA,EiE8EE,ANlDA,ED2BI,EzB+DA,AgCxCE,CNlDD,G1B0FG,AgCxCE,GAAG,EhCwCA,IAAI,AyB/DE,AOuBA,ChCwCD,AgCxCE,ANlDpB,CMkDmB,ANlDA,CD2BG,AOuBT,CPtBb,EOsByB,EPvBH,EAEtB,EC7BA,C1B0FI,CyB/DkB,AC3BS,C1B0FC,AgCxCE,CPpBlC,AOoBmC,CAAD,CAAT,ANlDzB,ED2BsB,COuBkB,CPnBxC,IAJsB,EAKtB,COkBgD,CAAC,CAAD,CPvB1B,AOuBG,EPjBzB,COiBsD,GPvBhC,EAOtB,IAPsB,COuBtB,CPfA,IARsB,EAStB,IATsB,EAUtB,IAVsB,CAAxB;EAYA,AhErEA,EuEiFE,ANjDA,IMiDM,ANjDA,CDqCD,AhErEP,CuCyHQ,AvCzHR,EuEiFY,CPZD,CzBoDC,CgCxCG,IvEjFf,CgEqEO,AhErEP,CgEqEmB,AOYE,CAAC,CAAD,CAAN,EhCwCP,CgCxCmB,ChCwCD,AgCxCE,CvEjF5B,GAAA,AiEgCgC,GAAG,CDqC5B,COY8B,CPZD,AOYE,CAAD,CAAT,EvEjFlB,CuEiFiC,CAAhB,IAAqB,AvEjFhD,EAAgB,MuEiFwC,CAAC,CAAD,CAA7B,EPZS,ACrCyB,CDqCV,AOYW,ANjDA,EDqCvD,EAAgD,CACrD,ECtC2D,CAA3D,EMiDA,UPXe,CAAC,MADqC,CAAhD,CAAP;AAGD,ESpFC,EF8FE,AvEjFA,AiEiCA,IMgDM,CvEjFD,EyEbP,ClCsIU,AgCxCE,AvEjFV,CAAS,EuEiFI,IhCwCE,AgCxCE,ChCwCD,CvCzHC,CuEiFG,AvEjFF,IyEbpB,ClCsIU,AkCtIE,CzEaV,EuEiF4B,AvEjFF,CyEb5B,AF8F+B,CAAD,CE9FZ,AF8FI,GAAc,AvEjFlC,CyEbF,EAAsB,OF8FpB;APRJ,AhCtDM,E7BlCJ,AHgBC,CAFD,CyEZA,AF+FE,IE/FF,AF+FQ,CvC/DM,COuGL,CpCzIT,CAAA,AoEiGY,CE/FZ,EF+Fe,CE9Fb,CzC+BE,CAAmB,CuC+DJ,EpEjGnB,CAAA,AsEGE,AF8FoB,CE9FpB,IAAA,CAAA,AzC+BE,EuC+D0B,AvC/DK,C7BlCnC,AoEiG+B,CE9F7B,AF8F4B,CAAR,CpEjGtB,AsEGQ,EF8F4B,EE9FlC,KAAW,CtEHH,A6BkCN,EuC+DF,AvC/D+C,CyChCjD,GtEFA,EAAgB;ANqBZ,EGHJ,AgCiBA,E7BlCE,AsEIA,AF6FA,EvC/DI,G7BlCC,ANoBO,E0E6EL,CpEjGP,A6BkCU,C7BlCD,EoEiGF,AvC/DM,EnCdX,CAAmB,MAAnB,AmCcoB,CACtB,CnCf6B,CAA3B,EAA8B,CMpBvB,ANoBP,CMpBqB,CNoBU,GmCcX,EuC+Df,AvC7DP,C7BpCA,CoEiGsB,CpEjGU,GoEiGzB,EAAqB,CpEjG5B,GoEiGO,EAA2B,AvC7DpB,IuC6DP,CvC7DY,CuC6DqB,IAAjC,EAAuC,EvC7D9C,GAA+B,KuC6DxB,CAAP,QvC7DA,GAAgD,WAF1B,EAGtB,WAHsB,CAAxB;E7BjCC,AGiBD,AiEgFC,A1E7ED,AmCkBA,C7BxCA,AoE0FA,GvClDM,C1BrBN,CAAA,ATGM,CAAC,AmCkBE,COkGD,A1CpHF,CAAN,CmCkBY,EnClBA,C0CoHC,EjCvHb,CAAA,ATGgB,AmCkBE,CnClBD,AmCkBE,CAAD,CAAlB,CnClBY,CAAS,K0CoHb,CAAmB,A1CpHA,CAAC,CAAD,CAAf,CSHZ,CTGgC,CAApB,C0CoHJ,AjCvHR,ATGA,C0CoHmC,IAA3B,OjCvHR;EHfA,AoEiGA,A1E9EA,ESHE,IiCuHK,AjCvHD,ATGA,C0C+GA,A1C/GC,CAAD,CAAN,ESHW,CTGC,C0CoHC,G1CpHG,CAAC,GSHf,ATGU,CAAS,CSHC,KTGK,CAAC,CAAD,CAAf,EAAoB,CAApB,CAAZ;EACA,AmCiBA,EiCWE,E3D/BE,A0BoBA,EnCjBE,CoE4BC,ApE5BA,AmCiBA,COmGC,A1CpHF,CSHG,ATGT,CmCiBU,CAAC,CnCjBC,C0CoHC,CPnGT,EnCjBY,CAAC,CSHb,A0BoBc,C1BpBC,CTGP,CoE4BV,ApE5BmB,AmCiBA,GiCWG,AjCXA,EOmGhB,AjCvHJ,CiCuHuB,A1CpHA,AmCiB3B,CnCjB4B,CAAD,AmCiBE,CnCjBjB,C0CoHJ,CAAwB,A1CpHA,CAApB,CAAZ,E0CoHQ,Y0BxFwC,CAAC,aAA/C;EpE3BF,EoE6BE,AjCZA,E1BpBE,EiCuHG,A1CpHD,CAAC,CAAD,AmCiBE,CnCjBR,AmCiBS,CAAD,C1BpBG,A0BoBT,CnCjBU,EmCiBE,E1BpBE,ATGA,CAAC,CmCiBH,EnCjBF,CAAS,ISHjB,ETGuB,CAAC,CAAD,CAAf,AmCiBE,EnCjBkB,AmCiBX,CnCjBT,CAAZ,CmCiBwB,GAAG,GAAb,EAAkB,GAAlB,IAAyB,GAArC;AnChBH,EmCiBE,E1BpBE;ATKL,Q0CkHQ,KAAK,eAAL,CAAqB,UAAU,CAAC,SAAhC,EAA2C,UAA3C,EAAuD,IAAvD;EpCvIN,A6BqCA,E1BnBE,AmEfA,ElCqIG,GjCtHE,AmEfD,AzCkCC,CyClCA,CtEHP,CAAA,EsEGE,CzCkCF,EyClCc,CnEeZ,CAAe,EHlBjB,AsEGE,CtEHF,CGkBE,cHlBF,GAAA,YAAA;A6BsCD,IOmGI,ApCxID,IAAI,KAAK,MAAT,EAAiB;A6BuCrB,EyCpCG,AGwDD,EtEzCE,A2DgCA,E9DjDE,G8DiDG,C3DhCL,CHjBO,AGiBP,AsEyCF,CAAA,KzE1DI,CAAY,EGiBd,CAAM,AsEyCR,CAAA,CzE1DI,A8DiDF,G9DjDsB,A8DiDA,I9DjDpB,MGiBF,CAAqB,IAArB,CAAqB,IAArB,AsEyCF,GAAA,CXTgD,CAAC,QWSxB,KXTvB,KWSF,EAAqC,QAArC,EAA6C;AZ8BzC,E1DtEH,ANDD,CMPA,CiC+HE,AqC9EA,AXRA,E9DlDE,EyE0DE,CrC8EC,AyBjDO,AhEvEd,CAAA,CGhBS,MAAL,E6DuFA,AhEvEJ,CgEuEyB,A7DvFP,AHgBlB,IGhBI,CoCwIF,CyBjDE,EzBiDsB,AyBjDO,GhEvEjC,GAAA,GgEuEI,EAAwC,GzBiD1C,AqC9EA,EAAgC,A5E1CtB,IgEuER,EAAiD,EhEvErD,EAAoB;EgEwEpB,AStFF,ElCuII,ApCxIC,AHgBD,EgEuEI,AY7BF,GrC8EG,AkCvIT,AzEeS,C4E0CG,CZ6BC,ChEvET,CAAS,CgEuEG,AY7BA,GAAG,IAAA,A5E1CE,CAAC,CgEuEG,CStFzB,ETsF4B,CzBiDxB,GAA0B,AqC9EX,A5E1Cf,E4E0C6B,A5E1CD,GgEuEP,GAAe,EAAtC,AhEvEE,E4E0Ce,CAAb,CrC8EF;AkCtJJ,CAAA,CTsGE,A1DvEF,AmE/BqC,AzE+BlC,CAFD,CuC0HE,EyBjDI,GzBiDC,AjCxHT,G0DuEc,E1DvEd,C0DuEiB,CStGjB,CAAA,ITsGuB,CzBiDnB,AyBjDoB,GzBkDlB,CAAC,KAAK,AyBlDK,EAAf,azBkDI,IAAyB,CAAC,IAAA,cAAA,EAAO,KAAK,eAAZ,EAA6B,YAA7B,CAD5B;AjC/aJ,CAAA,C0D+XE,A1D/XkB,ANyTlB,EuCwHE,ApC1IA,E6DwFI,AY9BF,GrCgFG,CpC1IL,AyE0DM,CzE1DN,C6DwFU,EY9BR,CZ8BW,A1D/XjB,CAAA,AsEiWgB,IzE1DZ,C6DwFmB,A7DxFb,C6DwFc,EzBkDpB,GAAuB,IyBlDV,EAAf,G7DxFE,CAAqB,EoC0IrB,EpC1IA,CAAqB,IAArB;AGkBJ,E0DuEE,A7DxFC,CAND,CoCgJE,EyBlDI,EY9BA,CrCgFC,GyBlDK,AY9BA,GZ8BG,IY9BI,EZ8BE,CAAC,AY9BA,IAAA,CrCgFpB,GAA0B,CyBlDb,EAAf,KY9BsB,ErCgFpB,AqChF2B,IAAP,CAAhB;EZ+BN,AOUA,EhCwCE,A0BxFA,EDsCI,GzBkDC,A0BxFA,CMgDP,CAAA,IElGa,ETwFI,GAAG,AOUpB,ANhDE,CMgDF,ENhDqB,GDsCK,CzBkDxB,GAA0B,AyBlDE,KAAK,GAAG,CAAZ,CzBkDxB,AyBlDF,OCtC6C,CAAC,MMgD9C,GAAA,CNhDE,SMgDgC,UAAlC,EAA8C,UAA9C,EAA0D,aAA1D,EAAuE;EPTvE,A7DzFF,EoC4II,AgCzCA,AN/CA,EDqCI,EY/BA,CrCkFC,ApC5IT,EoEmGW,CKzCC,EAAE,ELyCE,EpEnGhB,G6DyFuB,AY/BF,GZ+BK,CY/BD,CrCkFrB,CACE,CyBpDwB,EY/BA,GZ+BJ,CAAU,GzBmDhC,EAEE,MyBrDoB,CAAxB,COUS,CACL,ChCwCF,EAGE,AqCrFM,CAAJ,EAA8C,IL0CtC,ChCwCZ,AgCxCa,CAAD,ChC4CV,AgC7CK,EAEL,QhCuCF,EAKE,AgC5CU,CAAC,CAAD,CAFL,EAGL,KhCsCF,EAME,GgC/CK,EAIL,ChCqCF,EAOE,CAPF,CgCzCO,ChCiDL,CgC5CA,QhC4CS,CAAC,IgCjDL,CAAP,KhCiDE,EARF;ApCxdJ,ANmWM,CMnWN,CAAwB,AoEsbrB,CARD,ChCoDE,KAAK,A1C/HO,C+EoCN,KAAK,EzEvYf,CAAA,INmWM,CAAwB,K0C+H1B,CAAyB,A1C/HvB,EAAgC,K+EoC5B,CAA2B,ErC2FjC,A1C/HE,E0C+HmC,A1C/HK,G+EoCpC,IAAsC,GrC2F5C,KqC3FM;EZ+BR,AOkBA,A1EpFA,E0CgIE,E1ChIE,CmEkEC,CY9BE,CrC4FA,A1ChIP,EmEkES,CAAC,GAAG,CAAb,EAAgB,CzB8Dd,AyB9De,CzB8DC,EyB9DE,KzB8DlB,EAAyB,IyB9D3B,EAAiC,CAAC,GzB8DhC,CyB9DoC,MAAtC,EAA8C;EnEjE9C,EmEkEE,CnElEC,C+EoCE,E/EpCC,OMvBO,CNuBC,CAAC,EmEkEE,CAAC,CAAD,CAAf,GAAqB,CAArB,InElE0B,CAAC,MAAD,CAAd,CAAd;EGJA,EuCqIE,AyB9DA,AY9BC,IrC4FG,CvCrIN,CAAA,QuCqIgB,CAAC,AyB9DA,AhEvEjB,CgEuEkB,AhEvElB,CgEuEmB,GAAG,CzB8DpB,AyB9De,CAAf,CzB8DuB,EyB9DE,CAAzB,IhEvEF,GAAA,YAAA;AgCsBI,E4CoBH,A/ErCD,C+E2BA,C5E/BE,AiEkCA,E1BmGE,A1CjIA,EGJE,CiEkCC,ApE9BP,AmCiBc,EnCjBL,E0CiIE,AvCrIA,CuCqIC,KPhHR,ChCrBF,AgCqBuB,COgHrB,A0BnGF,CjElCkB,EiEkCE,OAAO,AjCbzB,CiCa0B,CjCbQ,UiCapC,CjCbE,EAA6C;EACjD,EOgHG,AyB/DD,ACnCA,ApE/BA,EGJE,AgCqBA,GgCiDG,EhEtEE,AHIA,EmEkEE,CAAC,AnElEV,GmEkEa,AhCjDA,CgCiDb,EAAgB,CAAC,ChEtEf,AgCqBgB,ChCrBC,CgEsEC,IhEtEI,EgEsExB,EAA4B,CAAC,AhCjD/B,EgCiDE,AhEtEE,AgCqB6B,EgCiDE;A1DtE/B,EsEyCN,A/EpCG,EGJE,AgCqBD,EgCiDE,G1DvEU,AsEyChB,E5CnBW,I1BtBL,A0BsBF,C1BtBmB,EsEyCvB,GZ8BqB,CAAC,CAAC,GAAG,A1DvEpB,C0DuEe,CAAf,A1DvE6B,G0DuEJ,MAAM,A1DvE/B,C0DuEgC,CAAD,A1DvEO,C0DuEtC;AYraN,CAAA,CtE+VE,AsE/VsB,A5EgWrB,AgCqBA,ChCzBD,CuCwIE,AyB9DC,E1DvEC,CAAC,CiCqIH,SjCrIa,CAAC,AsE/VlB,CrCoeI,AqCpeJ,ErCoeW,IjCrIT,EAAyB,CiCqIvB,EAAgB,+BAAhB;AqC3FJ,EZ8BG,AhErED,AHEA,ESJE,CTIC,GAAG,GSJG,KAAP,ATIY,CAAC,cAAc,CAAC,MAAD,CAAf,CAAd;ESHC,A0BqBD,EOgHE,EPhHI,EOgHA,QPhHU,GAAG,IOgHE,KAAK,EPhHI,CAAC,GOgHC,CAAC,IPhHd,COgHO,CAAa,KPhHO,IOgH5C,EAAgD,KPhHO,CAAC,QAAZ,EAA9C;EgCkDA,AnEnEA,EoEgCE,E1BkGE,AyB/DE,AnEnEF,GoEgCG,ApEhCP,CmEmEU,CnEnED,C0CkIC,CAAC,AyB/DE,CAAC,GCnCZ,C1BkGE,CAAa,C0BlGC,OAAO,C1BkGrB,A0BlGsB,CDmCG,CAAC,CzB+DD,I0BlG3B,CDmCW,CAAb,SzB+DI;EyB9DJ,A1DvEA,A0BqBA,EOiHG,A0BjGD,ApEjCA,EmEmEI,A1DvEA,A0BqBF,KnCjBK,EmEmEI,CnEnEX,EmEmEc,A1DvEA,C0BqBD,CAAC,C1BrBG,C0DuEC,KhClDhB,EgCkDY,CAAY,A1DvEA,CAAC,G0BqBC,O1BrB9B,I0DuEgB,AhClDyB,CAAC,CgCkDG,MAA7B,AhClDc,EgCkDuB,AhClDrD,EAAqD,EgCkDrC,CAAhB;EACA,AnEnEC,EmCiBC,OAAO,EgCkDE,CAAC,OAAD,AhClDT,EgCkDmB,MAAV,EAAkB,MAAM,CAAC,SAAP,EAAlB,EAAsC,SAAtC,CAAX;EACA,A1DxEA,A0BsBC,CAFD,COkHE,EjCrIA,EiCqIM,CyB9DD,AhClDA,MOgHQ,CyB9Df,A1DvEY,EiCqIM,CjCrIH,GiCqIG,OjCrIO,CAAC,OiCqIR,EAAW,IjCrI3B,IACA,EiCoIqC,CAAC,OAAtB,AjCpIN,CiCoIV,GjCpIc,UAAU,CAAC,aAF3B,EAGE;A0DsEH,AY/BD,E/ErCE,E0CkIE,AjCnIA,A0BmBA,CnClBC,G0CkIK,A1ClIF,AmCkBE,C4CmBD,EtEtCE,KAAP,ATCY,C0CkIG,A1ClIF,G0CkIK,CPhHC,GAAG,COgHC,G1ClIC,CAAC,G+EqC7B,CAAiC,CrC6F7B,C1ClIwB,CAAZ,CAAd,K+EqCF,EAA4C,GAA5C,EAA+C,E5CnBM,CAAC,WAAD,EAAc,WAAd,CAAjD;AgCoDJ,E1DtEG,AsEsCD,E5CnBE,OAAO,aAAa,KAAK,cAAlB,IAAoC,UAA3C;E4CmBgD,ALkDlD,AvExFA,AHCA,AmCmBC,EO+GC,A0BhGA,EpElCE,E0CkIE,CvCnIN,AiEmCO,ApElCP,C0EuFA,AvExFA,C4EsC2D,ALkD3D,A1EvFS,C+EqCmD,GrC6F/C,E0BhGX,EjEnCF,CuCmIkB,AqC7FgC,ALkDlD,AvExFA,AiEmCkB,CMqDlB,CKlDiD,CAAuB,GAAvB,GrC6FtB,AqC5FzB,CrC4F0B,CvCnI5B,C4EsCiD,E5EtCjD,CuCmIkB,CAAgB,OAAhC,CvCnIU,AiEmC8B,C1BgGC,A0BhGA,OMqD3C,ANrDE,GMqDF,UACE,CADF,AvExFA,EuE0FE,AvE1FgC,CuEwFlC,EAGE,UAHF,EAIE,yBAJF,EAKE,aALF,EAKe;AKrDhB,A5CnBA,E1BpBC,EiE8FE,AvE9FA,AiEoCA,ApEnCA,E0CkIE,AjCnIE,EiE8FE,AvE9FA,AiEoCA,CM0DC,CjE9FC,CNAC,AHCF,C0E6FG,CjE9FC,CNAC,AHCZ,C0CkIW,CAAC,CgCrCG,EvE9FE,EuCmIf,CAAgB,AjCnIE,CAAC,C2DoCC,CjEpCV,EMAd,ANAE,AiEoCyB,E1B+FvB,GAA0B,EgCrClB,CAAuB,IhCqC/B,MgCrCQ,CAAV,GN1D+C,CAAC,OAAD,CAA/C;AjCdJ,E1BrBE,ATCC,E0CkIE,AgCrCD,AN1DA,IM0DM,AN1DA,C3DpCD,IAAI,AiE8FE,GjE9FC,AiE8FE,UjE9FQ,AiE8FE,CjE9FD,C2DoCG,CM0DC,EN1DE,G3DpCxB,AiE8F2B,IjE9FE,IAAI,IAAI,CiE8Ff,CAAmB,CAAnB,CAA3B,KN1DqD,C3DpCD,A2DoCE,C3DpCD,OAAvD,E2DoCE;A3DnCH,IiE8FG,AvE9FA,AiEoCA,IM0DM,AvE9FF,AiEoCE,CjEpCD,GAAD,EuE8FQ,CKvDD,C5EvCC,CuE8FG,AvE9FF,GAAG,CAAC,CuE8FG,IN1DI,GAAG,EM0DZ,CAAe,CAAf,CAAf,GvE9Fa,EAAT,IAAmC,CAAC,KAAK,GAAL,CAAS,AiEoCE,CAAC,OjEpCK,AiEoCN,CjEpCO,AiEoC1D,QjEpCwC,CAAxC,EAAqE;EHCvE,E0CmIE,AgCrCA,ANzDA,CpErCC,CGAC,EuE8FI,A1E9FF,G0CmIG,KAAK,AgCrCE,A1E9FF,CAAC,E0E8FI,IAAA,EhCqCjB,E1CnIuB,CAAC,MAAD,C0E8FN,A1E9FL,CAAd,C0E8F0B,KAAK,WAAL,CAAiB,CAAjB,CAAP,EAA4B,KAAK,QAAjC,CAAjB;EhCsCD,CAhUD,CgC4RE,AvE/FC,IuE+FG,OjE/FO,GiE+FG,GAAI,KAAK,IAAI,CAAC,GAAG,MAAM,CAAC,CAAD,CAAd,CAAN,GAA4B,UAA5B,GAAyC,QAAQ,CAAC,CAAD,CAAlE;EhCsCF,A1CrIA,E0EgGE,E1EhGE,E0EgGE,C1EhGN,EAAS,O0EgGO,GAAI,KAAK,IAAI,MAAM,CAAC,CAAD,CAAN,GAAY,CAAhB,CAAN,GAA4B,UAA5B,GAAyC,QAAQ,CAAC,CAAD,CAAlE;IvE9FA,AHDA,IGCM,GHDC,GAAP,CGCa,GAAG,KAAK,OAAL,CAAa,GAAG,CAAC,gBAAJ,EAAb,EAAqC,GAAG,CAAC,OAAJ,EAArC,CAAhB;EHAD,E0EgGC,AvE/FA,IuE+FI,AvE/FE,OAAO,GAAG,KAAK,UuE+FrB,AvE/FgB,EuE+Fe,AvE/F/B;AgEsEE,IhErEF,AiEoCA,EM2DE,EvE/FI,CgEqEM,ACjCP,OM2DO,GAAG,AvE/FE,CgEqEf,CAAsB,ACjCxB,CjEpCoB,CuE+FL,CN3DK,GjEpCK,CgEqEvB,EAA+B,GO0BlB,CvE/FK,CuE+FA,AvE/Fa,CgEqE/B,EAAuC,IhErErB,EgEqElB,AhErEwC,CuE+F3B,AvE9Fb,CgEoE+C,CO0BjB,EvE9F9B,MgEoEA,AO0Ba,EP1B2C,EO0Bd,CAA1C,IvE9FA,EAAW,OAAX,CADwC,EAExC,IAAA,gBAAA,EAAY,OAAZ,CAFwC,CAAtB,CAApB;EgEsEF,AnEvEA,EGME,EgEiEI,AO0BF,AN3DA,EjEhCI,CHND,GoEsCG,EAAE,ApEtCZ,E0EiGc,GAAG,EP1BI,EO0BJ,CP1BO,EhEjEE,GAAG,CiE+BP,CDkCS,CAAC,CO0Bf,EAAK,UAAL,EAAiB,GP1BV,ChEjE2B,CgEiEnD,GO0BiB,AvE3FsC,EAArD,EuE2F4C,CAA1C;A1EhGL,EmEuEC,EO0BG,AvE1FD,CuEuFA,CPvBI,ACjCF,EjE/BI,GuE0FC,CP1BG,GAAG,ChEhEC,AiE+BF,EAAE,CjE9BZ,GgE+DkB,CAAC,SAAR,EAAf,GhE/DsB,CAAC,AiE4BD,MjE5BlB,KAA8B,SAA9B,GAA0C,EAA1C,GAA+C,kBAAkB,CAAC,MADpE;AHLJ,EmEsEE,IAAM,AO0BF,AN3DA,KDiCO,GAAG,ACjCF,EM2DE,AN3DA,GM2DG,IAAA,MP1BY,CAAC,IO0Bb,EP1BH,AO0BS,GP1BgB,MAAzB,CO0BG,EP1B+B,AO0Bb,CP1BnC,OO0BiB,CAAb;AvC3EA,EgCkDJ,EhEhEE,AiE2BoB,CAApB,CDqCI,AO0BF,EvE1FE,CAAC,AgCcO,IhCdP,GgEgES,AO0BF,GP1BK,AO0BF,IAAA,KP1BW,GAAG,GO0Bd,CvE1FV,CuE0FgB,AvC5EnB,ChCdkB,AgCetB,GgCiD4B,GAAe,CAA3C,AhEhEO,EuE0FU,AvE1Fc,EuE0FI,KvC5E/B,EAEJ,CuC0EiB,CAAb,AvE1FG,CAAL,EAA2C,gBgCczC,EAEiB;EAErB,EuCyEG,AN1DD,EjEhCE,AgCiBE,GiCeC,OjCfS,GAAG,CiCejB,CAAiB,OAAO,CAAC,MjCfQ,CAAC,CiCejB,KAAqB,CjCfrB,EAAnB,MiCemB,GAAiC,OAAO,CAAC,QAAzC,GAAoD,CAArE;EDgCF,AhC9CA,EiCeE,EjEhCE,AgCiBE,CgC8CD,EC/BE,CjEhCG,CgE+DD,CAAC,GAAG,CAAb,EAAgB,CAAC,ChE/DG,CgCiBC,EgC8CA,AhE/DE,CgCiBC,EiCetB,CACE,CD8BJ,EAA4B,EAAE,CAA9B,ChE/DkC,AiEiCvB,CD8BsB,AhE/DE,AiEiCvB,CjEjCsB,CAAX,GAAiB,CiEiCpC,IjChByC,CiCgBtB,AjChBuB,ChCjBC,CAAC,CAAD,CAA3C,GgCiBoB,EiCgBpB,AjChBJ,GiCgBmC,OAAO,CAAC,MAAvC,GAAgD,IADlD;EjCdF,EgC8CE,AO2BA,EvE1FE,AgCiBA,EgC8CI,EhE/DE,CuE0FD,GP3BK,CO2BL,EP3BQ,CAAC,ChC9CD,EgC8CI,AhE/DA,CgCiBD,EhCjBI,EgCiBJ,CgC8ClB,IhE/D6B,CAAC,CAAD,CAAP,GAAa,GuE0F5B,CvCzEW,CuCyEa,CAAxB,AvCzE4B,EuCyED,GvE1FY,CAAC,CAAD,CAA5C,EgCiBgB,EuCyEX,AvCzEwC,EuCyED,UAAvC,EAAmD,CvCzExC,CAApB,WuCyES,CAAP;EACD,CAxBD,CPHE,AC9BA,EjEjCE,EgE+DI,AC9BF,EjEjCI,GgE+DG,EC9BA,CD8BG,AC9BF,GjEjCK,GAAG,IgE+DI,AC9BpB,GD8BwB,EC9BD,ED8BC,AhE/DG,CAAC,CAAD,CAAX,GAAiB,CiEiCrC,EAAsC,GD8BV,ChE/DgB,CgE+DT,AhE/DU,CgE+DjB,AhE/DgB,CAA1C,CgE+DoC,KAAV,IAAmB,CAAnB,GAAuB,IAAI,CAAC,EAA7B,GAAmC,KAA9D;EzB+DF,AgClCA,AvC3EA,EgC+CE,EhE/DE,AiEiCA,AjCjBA,CAAC,GhChBK,CiEiCD,QD8BQ,CAAC,AhC/ClB,EhChBsB,AgCgBF,EiCiBhB,C1B4FJ,AvC7HyB,AiEiCF,C1B4FvB,AyB9DiB,CAAf,GAA0B,EhE/DI,AiEiCF,CjEjCG,AiEiCF,CjEjCC,CuC6HhC,AvC7HyB,CuC6HzB,AyB9DkC,CAAC,CAAD,AhE/DI,CgE+DV,GAAY,CC9BpC,KD8B0C,CzB8D9C,AvC7HiD,CAAC,CgE+DD,AhE/DA,CuC6HjD,AvC7HI,GgE+DiD,CAAC,GAAL,CAAS,EzB8D5C,GyB9DmC,CzB8DjD,AyB9DE,EzB8DkB,UAApB,EAAgC,CAAhC,EAAmC,CAAnC,EAAsC,CAAtC,EAAyC,CAAzC,EAA4C,MAA5C,EAAoD,UAApD,EAA8D;IAC5D,AyB9DA,AC9BC,AjCjBD,CiCeA,CjE9BE,EuC4HI,EvC5HE,CiEgCD,E1B4FI,EvC5HE,AiEgCF,C1B4FG,CP7GD,ChCfG,CgE8DD,AhE9DE,CgE8DD,AhE9DA,AgCeA,CO6GG,CvC5HC,AiEgCF,CjEhCF,AiEgCG,CjEhCjB,EgE8DoB,CC9BX,ED8Bc,CAAV,CAAf,CC9B4B,C1B4Fd,CAAkB,AyB9DF,GhC/C9B,CO6Gc,CAAd,CyB9DoC,CAAC,AC9B9B,CD8B6B,CAAN,AC9BS,GD8BG,MAAM,GAAG,IAAI,CAAC,GAAL,CAAS,KAAT,CAAnD;AnEtEE,EmEuEH,AhC/CA,IiCiBG,GpEzCU,EoEyCL,KpEzCL,CAAkB,CoEyClB,CAAa,IpEzCb,EAAwB,CoEyCJ,CAAC,IAArB;EpExCJ,E0CoIE,A0B3FC,EjEjCC,AHRA,E0CoIE,CAAC,CvC5HC,AHRA,GAAG,C0CoIT,A1CpIF,E0CoIc,IvC5HI,GAAG,CAAjB,EAAoB;EgE+DxB,AC7BC,AjClBD,CiClDA,G1B+JI,EvC5HE,CgE8DC,AhC/CA,CgC+CC,OAAR,KhC/CA;AgCgDD,AhC/CA,EnCxBC,E0CqIG,E1CrIC,CAAC,CGSC,KAAK,CAAC,AHTA,CGSD,AHTE,CGSP,GAAW,EHTL,CAAZ,EAAsB,KGSK,GAAG,QAAxB;AgCiBR,EiC0BE,EpEnDE,EGSG,CAHD,CiE6CJ,ApEnDM,CoEmDN,EpEnDS,EGSE,IAAI,EHTE,CAAC,GoEmDlB,CAAI,EpEnDa,CAAR,CGSiB,AiE0CtB,CAAA,CpEnDwB,CGSC,CAAlB,EAAqB,IiE0ChC,CpEnDqC,CoEmDjC,ApEnDkC,MAAD,CAAnC,EoEmDF,EAAW;EpElDV,E0CoIC,A0B3FF,I1B2FQ,AvC3HF,GuC2HK,GAAG,IAAA,YAAA,EAAO,IAAP,CAAZ;IACA,IAAM,AvC3HF,KuC2HO,AvC3HF,CAAC,CAAD,CuC2HK,AvC3HV,GAAW,IAAI,CAAC,EuC2HI,CvC3HT,CAAS,CuC2HG,IAAI,CAAC,KvC3HjB,GuC2HY,CAAc,AvC3HF,GuC2HZ,EAAmB,GvC3H1C,OuC2HoD,CAAC,IAA9B,CAAH,GAAyC,CAAjE;E1CpIF,E0CqIE,EvC3HG,EuC2HG,C1CrID,IAAP,O0CqIoB,GAAG,KAAK,KAAK,KAAK,OAAL,CAAa,WAA5C;A1CpIH;AAED,I0CmII,EvC3HE,EuC2HE,EvC3HE,SAAS,CuC2Hf,EAAkB,AvC3HA,CAAhB,EAAmB;MuC4HnB,EvC3HE,GuC2HG,OAAL,CAAa,IAAb;MACA,EvC3HE,GuC2HG,EvC3HE,CAAC,CAAD,CAAL,EuC2HF,CAAa,AvC3HA,SAAS,EuC2HtB,CvC3HyB,EuC2HE,KAA3B,CvC3HE;IuC4HH,EvC3HE,CAHD,MAGO,IAAI,YAAY,GAAG,CAAnB,EAAsB;QAC3B;IuC2HJ,IvC1HI,CuC0HC,A0BzFP,IjEjCW,CAAC,CAAD,CuC0HT,AvC1HI,CuC0HS,EvC1HE,EiEiCjB,EjEjCqB,CAAC,EuC0HpB,CACE,AvC3Ha,CAAS,IuC0HxB,EAEE,MAFF,AvC1He,EuC6Hb,EvC7HsC,IuC0HxC,EAIE,EvC9HE,GuC8HG,CAAC,KAAN,GAAc,IAAI,MAJpB,EAKE,KAAK,CAAC,MAAN,GAAe,IAAI,MALrB,EAME,CANF,EAOE,CAPF,EAQE,CARF,EASE,CATF;EgC/BF,IvE1FK,AiEiCH,IMyDF,CAAA,ENzDS,KAAK,EMyDd,CAAA,KNzDE,iBMyDF,GAAA,UAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B,EAAgC,yBAAhC,EAA2D,aAA3D,EAAwE;AvC1EpE,IOqHF,AgC1CA,ANzDD,CAFU,G1BqGL,AgC1CE,CvC3EM,KuC2EA,GAAG,GhC0Cf,CPrHE,COqHgB,AgC1CE,AvC3EK,MAAvB,EAA+B,CuC2ElB,CAAe,CAAf,CAAf,OvC3EE,EAA0C;AnCxB1C,EmCyBJ,EuC2EE,EhC0CE,AvCpIA,AgCeE,EuC2EE,CNzDR,ApE3Cc,CGUN,CuCoIC,IvCpII,CAAC,CAAD,CuCoIT,AgC1Cc,AvE1FV,CuCoIS,A0BnGL,EMyDS,C1EpGjB,AmCyBkB,ChCfD,AHVO,CGUpB,CgCeiB,COqHrB,AgC1CsB,ANzD1B,EjEjC0B,AiEiCP,AjClBS,CnCzBxB,AmCyByB,EnCzBK,EGUH,CAAC,CAAD,AgCeH,ChCfF,AgCe1B,GuC2EqB,CAAmB,CAAnB,AvE1FkB,CuE0FrC,AvE1FE,EAAsC;EHT1C,AmCyBA,EOqHG,AgC1CD,ENzDA,AjClBI,EuC2EE,AvE1FF,CHVC,CoE2CD,ApE3CE,EGUI,IuE0FI,A1EpGF,CAAC,CGUG,AHVJ,C0EoGK,A1EpGZ,CoE2CS,CpE3CG,E0EoGA,ANzDA,IpE3CM,AmCyBE,CiCkBH,ApE3CE,CAAD,CAAlB,AmCyBuB,CnCzB9B,EmCyBiC,CAAC,CuC2Ef,CNzDjB,CMyDwB,KAAK,GvC3EE,CAAjC,OuC2E0B,CAAiB,CAAjB,CAAP,EAA4B,KAAK,QAAjC,CAAjB;A1EnGH,EmCyBC,EuC4EE,EN1DA,EM0DI,AvE5Fe,CgCgBd,EiCkBA,OM0DS,CN1Dd,EM0DiB,CAAC,AN1DF,CM0DG,GAAG,GN1DtB,GM0D4B,CAAC,CAAD,CAAX,CvC5Ee,CAAC,EuC4EE,UAAlB,GAA+B,CvC5EhB,EAAmB,KuC4EK,CAAC,CAAD,CAAxD,avC5EgC,CAAlC;AnCvBF,AmCwBC,IOoHG,AgCxCA,EN1DA,E1BkGI,AgCxCA,AvE5FE,EiEkCA,CjElCG,CAAC,CuCoID,G0BlGG,E1BkGE,AgCxCA,ChCwCd,AvCpIM,AiEkCS,E1BkGE,AgCxCA,CAAC,AvE5FE,EiEkCA,IM0DI,CAAC,CAAD,CAAN,EN1DH,CM0De,CAAb,AN1DjB,IM0DmC,AvE5F7B,EADF,QuE6Fa,GAA+B,QAAQ,CAAC,CAAD,CAAxD;AvC1EJ,MOmHM,EvCnIE,IAAM,IuCmIE,CAAC,GvCnIK,GAAG,CuCmInB,EvCnIsB,CuCmID,AvCnIE,IuCmIvB,0BvCnImB,CAAmC,MAAnC,CAAjB;IuCoIH,AgCxCD,ChCsCA,C0BjGA,EM2DI,EN3DA,C1BmGG,IAAI,C0BnGX,EAAY,O1BmGL,EAAgB,MgCxCvB,EAA+B;MhCyC7B,AgCxCA,EvE5FE,AiEiCF,E1BmGI,CAAC,CvCpIC,AiEiCA,CjEjCC,GuE4FG,GAAG,EvE5FX,CiEiCc,CM2DH,AvE5FI,CuCoIjB,CAAmB,A0BnGA,G1BmGnB,I0BnG0B,CM2Db,EAAK,CN3DY,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CM2DjB,CN3D2B,CM2DV,AN3DA,CAA9B,OM2Da,IAA6B,CAA1C;IhCyCD,EgCxCC,EN3DA,EjEjCI,MuE4FM,EN3DA,CM2DG,EN3DA,EM2DA,QN3DU,EM2DV,EAAK,AN3DS,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EM2Dd,AN3DwB,CAAV,CM2DG,AN3D9B,QM2Da,IAA6B,CAA1C;EhCyCH,CAhCD,CgCRG,CAHD,GvEzFK,AiEiCH,GM2DK,CN3DC,UAAU,GAAG,KAAK,aAAL,EAAnB;E1BqGJ,IgCzCI,EN3DA,IAAM,IM2DI,GAAG,AN3DA,GACV,CM0DU,SN1DA,EM0DA,CN1DG,CM0DG,AN1DjB,IACC,MMyDU,EAAkB,ENzDlB,CAAC,CAAD,CAAV,GMyDU,ANzDM,CMyDnB,SNzD6B,CAAC,CAAD,CAA1B,GAAgC,UAAU,CAAC,CAAD,CAA1C,GAAgD,UAAU,CAAC,CAAD,CAD3D,CADF;MM4DA,EvE7FE,AiEoCF,IjEpCQ,AiEoCF,IMyDI,GAAG,ANzDA,GACV,CMwDU,AvE7FM,GAAG,CAAC,KiEqCV,EMwDA,CvE7FkB,AiEqCf,CMwDG,AvE7Fa,AiEqC9B,CjErC6B,CAAR,EiEsCpB,CjEtCkC,KuE6FxB,AvE7F6B,CAAC,CuE6FZ,AvE7FW,CAApB,CiEsCT,CjEtCkC,AiEsCjC,CAAD,CAAV,GMuDU,ANvDM,CMuDnB,EvE7FuD,CAAC,CAAD,CAAR,GAAc,CiEsChC,CAAC,CAAD,CAA1B,CjEtC+D,CAAC,CAAD,AiEsC/B,CjEtCb,CAApB,QiEsC2C,CAAC,CAAD,CAA1C,GAAgD,UAAU,CAAC,CAAD,CAD3D,CADF;ApE5CA,I0EsGD,IvE5FG,AiEqCF,CpE/CU,GGUF,CiEqCH,SjErCa,CHVlB,CAAyB,CGUJ,KiEqCrB,ApE/CA,CoE+CuB,CAAC,ApE/CO,MoE+CD,CAAC,CAAD,CAAN,EjErCe,CAAC,AiEqCJ,OAAb,EjErCF,AiEqCwB,IjErCQ,EAAnD,AiEqCiD,CAAC,CAAD,CAAN,GAAY,OAAlC,CAAvB;EpE9CJ,IoE+CG,EjErCG,CHVC,CAAC,CGUC,CAAC,IHVI,CAAC,CAAD,CGUR,AHVC,EAAY,CGUC,KHVK,CAAC,CAAD,CAAlB,CAAP,MGUM,CAA8B;AHTrC,I0EsGG,ANvDD,CAnBU,KjElBH,CuE4FC,IAAA,CvE5FK,EAAE,GAAG,CAAC,kBuE4FX,EAAwB,CAAxB,EAA2B,OvE5FpB,CAAmC,EuE4F1C,EAAuC,OvE5FhC,CADoB,EuE6F3B,EAAmD,aAAnD,CAAP;A1EpGJ,E0C4IE,AgCvCC,CAjBD,OvE3EQ,QAAQ,EAAE,CiEiBP,I1BkHX,CAAA,IvCnI4B,CAAC,IuCmI7B,CAAA,GvCrIoC,KuCqIpC,GAAA,YAAA;EgCrCA,EhCsCE,IAAM,EvCnIA,KuCmIO,CvCnID,EuCmII,AvCnIF,KuCmIO,KvCnIG,CAAC,CuCmIzB;E0BnHS,CAAX,C1BoHE,IvCvIkC,CAA9B,EuCuIG,OAAO,GAAG,OAAO,CAAC,MAAX,GAAoB,IAAlC;EACD,A0BhGD,C1B6FA,GvChIK;EuCqIL,EvCpIG;EACF,CA3DD;AgC2EI,EhCdJ,OgCcc,SAAV,CAAoB,UAApB,EAAgC,MAAhC,EAAwC,WAAxC,EAAmD;EACvD,IAAM,aAAa,GAAG,YAAY,CAAC,MAAD,EAAS,WAAT,CAAlC;AnCzBI,EmC0BJ,OnC1Bc,AmC0BP,SnC1BH,CAAoB,GmC0BJ,CAAC,EnC1BjB,EAA0B,MmC0BV,EAAa,SAAb,EAAwB,UAAU,CAAC,MAAnC,CAApB;AACD,EnC1BC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAD,CAAN,GAAY,MAAM,CAAC,CAAD,CAAnB,IAA0B,CAA3B,EAA8B,CAAC,MAAM,CAAC,CAAD,CAAN,GAAY,MAAM,CAAC,CAAD,CAAnB,IAA0B,CAAxD,CAAP;AACD,AmC2BD;AnCzBA,E0EqGE,QAAA,CAAA,SAAA,CAAA,wBAAA,GAAA,UAAyB,UAAzB,EAAqC,CAArC,EAAwC,aAAxC,EAAqD;EhCwCrD,A0BhGA,EMyDE,ENzDF,CAAA,IMyDS,KAAK,ANzDd,CAAA,Q1BgGA,CAAA,SAAA,A0BhGA,C1BgGA,EgCvCS,ANzDT,CM0DI,ShCsCJ,A0BhGmB,CM0DL,CAAC,ChCsCf,AgCtCc,CADL,EAEL,IN3DJ,EAA6B,C1BgGhB,GgCrCC,ChCqCd,AgCrCe,CAAD,ChCqCG,AgCvCR,EAGL,CAHK,EAIL,KAJK,EAKL,aALK,CAAP;EAOD,CARD,ChCyCE,A0BhGA,IAAM,G1BgGC,IAAI,A0BhGE,C1BgGD,E0BhGI,KAAK,C1BgGd,EAAP,U0BhGgB,EAAhB,CAD2B,CAG3B;E1B+FD,AgChCD,ChC8BA;EAIA,AvCpIA,EiEoCE,IAAI,CjEpCN,CAAA,KiEoCa,CAAC,GjEpCd,CAAA,MiEoCM,CjEpCN,GAAA,CiEoC6B,SjEpCrB,AiEoCN,EAAsC,KjEpCxC,EAAiB,IAAjB,EAAqB;IACnB,EiEoCE,EjEpCI,GAAG,EiEoCA,CjEpCG,AiEoCF,OjEpCS,CAAC,EiEoClB,GAAqB,KAAK,WjEpChB,EAAZ,AiEoCuB,EAArB;IjEnCF,AiEoCC,CAFD,GjElCM,GiEoCC,IjEpCM,GAAG,GAAG,CAAC,IAAJ,GAAW,MAAM,CAAC,WAAlC;IACA,EiEoCE,EjEpCI,KiEoCG,CAAC,CjEpCG,GAAG,AiEoCd,GjEpCiB,AiEoCF,CjEpCG,GAAJ,CiEoCM,EjEpCI,KiEoCT,CjEpCe,CAAC,AiEoC/B,WjEpCF;AHVE,IGWF,AiEoCC,CAR0B,CAU3B,GpEjDY,EGWL,CAAC,MHXN,CGWK,AHXe,EGWL,IHXf,EAA4B,CGWvB,EAAmB,GHXxB,EAAkC,EGWH,GAAG,IAAI,CAAC,CAAD,CAAjC,EAAsC,OAAO,GAAG,IAAI,CAAC,CAAD,CAApD,CAAP;EuEkGF,AvEjGC,AHXD,CGMA,GHNI,I0E4GJ,CAAA,K1E5GA,I0E4GA,CAAA,sBAAA,GAAA,UAAuB,SAAvB,EAAgC;EvE/FhC,EuEgGE,OAAO,KAAK,YAAL,CAAkB,SAAS,CAAC,CAAD,CAA3B,CAAP;EhCkCF,AgCjCC,A1E7GD,C0E2GA,CN3DE,EpEhDE,KoEgDK,CAAC,ApEhDA,KAAK,CoEgDb,GAAiB,I1B8FnB,CAAA,A0B9FwB,MpEhDT,CAAO,E0C8ItB,CAAA,O0B9FmB,CpEhDnB,CoEgDE,CAX2B,ApErCM,CoEkDjC,Q1B4FF,GAAA,UAAoB,UAApB,EAAgC,UAAhC,EAA0C;EgC/B1C,EhCgCE,A1C9IA,I0C8II,M1C9IM,GAAG,C0C8IC,CAAC,W1C9IW,CAAC,E0C8IvB,EAAJ,EAAiC,A1C9IP,CAA1B;AmC4BE,EnC3BH,CAFD,CoEmDE,E1B6FE,G1C9IG,AmC2BO,EiCsBL,CAAC,CpEjDC,MAAM,CoEiDf,GAAmB,CpEjDC,AmC2BlB,CAA0B,GiCsBJ,GjCtBtB,EAAkC,MiCsBjB,ApEjDC,AmC2BlB,CnC3ByB,CoEiD3B,AjCtB4C,WnC3BvC,AmC2BH,EnC3BuC,AmC2BgB,SAAvD,EAAgE;EACpE,EiCuBE,ApElDA,EmC2BI,KiCuBG,GpElDG,CoEkDH,EpElDM,EmC2BI,GAAG,IiCuBb,EAAO,EAAP,CpElDoB,CoEkDT,ApElDU,EmC2BI,CAAC,GnC3BN,CoEkDpB,ApElDP,EoEkD2B,AjCvBK,EAAS,QiCuBlC,CAAP,EjCvBgC,CAAlC;EiCwBC,ApElDA,AmC2BD,CiCMA,ApEnCO,MAEA,AmC2BA,InC3BI,AmC2BJ,MnC3BU,KAAK,WmC2Bf,EAAe,EnC3BA,CAAO,GmC2BtB,E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2B,UAA3B,EAAuC,IAAvC,EAA2C;IACzC,AgCpCC;EACF,AvEpGD,CuE4FA,ChC4CE,IAAM,CvCxIR,CAAA,SAAA,CAAA,CuCwIqB,GAAG,IAAA,WvCxIxB,CuCwIwB,EAAO,AvCxI/B,UuCwIwB,CAAtB,CvCxIF;EuEsGA,EvErGE,IAAM,GAAG,GAAG,KAAK,MAAL,EAAZ;IuCwIA,AvCvIA,IuCuII,AvCvIE,EuCuIA,MvCvIQ,GAAG,IuCuIE,CvCvIG,GuCuIC,QvCvIN,CuCuIb,CAAJ,AvCvIA,EuCuImC;AP/GjC,MOgHA,GPhHU,MOgHD,CAAC,UPhHV,CAA4B,EOgHnB,CAAT,GAA2B,EAA3B,EPhHA,EAAsC;EAC1C,EOgHG,AvCxID,IAAI,CAAC,GAAD,IAAQ,AgCwBA,ChCxBC,EgCwBE,ChCxBC,CAAC,CgCwBC,CAAC,QhCxBN,EAAT,AgCwBc,CAApB,GhCxBmC,CAAC,QAAlC,EAA4C;AgCyB/C,MhCxBK,KAAK,UAAL,CAAgB,KAAhB;AgC0BN,IO8GI,EvCvIE,OuCuIO,CAAC,aAAD,CAAT,CAAyB,IAAI,CAAC,MAAL,EAAzB,IAA0C,IAA1C;EACD,CAPD,CvChIG;AHVC,E0CmJJ,O1CnJc,iBAAV,CACJ,MADI,EAEJ,UAFI,EAGJ,QAHI,EAIJ,IAJI,EAKJ,UALI,EAKM;EAEV,EGKE,EHLI,EGKE,AHLA,GAAI,EGKC,GAAG,GAAG,CAAC,CHLE,GAAG,IAAI,CAAC,CAAD,CAAlB,GAAyB,CAApC,OGKgB,CAA2B,QAA3B,CAAd;EiE0CF,ApE9CA,EGKE,EiEyCF,ApE9CM,CoE8CN,CjEzCQ,AHLA,GAAI,IGKG,CiEyCf,CAAA,CjEzCkB,GAAG,AHLC,CGKA,EiEyCtB,ApE9CyB,GoE8CzB,CpE9C6B,CGKX,AHLY,CAAD,CGK3B,AHLS,GAAyB,CAApC,EoE8CQ,QAAR,EAAgB;EpE7ChB,EGKE,AiEyCA,EpE9CI,EoE8CA,CjEzCC,IiEyCI,IpE9CM,CoE8CX,EpE9Cc,IoE8CE,ApE9CE,CoE8CD,ApE9CE,GAAL,CAAS,CoE8CD,CjEzC1B,CAA4B,KAA5B,AHLkB,CAApB,CGKqC,GiEyCd,EAArB,EjEzCA,AiEyC0C;AjCjBxC,EhCvBH,AHLD,CGNA,GiEoDI,ApE9CE,GmC4BQ,EiCkBL,MpE9CQ,GAAG,IAAI,CAAC,GAAL,AmC4BhB,CiCkBA,ApE9CyB,CoE8CD,CAAxB,AjClB6B,MnC5Bb,CAApB;EGOA,AHNA,AmC4BA,EiCkBG,EpE9CG,IAAI,GAAG,EAAE,CmC4BD,EnC5BI,CmC4BD,IAAjB,MnC5BA;AmC6BD,EnC5BC,IAAM,IAAI,GAAG,EAAE,GAAG,WAAlB;AmC8BF,EnC7BE,EoE6CE,EpE7CI,EoE6CE,EpE7CE,EoE6CE,CpE7CC,EoE6CE,ApE7CA,GAAG,CoE6CC,KAAJ,CAAU,IpE7CzB,KoE6CkC,CAAC,MAApB,CAAb;EpE5CF,IAAM,IAAI,GAAG,EAAE,GAAG,WAAlB;EACA,EoE4CE,EpE5CI,CAAC,EoE4CA,CpE5CG,GoE4CC,CAAC,EpE5CI,CoE4CD,ApE5CE,CoE4Cf,ApE5Cc,CAAhB,CoE4CkB,CAAC,GAAG,IAAI,CAAC,MAAzB,EAAiC,EAAE,CAAnC,EAAsC;EpE3CxC,IoE4CI,ApE5CE,CAAC,GoE4CC,ApE5CE,MAAM,CoE4CD,ApE5CE,CAAD,CAAhB,CoE4CkB,SAAS,CAAC,CAAD,CAAvB;EpE3CJ,IAAM,EAAE,GAAG,CAAC,GAAG,IAAJ,GAAW,IAAtB;E0E0GA,AvErGA,AHJA,IoE2CI,ApE3CE,EAAE,CGIR,CuEqGA,AvErGA,AiEuCQ,CM8DR,A1EzGW,CAAC,GAAG,EoE2CA,CAAC,CjEvChB,AHJW,C0EyGX,AvErGA,CuEqGA,C1EzGsB,EoE2ClB,EAAoB,ApE3CxB,Y0EyGA,GAAA,CvErGA,GAAA,MuEqGkB,IvErGK,KAAvB,CuEqGA,CvErG8B,CuEqGA,MvErG9B,EAAqC,KuEqGrC,EAA2C;E1ExG3C,E0EyGE,AvErGA,EHJI,E0EyGE,AvErGA,AiEuCF,ApE3CE,C0EyGC,E1EzGE,C0EyGC,A1EzGA,CGIC,EiEuCA,ApE3CE,C0EyGH,AvErGI,EiEuCA,CpE3CL,EGIU,CiEuCL,ApE3CM,IAAtB,EGIgB,CAAa,IiEuCb,CjEvCd,CiEuCqB,EAAP,EAAW,CM8Df,EACR,IN/DY,CM+DP,AN/DH,YM8DM,EAER,UAFQ,EAGR,aAAa,IAAI,CAHT,CAAV;E1ExGF,E0E6GE,AvEzGA,EHJI,EGIE,AiEuCF,ApE3CE,G0E6GC,A1E7GE,CAAC,EGIE,CuEyGL,ANlEI,ApE3CE,CoE2CD,CjEvCG,EHJN,GGIW,AiEuChB,ApE3CgB,GoE2CC,CMkEd,A1E7GT,E0E6Ge,CAAN,ANlEc,EMkEL,AvEzGD,EAAf,GuEyGqB,OAAd,EAAuB,KAAK,GNlEd,EACf,EMiEC,CAAP,INjEa,CAAC,MADO,EAEf,KAAK,aAAL,EAFe,CAAjB;EMmEL,A1E7GD,C0EsGA,CvEjGE,EiEyCG,ApE9CC,EGKE,AHLA,GAAG,CAAC,GAAG,IGKI,AHLR,GGKW,AHLA,IAAtB,CGK2B,cAAL,EAApB;AgCuBE,EuCmFJ,A1E9GA,EGME,EHNI,EAAE,CGMD,AgCqBO,EnC3BH,CAAC,GAAG,IGMb,AHNS,CGMO,EHNI,EGMpB,EHNF,AmC2BI,GAA2B;EnC1B/B,AmC2BA,EhCpBE,EiEsCE,ApE7CE,EGOE,AHPA,CGOC,AgCoBF,CiCkBC,CpE7CG,CGOC,AHPA,GAAG,CGOC,CAAC,AiEsCF,CAAC,CpE7CL,GGOC,AHPU,CGOC,AgCoBvB,CiCkBI,EAAoB,ApE7CxB,EGO4B,CAAC,CAAD,CAAL,GAAW,MAAM,CAAC,CAAD,CAA5B,IAAmC,IAA7C;AgCqBH,EnC3BC,EGOE,EHPI,EGOE,AiEsCF,ApE7CE,CGOC,EHPE,CGOC,AHPA,GoE6CC,ApE7CE,CGOC,CAAC,CiEsCD,CpE7CL,GGOC,AiEsCI,ApE7CM,CGOC,GHPvB,EGO4B,CAAC,CAAD,CAAL,EiEsCP,CjEtCkB,CiEsCX,EAAP,EAAW,CjEtCa,CAAC,CAAD,CAA5B,GiEsCI,CjEtC+B,AiEsCzC,IjEtCJ;AgCsBJ,EnC5BE,EGOE,IAAI,AiEsCA,CpE7CC,GGOG,GAAG,AiEsCA,CAAC,GjEtCZ,GiEsCI,CpE7Ce,CACnB,CoE4CqB,GpE5CjB,CoE4CiB,ApE5ChB,GAAL,CAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CADmB,EAEnB,GoE2CqB,CpE3CjB,CoE4CE,ApE5CD,GAAL,CAAS,EAAT,CoE4Ca,CAAC,ApE5CD,EAAb,EAAiB,EoE2CI,ApE3CrB,EoE6CM,ApE7Ce,EAArB,CAFmB,EoE+CR,ApE5CX,IAAI,CAAC,GAAL,CAAS,EAAT,EoE4CM,ApE5CO,EoE0CQ,ApE1CrB,CoE0CI,CpE1Ca,EAAjB,EAAqB,EAArB,CAHmB,EAInB,IAAI,CAAC,GAAL,CAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CAJmB,EAKnB,UALmB,CAArB;AAOD,E0CqIC,EvCpIE,EiEyCG,EjEzCC,IAAI,GAAG,IAAX,MuCoIF,CAAA,SAAA,CAAA,iBAAA,GAAA,UACE,UADF,EAEE,UAFF,EAGE,QAHF,EAIE,UAJF,EAKE,UALF,EAME,MANF,EAOE,QAPF,EAQE,OARF,EASE,gBATF,EASkB;A1C5IpB,I0C8II,IAAM,aAAa,GAAG,IAAA,YAAA,EAAO,UAAP,CAAtB;EgCxCF,EvEtGE,EiEyCE,EjExCA,EuEqGJ,AN7DQ,CM6DR,AN7DS,CAAD,CAAJ,GAAU,GjExCC,CuEqGf,CAAA,EvErGmB,AiEwCf,kBM6DJ,GAAA,MvErGmB,CAAmB,GuEqGjB,MAArB,EAA2B,CvErGvB,IACA,WAAW,IAAI,2BAAA,CAAmB,YADlC,IAEA,WAAW,IAAI,2BAAA,CAAmB,SAHpC,EAIE;IuC2IF,AgCxCA,AN7DC,EjErCC,EuC0IE,AgCxCE,EhCwCA,AvC1IA,GAAG,CuEkGG,GAAG,GvElGb,EuEkGkB,ChCwCD,IAAI,OgCxCR,CAAkB,EhCwCA,CAAC,GgCxClC,QhCwCI,CAAJ,EAAgD;IgCvChD,AvElGC,CAND,CuCgJE,EgCxCI,GvElGC,IACL,CuCyIU,CAAC,KgCxCO,GAAG,CvEjGV,EuCyIX,CAAuB,AgCxCE,CvEjGV,IuEiGM,CAAU,MAAV,ChCwCrB,AgCxCF,IhCwC0C,EAAxC,SvCzIe,CAAmB,aAAlC,IACA,WAAW,IAAI,2BAAA,CAAmB,aADlC,IAEA,WAAW,IAAI,2BAAA,CAAmB,UAH7B,EAIL;IuCuID,A0BtGD,EjEhCE,GiEgCG,CjEhCC,GAAG,MAAP,KiEgCF,CAAqB,KAArB,CAA2B,IAA3B,EAAiC,IAAjC;AjCnBE,EiCoBH,CAxBD,CMqFE,AvE7FC,KuE6FI,AvCjFO,IuCiFH,CAAC,GAAG,KAAK,AvCjFhB,GAAuB,IuCiFzB,EAA2B,CAAC,GAAG,MAA/B,EAAuC,EAAE,CAAzC,EAA4C;EN3D9C,AjCrBA,EOyHE,EgCxCE,EhCwCI,WAAW,APzHF,CuCiFC,AvCjFA,CuCiFC,ChCwCG,AgCxCJ,CAAd,GAAoB,KAAK,AvCjFZ,COyHe,APzHhC,COyHiC,WAAX,CAAuB,WgCxCrB,CAA+B,ChCwCjC,CAApB,IgCxCsB,EAAuC,CAAvC,CAApB;AvChFL,IOyHG,AgCxCC,AvE9FD,IuCsIM,AvCrIJ,SuCqIa,EvCrIF,CuCqIK,GvCrID,OuCqIW,CAAC,SAA7B,UvCrIiB,CAAmB,WAAlC,IACA,WAAW,IAAI,2BAAA,CAAmB,aADlC,IAEA,WAAW,IAAI,2BAAA,CAAmB,YAHpC,EAIE;AHXA,AmCsBN,IOwHI,EvClIE,EuCkII,C1C9IM,CGYN,GAAG,EuCkII,GAAG,A1C9Id,CAAoB,CGYpB,KHZA,C0C8IsB,CAAC,A1C9IG,U0C8IZ,EAAhB;E1C7IF,E0C8IE,AgCzCA,AvEzFC,CAND,GuCwII,CgCzCC,A1ErGA,EGYE,IACL,AHbS,CAAC,C0C8IC,A1C9IF,CAAN,E0C8IW,CAAhB,A1C9IiB,G0EqGjB,EvExFa,CuEwFU,A1ErGA,CAAC,CAAD,CGaN,AHbnB,W0EqGE,gBvExFiB,CAAmB,WAAlC,IACA,WAAW,IAAI,2BAAA,CAAmB,aADlC,IAEA,WAAW,IAAI,2BAAA,CAAmB,YAH7B,EAIL;AHfL,E0EqGE,CAPD,ChCgDE,EvC9HE,EuC8HE,EvC9HE,EuC8HN,CvC9HS,CuC8HC,KvC9HR,IuC8HF,EAAqB,cAArB,EAAqC,CAArC,EAAwC,CAAxC,EAA2C,CAA3C;A1C5IJ,EoEuCE,EjExBG,EiEwBH,CAAA,SAAA,CAAA,eAAA,GAAA,UAAgB,QAAhB,EAAwB;EM6D1B,EhCyCI,A0BrGA,IAAI,C1BqGC,AgCzCT,ChCyCU,GAAG,IgCzCb,GhCyCI,EAAkB,A0BrGA,C1BqGC,E0BrGE,E1BqGE,O0BrGO,C1BqG9B,A0BrG+B,E1BqGE,EAAE,CAAnC,C0BrGA,C1BqGsC;AgCxoB1C,CAAA,EAAA,CvE2gBI,AiEyBA,E1BqGE,EvC9HI,AiEyBF,O1BqGO,C0BrGX,CjEzBe,CuC8HD,EvC9HI,MuC8HI,CAAC,MvC9HL,MAAA,CAAa,IAAb,EAAiB,IAAjB,EuC8HJ,AvC9HqB,CuC8Hc,KvC9H/B,CuC8HJ,AvC9H0B,EuC8HiB,CAA3C,CvC9HI,CuC8H0C,CvC9HhB,QuC8H9B,CAAZ,KvC9HgB,EAA0B,MAA1B,CAAyC,CAAzC,EAA0C,IAA1C,EAA0C,MAA1C,CAA+C,CAA/C,EAAgD,GAAhD,CAAlB;MuC+HE,cAAc,GAAG,QAAQ,CAAC,aAAT,CAAuB,CAAvB,CAAjB;IvC9HF,AiEyBA,IjEzBI,AiE0BF,KjE1BO,EuEqFE,MvErFP,CAAc,AiE0BF,GAAG,CAAjB,IACA,EjE3BE,IAA4B,CiE2BvB,QjE3BT,CiE2BkB,CjE3ByB,AiE2BxB,cAAc,GAAG,CAAlB,CAAhB,KAAyC,UAF3C,EAGE;M1BmGA,AvC9HA,AiE4BA,K1BkGK,AvC9HA,CuC8HC,E0BlGE,C1BkGC,E0BlGE,EjE5BX,CAAc,IuC8HI,CAAC,C0BlGC,CAAC,E1BkGrB,CvC9HA,CuC8HyB,CAAC,CvC9HC,GuC8HG,K0BlGK,CjE5BnC,EiE4BsC,C1BkGC,A0BlGnB,C1BkGoB,A0BlGxC,I1BkGA,EAA8C,EAAE,CAAhD,EAAmD;APvHnD,MhCNA,AiE4BA,E1BkGE,A0BlGA,CjCtBQ,EhCNL,CAAC,CuC8HC,CAAC,GAAG,IvC9HX,CiE4BA,EjE5BkB,CgCMlB,COwHoB,APxHO,COwHN,IAAnB,EAAyB,AvC9H3B,CuC8H4B,AvChIa,CAGzC,CgCKA,EOwHgC,APxHO,SOwHE,CAAC,IAAxC,EAA8C,APxHhD,EOwHkD,APxHK,COwHrD,EAAmD;A1C5IrD,EmCqBJ,EiCsBG,EjCtBC,CAAC,EnCrBS,C0C6IN,IAAI,OPxHZ,COwHoB,CPxHC,EOwHE,CAAX,E1C7IR,CAA8B,C0C6IN,M1C7IxB,C0C6II,C1C7ImC,C0C6I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","file":"Identify.ad0b8e74.js","sourceRoot":"..","sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ (\n    (function () {\n      throw new Error('Unimplemented abstract method.');\n    })()\n  );\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/render/Event~RenderEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/render/Event~RenderEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n\n/**\n * @param {number} opacity Opacity (0..1).\n * @return {string} CSS opacity.\n */\nexport function cssOpacity(opacity) {\n  return opacity === 1 ? '' : String(Math.round(opacity * 100) / 100);\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  !!(\n    ua.indexOf('version/15.4') >= 0 ||\n    ua.match(/cpu (os|iphone os) 15_4 like mac os x/)\n  );\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (opt_canvasPool && opt_canvasPool.length) {\n    canvas = opt_canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', opt_Context2DSettings)\n  );\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {import(\"./OverlayPositioning.js\").default} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport?\n * If `true` (deprecated), then `autoPanAnimation` and `autoPanMargin` will be\n * used to determine the panning parameters; if an object is supplied then other\n * parameters are ignored.\n * @property {PanOptions} [autoPanAnimation] The animation options used to pan\n * the overlay into view. This animation is only used when `autoPan` is enabled.\n * A `duration` and `easing` may be provided to customize the animation.\n * Deprecated and ignored if `autoPan` is supplied as an object.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning. Deprecated and ignored\n * if `autoPan` is supplied as an object.\n * @property {PanIntoViewOptions} [autoPanOptions] The options to use for the\n * autoPan. This is only used when `autoPan` is enabled and has preference over\n * the individual `autoPanMargin` and `autoPanOptions`.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    let autoPan = options.autoPan;\n    if (autoPan && 'object' !== typeof autoPan) {\n      autoPan = {\n        animation: options.autoPanAnimation,\n        margin: options.autoPanMargin,\n      };\n    }\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|false}\n     */\n    this.autoPan = /** @type {PanIntoViewOptions} */ (autoPan) || false;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(\n      options.positioning !== undefined\n        ? /** @type {import(\"./OverlayPositioning.js\").default} */ (\n            options.positioning\n          )\n        : OverlayPositioning.TOP_LEFT\n    );\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./PluggableMap.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./PluggableMap.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {import(\"./OverlayPositioning.js\").default} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {import(\"./OverlayPositioning.js\").default} */ (\n      this.get(Property.POSITIONING)\n    );\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./PluggableMap.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [opt_panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(opt_panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    const panIntoViewOptions = opt_panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {import(\"./OverlayPositioning.js\").default} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == OverlayPositioning.BOTTOM_RIGHT ||\n      positioning == OverlayPositioning.CENTER_RIGHT ||\n      positioning == OverlayPositioning.TOP_RIGHT\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.CENTER_CENTER ||\n      positioning == OverlayPositioning.TOP_CENTER\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == OverlayPositioning.BOTTOM_LEFT ||\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.BOTTOM_RIGHT\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == OverlayPositioning.CENTER_LEFT ||\n      positioning == OverlayPositioning.CENTER_CENTER ||\n      positioning == OverlayPositioning.CENTER_RIGHT\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n      // @ts-ignore IE9\n      style.msTransform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [opt_background] Background color.\n   */\n  setBackground(opt_background) {\n    this.background_ = opt_background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}. Components\n * like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link import(\"../PluggableMap.js\").default#forEachLayerAtPixel map.forEachLayerAtPixel()} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map~Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return null;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  const canvas = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  pixelContext = canvas.getContext('2d');\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../PluggableMap.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../PluggableMap.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   * @param {string} [opt_backgroundColor] Background color.\n   */\n  useContainer(target, transform, opacity, opt_backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      target.style.opacity === '' &&\n      opacity === 1 &&\n      (!opt_backgroundColor ||\n        (target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(opt_backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      if (opt_backgroundColor) {\n        style.backgroundColor = opt_backgroundColor;\n      }\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    const x = Math.round(renderPixel[0]);\n    const y = Math.round(renderPixel[1]);\n    let pixelContext = this.pixelContext_;\n    if (!pixelContext) {\n      const pixelCanvas = document.createElement('canvas');\n      pixelCanvas.width = 1;\n      pixelCanvas.height = 1;\n      pixelContext = pixelCanvas.getContext('2d');\n      this.pixelContext_ = pixelContext;\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n    let data;\n    try {\n      pixelContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        this.pixelContext_ = null;\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Radians\n   * @api\n   */\n  RADIANS: 'radians',\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': Units.METERS,\n  '9002': Units.FEET,\n  '9003': Units.USFEET,\n  '9101': Units.RADIANS,\n  '9102': Units.DEGREES,\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.RADIANS] = 6370997 / (2 * Math.PI);\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [opt_precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  const numberString =\n    opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [opt_disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(opt_disable) {\n  const hide = opt_disable === undefined ? true : opt_disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  This includes all API\n * methods except for those interacting with tile grids.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/renderer/canvas/common\n */\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n\n/**\n * Context options to enable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_ENABLED = {\n  imageSmoothingEnabled: true,\n  msImageSmoothingEnabled: true,\n};\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './renderer/canvas/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {object} [opt_interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n\n  if (!opt_interpolate) {\n    assign(context, IMAGE_SMOOTHING_DISABLED);\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n\n  if (!opt_interpolate) {\n    assign(stitchContext, IMAGE_SMOOTHING_DISABLED);\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !opt_interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [opt_renderEdges] Render reprojection edges.\n   * @param {boolean} [opt_interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!opt_interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {IMAGE_SMOOTHING_DISABLED, IMAGE_SMOOTHING_ENABLED} from './common.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (!(tile instanceof ImageTile || tile instanceof ReprojTile)) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      return this.getImageData(tile.getImage(), col, row);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(\n      target,\n      canvasTransform,\n      layerState.opacity,\n      this.getBackground(frameState)\n    );\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      assign(context, IMAGE_SMOOTHING_DISABLED);\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    assign(context, IMAGE_SMOOTHING_ENABLED);\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n      const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (opt_isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to contruct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [opt_highWaterMark] High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [opt_options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        opt_extent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, opt_tileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        opt_tileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    if (!this.tileGrid) {\n      return null;\n    }\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.getInterpolate()\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [opt_options] XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n","const map=$('#map').data('map');\r\nconst mapLayers=map.getLayers();\r\n\r\nexport function getLayerByName(layerName){\r\nlet layer = null;\r\n\r\nmapLayers.forEach(lyr => {\r\n    if(lyr.get('name')===layerName)\r\n    layer=lyr;\r\n});\r\nreturn layer;\r\n}","import 'ol/ol.css';\r\nimport Overlay from 'ol/Overlay';\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport View from 'ol/View';\r\nimport XYZ from 'ol/source/XYZ';\r\nimport {toLonLat} from 'ol/proj';\r\nimport {toStringHDMS} from 'ol/coordinate';\r\nimport {getLayerByName} from './customFunctions';\r\n\r\nconst map = $('#map').data('map');\r\n/**\r\n * Elements that make up the popup.\r\n */\r\nconst container = document.getElementById('popup');\r\nconst content = document.getElementById('popup-content');\r\nconst closer = document.getElementById('popup-closer');\r\n\r\n/**\r\n * Create an overlay to anchor the popup to the map.\r\n */\r\nvar overlay = new Overlay({\r\n  element: container,\r\n  autoPan: true,\r\n    autoPanAnimation: {\r\n      duration: 250\r\n  },\r\n});\r\n\r\n/**\r\n * Add a click handler to hide the popup.\r\n * @return {boolean} Don't follow the href.\r\n */\r\ncloser.onclick = function () {\r\n  overlay.setPosition(undefined);\r\n  closer.blur();\r\n  return false;\r\n};\r\n\r\nconst key = 'Get your own API key at https://www.maptiler.com/cloud/';\r\nconst attributions =\r\n  '<a href=\"https://www.maptiler.com/copyright/\" target=\"_blank\">&copy; MapTiler</a> ' +\r\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">&copy; OpenStreetMap contributors</a>';\r\n\r\n/**\r\n * Create the map.\r\n */\r\nmap.addOverlay(overlay);\r\n/**\r\n * Add a click handler to the map to render the popup.\r\n */\r\nmap.on('singleclick', function (evt) {\r\n  const coordinate = evt.coordinate;\r\n  const hdms = toStringHDMS(toLonLat(coordinate));\r\n//Getting The Layer Source: getting the layer itself, and then getting its sourcw\r\n//Create a function to get the layer by name\r\n\r\n//Get The Layer by its name\r\nconst CrimeTALayer=getLayerByName('City');\r\nconst CrimeTASource=CrimeTALayer.getSource();\r\n// const CrimeAreaLayer=getLayerByName('CrimeArea');\r\n// const CrimeAreaSource=CrimeAreaLayer.getSource();\r\nconst view=map.getView();\r\nconst resolution=view.getResolution();\r\nconst projection=view.getProjection();\r\n\r\n\r\n//แสดง pop up เมื่อคลิ๊ก\r\n\r\nconst CrimeTAInfo =$('#Crime-Info');\r\nCrimeTAInfo.html('');\r\nconst CrimeAreaInfo =$('#Crime-Area-Info');\r\nCrimeAreaInfo.html('');\r\nconst noFeatures=$('no-features-Info');\r\nnoFeatures.html('<p>No features info</p>')\r\n\r\nconst CrimeTAUrl=CrimeTASource.getFeatureInfoUrl(coordinate,resolution,projection,\r\n{'INFO_FORMAT':'application/json'});\r\n\r\n// const CrimeAreaUrl=CrimeAreaSource.getFeatureInfoUrl(coordinate,resolution,projection,\r\n//     {'INFO_FORMAT':'application/json'});\r\n\r\nif(CrimeTAUrl)\r\n{\r\n    $.ajax({\r\n        url:CrimeTAUrl,\r\n        method: 'GET',\r\n        success:function(result){\r\n            console.log(result);\r\n            const CrimeTA=result.features[0];\r\n            if(CrimeTA){\r\n\r\n            \r\n            const CrimeTAName=CrimeTA.properties.ta2022_v1_;\r\n            const CrimeTAName2=CrimeTA.properties.ta2022_v_1;\r\n            const CrimeTAArea=CrimeTA.properties.land_area_;\r\n\r\n            // const CrimeTAInfo =$('#Crime-Info');\r\n            CrimeTAInfo.html(`<h5>Territorial Authority Info</h5>\r\n           \r\n            <p>Name: ${CrimeTAName2}</p>\r\n            <p>Area (sqm): ${CrimeTAArea.toFixed(2)}</p>`);\r\n            noFeatures.html('');\r\n        }\r\n        }\r\n    })\r\n\r\n    // if(CrimeAreaUrl)\r\n    // {\r\n    //     $.ajax\r\n    //     ({\r\n    //         url:CrimeAreaUrl,\r\n    //         method: 'GET',\r\n    //         success:function(result)\r\n    //         {\r\n    //             console.log(result);\r\n    //             const CrimeArea=result.features[0];\r\n    //             if(CrimeArea){\r\n    //             const CrimeAreaName=CrimeArea.properties.areaunitna;\r\n    //             const CrimeAreaName2=CrimeArea.properties.tlaname;\r\n    //             // const CrimeAreaArea=CrimeArea.properties.land_area_;\r\n    //             // const CrimeAreaInfo =$('#Crime-Area-Info');\r\n    //             CrimeAreaInfo.html(`<h5>Crime Area unit Info</h5>\r\n    //             <p>Crime Area Name: ${CrimeAreaName}</p> \r\n    //             <p>Crime Area Name2: ${CrimeAreaName2}</p>\r\n    //             `);\r\n    //             noFeatures.html('');\r\n    //             }\r\n    //         }\r\n    //     })\r\n    // }\r\n    \r\n\r\n\r\n\r\n}\r\n{\r\n\r\n   \r\n\r\n\r\n\r\n}\r\n//   content.innerHTML = '<p>You clicked here:</p><code>' + hdms + '</code>';\r\n  overlay.setPosition(coordinate);\r\n});\r\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}